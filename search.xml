<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/12/25/token/"/>
      <url>/2023/12/25/token/</url>
      
        <content type="html"><![CDATA[{"credentials":{"accessKeyId":"AKIDbnmF7xcJANKTLF300HUUtLcTv1CfxlTgg7gPlgCSG4B-7Oco_3c3FDq-3--U4lnl","secretAccessKey":"JYAIL96qTu5nEQlD3lSCK9JCVRGI4IivZT7m55Czemk=","sessionToken":"UCKaISR7g8LD81JhT5HTPO5hkT3G0ema205c5e075589d5907431210d77cca64fyc5w9EF7yz11bfcljqaiOSM-R3EY_eCFXOI9bHO07BpIp8JOAgwTNlw9MlF2fV096ZNXrZDw5r3Ix0tQP7gyQ1K_LebPDWWT2NIy4ATF56usFP2SjCru11oAMPN964vGcDu5VXDYf-9TMUGmfkomGYzTAg2CU-QUuV5LHWjIZ-fp5oWDQp8s3v_NaIwgxfyMnFSbT4AlwdL-OCTjRsyAAUraTNoIyP2yRsUfB4A5X5kgubHS0TEsGIt1_3U6JF-30t6yfeL3cQMO9W-utCz49PkNojySwyvbYxgGaz63V7-UE2-9kBFccVqPdIbYHCKJMR0UmmEZdF9sGDFLBHXlyBiEtuR_oLpnV40JjnrVWM_G0RLpvTj2Bo1EXxh0SZfmds4Gn2g0JnCQvjwlwu-1DtuLSK07qzhB1c6iMeC3BVZXAzYrlE28ctHSXLT1_c2EmQsv9SRTQnUVgVIgPLNFaK7r0-dVQeUnxIe1bRxs_SvoJHlpikpDPgMvpMHP4yU6n_5sL1CcYaEs-6BNTVI1F_vn61sYngR3LCQCIT2toS5f6uTUXR71PQNA44zG_XnWaoyOXFT2rnsabL0HPIMN1Q4wb4Qsb5QnFsiZWjBIAXtvVemFF8KA5Mm9FpUnSkdm"},"s3Bucket":"s-bj-6247-doge-storage-1258813047","s3Endpoint":"https://cos.ap-beijing.myqcloud.com"}]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小巧的内存清理软件——MemReduct</title>
      <link href="/2023/12/25/%E5%B0%8F%E5%B7%A7%E7%9A%84%E5%86%85%E5%AD%98%E6%B8%85%E7%90%86%E8%BD%AF%E4%BB%B6%E2%80%94%E2%80%94MemReduct/"/>
      <url>/2023/12/25/%E5%B0%8F%E5%B7%A7%E7%9A%84%E5%86%85%E5%AD%98%E6%B8%85%E7%90%86%E8%BD%AF%E4%BB%B6%E2%80%94%E2%80%94MemReduct/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Mem Reduct是一个大小仅有400KB的，无广告且免费的，可以实现一键清理电脑内存的小软件。</p><p>目前这个软件最后更新时间为2022.01.25，最新版本为v3.4</p><p>GitHub项目地址<a class="link" href="https://github.com/henrypp/memreduct">MemReduct <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>下载地址<a class="link" href="https://duojiyun.常子儒.xyz/software/memreduct-3.4.exe">memreduct-v3.4.exe <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/25/f7bf81a4800b4f3664d9b53ff50da83d.png" alt="image-20231225160852157"></p><p>​软件支持显示中文。如果你安装好了之后发现软件显示英文的话，依次点击【Setting】，【Language】，【Chinese(Simplified）】就可以让它显示中文简体。</p><p>软件使用方法非常简单：打开软件，点击【清理内存】就能清理电脑内存：</p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/25/429314efc4a36cd562253a308420d471.png" alt="image-20231225161015381"></p><p><strong>常用设置</strong></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/25/c6bf2c967a95f184e8d443addcd7d17f.png" alt="image-20231225161141759"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/25/ddbe56e79d1dd21579eeab91e319f37a.png" alt="image-20231225161300931"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑清理 </tag>
            
            <tag> 内存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>温度监控软件——CoreTemp</title>
      <link href="/2023/12/22/%E6%B8%A9%E5%BA%A6%E7%9B%91%E6%8E%A7%E8%BD%AF%E4%BB%B6%E2%80%94%E2%80%94CoreTemp/"/>
      <url>/2023/12/22/%E6%B8%A9%E5%BA%A6%E7%9B%91%E6%8E%A7%E8%BD%AF%E4%BB%B6%E2%80%94%E2%80%94CoreTemp/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>​最近总是感觉电脑温度比较高，鲁大师显示一直是40度，也就没管，直到后面电脑用的发烫了，鲁大师还显示40度，就感觉不太对劲，打开鲁大师界面一看，好家伙，需要升级会员才能看电脑温度，不光如此，CPU使用率、GPU使用率和内存占用率也一直不动。</p><p>​所以我就打算换一个电脑温度、内存监控软件，就找到了这个简洁小巧的软件——Core Temp</p><p>​软件官网<a class="link" href="https://www.alcpu.com/CoreTemp/">Core Temp <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/12/22/6f42ed56e21e0098a72491054e1344b2.png" alt="image-20231222130530188" style="zoom:67%;"><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/12/22/7bbccf972925988dc2f77966d6544cc4.png" alt="image-20231222130612704"><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/22/7d80c528d47e3bfef4858c860e42e550.png" alt="image-20231222130742816"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/22/bf1df39e13bc83966db3b5be97416df7.png" alt="image-20231222130828328"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/22/edf2b07390c160241955cf3d05e1c7c5.png" alt="image-20231222130839543"></p><p>剩下就让它自己安装完。</p><h4 id="推荐设置"><a href="#推荐设置" class="headerlink" title="推荐设置"></a>推荐设置</h4><p>找到<code>选项</code>——<code>设置</code></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/22/bac6a2a012fe84305d2d33310f4adbff.png" alt="image-20231222131248478"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/22/b63eeb4195cc08960a38739078163dc6.png" alt="image-20231222131418779"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/22/2a8a217101017e44f885337a0d8bfb4b.png" alt="image-20231222131731594"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/22/bb093978d94ed2fedebaf36369a50e61.png" alt="image-20231222131858069"></p><h4 id="CoreTemp-优势？"><a href="#CoreTemp-优势？" class="headerlink" title="CoreTemp 优势？"></a>CoreTemp 优势？</h4><ol><li><p>可监测处理器信息，包含CPU 温度、主频、功率 </p></li><li><p>可监测内存占用率</p></li><li><p>极友好的系统托盘展示模式</p></li><li><p>极低的系统资源占用</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 温度检测 </tag>
            
            <tag> 实用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二十届华为杯数学建模竞赛E题思路、实现过程与最终论文</title>
      <link href="/2023/12/14/%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%B1%8A%E5%8D%8E%E4%B8%BA%E6%9D%AF%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9BE%E9%A2%98%E6%80%9D%E8%B7%AF%E3%80%81%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E4%B8%8E%E6%9C%80%E7%BB%88%E8%AE%BA%E6%96%87/"/>
      <url>/2023/12/14/%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%B1%8A%E5%8D%8E%E4%B8%BA%E6%9D%AF%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9BE%E9%A2%98%E6%80%9D%E8%B7%AF%E3%80%81%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E4%B8%8E%E6%9C%80%E7%BB%88%E8%AE%BA%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p>​第二十届华为杯数学建模竞赛比赛时间是2023年9月22日上午8：00至2023年9月26日12：00，具体日程表如下图：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/12/14/c9f6b690ec5d0bdc400c6ba7888e7788.png" alt="image-20231214203757846" style="zoom:67%;"><p>比赛赛题共有A、B、C、D、E、F共六个赛题，其中主题分别为：</p><ul><li><strong>A：WLAN网络信道接入机制建模</strong></li><li><strong>B：DFT类矩阵的整数分解逼近</strong></li><li><strong>C：大规模创新类竞赛评审方案研究</strong></li><li><strong>D：区域双碳目标与路径规划研究</strong></li><li><strong>E：出血性脑卒中临床智能诊疗建模</strong></li><li><strong>F：强对流降水临近预报</strong></li></ul><p>其中A、B为华为专项赛题，A题属于物理物联网问题，B题属于数学矩阵解题，</p><p>C题为现实问题解决方案类，D属于地理经济类题，E题属于经典的数据分析类题，F题属于物理类数据分析题</p><p>虽然E题数据较多较为复杂，但本质上E题解题思路较为固定，有规律可依，因而我们队伍选择了E题，并且绝大多数队伍也选择了E题</p><blockquote><p>选题人数参考：<code>A题：619</code>、<code>B题：558</code>、<code>C题：3377</code>、<code>D题：5144</code>、<code>E题：8200</code>、<code>F题：1535</code>。</p></blockquote><h2 id="E题完整赛题："><a href="#E题完整赛题：" class="headerlink" title="E题完整赛题："></a>E题完整赛题：</h2><p>​<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/14/64a70bf088a1171afae5fc55313dcc27.png" alt="image-20231214214951312"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/14/d5c92157c0f4d719ae55f5176b29cb08.png" alt="image-20231214215019509"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/14/64a38aba4ca6146b75e00cf2a202b6e2.png" alt="image-20231214215049075"></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/12/14/cddaf5d6bfe11f025863f1a5a8bfb3a8.png" alt="image-20231214215128391"></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/12/14/ef099d297239ddf2b62eb67c1f9b1a09.png" alt="image-20231214215155593"><h3 id="问题一分析："><a href="#问题一分析：" class="headerlink" title="问题一分析："></a>问题一分析：</h3><h4 id="a问"><a href="#a问" class="headerlink" title="a问"></a>a问</h4><p>​基于后续检查中患者的血肿体积是否增加 6ml 判断前 100 名患者是否在 48 小时内发生血肿扩张，并记录发生血肿扩张的时间。第一步，筛选原始数据，对数据进行数据预处理，包括对缺失值的补全和对异常值的剔除。第二步，对照各病患的入院流水号，提取各病患的发病到首次影像检查时间间隔和后续影像检查时间间隔所对应的血肿体积，计算其在入院检查到首次随访及后续随访检查中血肿体积的绝对变化量。同时，通过建立关于血肿体积和患者发病时间与随访时间间隔的函数关系式，根据各病患发病到首次影像的时间间隔和后续影像检查时间的间隔，判断血肿体积的绝对变化量在发病 48 小时内是否超过 6ml，若超过，则发生了血肿扩张事件，并记录血肿扩张发生时间。</p><h4 id="b问"><a href="#b问" class="headerlink" title="b问"></a>b问</h4><p>​要求在第a问的基础上，构建预测所有患者是否发生血肿扩张的模型。首先进行数据预处理，利用 Stata 对照患者入院首次影像检查流水号将原始数据进行匹配合并，得到前 100 名患者的个人史、疾病史、发病及治疗相关的临床信息，将患者首次检查的影像信息如血肿和水肿的体积、位置等临床信息作为输入变量，在此基础上，利用因子分析方法将原始变量精简为少数几个综合变量，构建以是否出现血肿扩张情况为目标变量的 CatBoost 预测模型，预测所有患者发生血肿扩张事件的概率。</p><h3 id="问题二分析"><a href="#问题二分析" class="headerlink" title="问题二分析"></a>问题二分析</h3><h4 id="a问-1"><a href="#a问-1" class="headerlink" title="a问"></a>a问</h4><p>​该题是一个典型的预测问题，要求对患者血肿周围水肿的发生及发展进行模型的建立与求解，首先提取水肿体积和重复检查的时间点等信息，建立多项式函数回归模型构建一条全体患者的血肿周围水肿体积随发病到多次重复影像检查时间段内的进展曲线，利用多项式回归等曲线拟合算法进行数据拟合，并对拟合出的曲线规律进行描述，最后利用 Python 比较真实数据点与拟合值进行数据计算与评估，得到前 100 名患者水肿体积的真实值与拟合曲线之间的残差。</p><h4 id="b问-1"><a href="#b问-1" class="headerlink" title="b问"></a>b问</h4><p>​首先用 K-means 算法进行聚类，按年龄特征将患者分成 3 个亚组。在此基础上，利用 XGBoost 回归模型，对原始数据点拟合，将拟合结果可视化。将每组患者的检查时间间隔代入模型中，得到各组患者的水肿体积预测值，用对应时间点水肿体积的真实值与该时间点水肿体积的预测值作差，得到相应时间间隔的残差，最后对所有残差取均值，得到各亚组的残差。</p><h4 id="c问"><a href="#c问" class="headerlink" title="c问"></a>c问</h4><p>​本问所涉及数据表中脑室引流、止血治疗、降颅压治疗、降压治疗、镇静镇痛治疗、止吐护胃、营养神经共 7 种治疗方法。水肿体积进展模式指的是水肿体积的变化量，本问根据首次检查到第八次随访检查的水肿体积值，通过对各次随访检查的水肿体积值与首次检查的水肿体积值作差，得到了不同时间下的八次水肿体积的变化量，用该类数据来来代表水肿体积进展模式，可以比较明显地看出水肿体积的变化，有利于探究治疗方法对水肿体积进展模式的影响。在对数据进行上述预处理以后，本问决定使用独立样本 T 检验来分析不同治疗方法与水肿体积变化量之间的关系，而在做独立样本 T 检验之前，需要确定样本数据是否符合正态分布，是否通过方差齐性检验。</p><h4 id="d问"><a href="#d问" class="headerlink" title="d问"></a>d问</h4><p>​利用斯皮尔曼相关系数模型来分析患者血肿体积、水肿体积和治疗方法相关的 25 个特征之间的相关性，根据相关系数表和相关系数热力分布情况描述以上特征和指标之间的相关关系，期望筛选出影响出血性脑卒中患者的血肿体积扩张和水肿发生发展的显著性因素，为临床治疗提出合理建议。</p><h3 id="问题三分析"><a href="#问题三分析" class="headerlink" title="问题三分析"></a>问题三分析</h3><h4 id="a问-2"><a href="#a问-2" class="headerlink" title="a问"></a>a问</h4><p>​该题是一个预测问题，要求对患者 90 天 mRS 评分进行模型的建立与求解，首先提取患者个人史、疾病史、发病相关及首次影像等信息，建立 Catboost 回归模型。通过 CatBoost 算法模型构建以前 100 名患者的个人史，疾病史，发病及治疗相关特征及首次影像检查结果为变量，以 90 天 mRS 评分为输出的预测模型，以输出结果作为 90 天mRS 评分结果的预测模型。</p><h4 id="b问-2"><a href="#b问-2" class="headerlink" title="b问"></a>b问</h4><p>​该题与问题 3.a 的思路类似，区别在于该题用到的影像数据是首次加八次随访影像记录的数据。通过因子分析将数据中合并的 103 个变量降维为 7 个因子。本题中的目标函数是判断 90 天 mRS 评分，输入特征为 1-100 名患者的个人史、发病史、发病及治疗相关等临床信息指标，通过 LightGBM 多分类模型构建以前 100 名患者的个人史，疾病史，发病及治疗相关特征及首次加随访影像检查结果为变量，以 90 天 mRS 评分为输出的预测模型，以输出结果作为评分结果。</p><h4 id="c问-1"><a href="#c问-1" class="headerlink" title="c问"></a>c问</h4><p>​该题为分析多个特征间的关联关系，选择灰色关联分析作为本题的解决方法。在对数据做灰色关联分析时，应注意数据间是否存在较大的差异。首先做数据标准化处理，以确保不同因素之间具有相同的尺度。然后利用 PCA 进行数据降维，有效地减少数据的维度，同时保留数据中的重要信息。经过降维后，数据表最终只保留了 90 天 mRS评分、PCA_个人史、PCA_疾病史、PCA_治疗方法、PCA_HM 灰度、PCA_HM 形状、PCA_HM位置、HM_volume、ED_volume 共 9 特征，最后进行灰色关联分析。</p><blockquote><p>赛题文件：<a class="link" href="https://duojiyun.常子儒.xyz/document/huaweicup2023/%E4%BA%8C%E5%8D%81%E5%B1%8A%E5%8D%8E%E4%B8%BA%E6%9D%AF%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E8%B5%9B%E9%A2%98.zip">二十届华为杯数学建模赛题.zip <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>程序文件：<a class="link" href="https://duojiyun.常子儒.xyz/document/huaweicup2023/pycode.zip">pycode.zip <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>答案文件：<a class="link" href="https://duojiyun.常子儒.xyz/document/huaweicup2023/%E7%AD%94%E6%A1%88%E6%96%87%E4%BB%B6.xlsx">答案文件.zip <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 医学数据 </tag>
            
            <tag> 华为杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学习方法记录（一）：概述</title>
      <link href="/2023/10/10/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A6%82%E8%BF%B0/"/>
      <url>/2023/10/10/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>​本部分根据李航的统计方法学习（第二版）进行学习记录。</p>]]></content>
      
      
      <categories>
          
          <category> 统计学习方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> 李航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四届华数杯数学建模竞赛C题思路、过程实现与最终论文</title>
      <link href="/2023/08/20/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E5%8D%8E%E6%95%B0%E6%9D%AF%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9BC%E9%A2%98%E6%80%9D%E8%B7%AF%E3%80%81%E8%BF%87%E7%A8%8B%E5%AE%9E%E7%8E%B0%E4%B8%8E%E6%9C%80%E7%BB%88%E8%AE%BA%E6%96%87/"/>
      <url>/2023/08/20/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E5%8D%8E%E6%95%B0%E6%9D%AF%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9BC%E9%A2%98%E6%80%9D%E8%B7%AF%E3%80%81%E8%BF%87%E7%A8%8B%E5%AE%9E%E7%8E%B0%E4%B8%8E%E6%9C%80%E7%BB%88%E8%AE%BA%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p>​这次第四届华数杯比赛时间是2023年8月3日（周四）18:00至8月6日（周日）20:00，比赛组别共分为<strong>研究生组</strong>、<strong>本科生组</strong>和<strong>专科生组</strong>，这次竞赛题目分为<strong>A、B、C三个题目</strong>，主题分别为：</p><ul><li><strong>A 题 隔热材料的结构优化控制研究</strong></li><li><strong>B 题 不透明制品最优配色方案设计</strong></li><li><strong>C 题 母亲身心健康对婴儿成长的影响</strong></li></ul><p>其中A题属于物理材料热传导类，B题属于物理光学调色类，C题属于社科母婴身心健康类。</p><p>从难度上来看，A题&gt;B题&gt;C题，从问题数量来看，C题&gt;B题&gt;A题。</p><p>本次比赛，我们小组选择的是C题。</p><h3 id="C题-母亲身心健康对婴儿成长的影响"><a href="#C题-母亲身心健康对婴儿成长的影响" class="headerlink" title="C题  母亲身心健康对婴儿成长的影响"></a>C题  母亲身心健康对婴儿成长的影响</h3><p>​母亲是婴儿生命中最重要的人之一，她不仅为婴儿提供营养物质和身体保护，还为婴儿提供情感支持和安全感。母亲心理健康状态的不良状况，如抑郁、焦虑、压力等，可能会对婴儿的认知、情感、社会行为等方面产生负面影响。压力过大的母亲可能会对婴儿的生理和心理发展产生负面影响，例如影响其睡眠等方面。</p><p>​附件给出了包括 390名 3 至 12 个月婴儿以及其母亲的相关数据。这些数据涵盖各种主题，母亲的身体指标包括年龄、婚姻状况、教育程度、妊娠时间、分娩方式，以及产妇心理指标CBTS（分娩相关创伤后应激障碍问卷）、EPDS（爱丁堡产后抑郁量表）、HADS（医院焦虑抑郁量表）和婴儿睡眠质量指标包括整晚睡眠时间、睡醒次数和入睡方式。</p><p>请查阅相关文献，了解专业背景，根据题目数据建立数学模型，回答下列问题。</p><ol><li><p>许多研究表明，母亲的身体指标和心理指标对婴儿的行为特征和睡眠质量有影响，请问是否存在这样的规律，根据附件中的数据对此进行研究。</p></li><li><p>婴儿行为问卷是一个用于评估婴儿行为特征的量表，其中包含了一些关于婴儿情绪和反应的问题。我们将婴儿的行为特征分为三种类型：安静型、中等型、矛盾型。请你建立婴儿的行为特征与母亲的身体指标与心理指标的关系模型。数据表中最后有20组（编号391-410号）婴儿的行为特征信息被删除，请你判断他们是属于什么类型。</p></li><li><p>对母亲焦虑的干预有助于提高母亲的心理健康水平，还可以改善母婴交互质量，促进婴儿的认知、情感和社交发展。CBTS、EPDS、HADS的治疗费用相对于患病程度的变化率均与治疗费用呈正比，经调研，给出了两个分数对应的治疗费用，详见表1。现有一个行为特征为矛盾型的婴儿，编号为238。请你建立模型，分析最少需要花费多少治疗费用，能够使婴儿的行为特征从矛盾型变为中等型？若要使其行为特征变为安静型，治疗方案需要如何调整？</p></li></ol><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/09/10/afc389a23470bf283421d11ec0e44421.png" alt="image-20230910162432214" style="zoom:67%;"><ol start="4"><li><p>婴儿的睡眠质量指标包含整晚睡眠时间、睡醒次数、入睡方式。请你对婴儿的睡眠质量进行优、良、中、差四分类综合评判，并建立婴儿综合睡眠质量与母亲的身体指标、心理指标的关联模型，预测最后20组（编号391-410号）婴儿的综合睡眠质量。</p></li><li><p>在问题三的基础上，若需要让238号婴儿的睡眠质量评级为优，请问问题三的治疗策略是否需要调整？如何调整？</p></li></ol><blockquote><p>C题原件：<a class="link" href="https://duojiyun.常子儒.xyz/document/huashubei2023/2023%E5%B9%B4C%E9%A2%98/%E5%8D%8E%E6%95%B0%E6%9D%AF2023%E5%B9%B4C%E9%A2%98.pdf">https://duojiyun.xn--l3q92w0lc.xyz/document/huashubei2023/2023%E5%B9%B4C%E9%A2%98/%E5%8D%8E%E6%95%B0%E6%9D%AF2023%E5%B9%B4C%E9%A2%98.pdf <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>附件：<a class="link" href="https://duojiyun.常子儒.xyz/document/huashubei2023/2023%E5%B9%B4C%E9%A2%98/C%E9%A2%98%E9%99%84%E4%BB%B6.xlsx">https://duojiyun.xn--l3q92w0lc.xyz/document/huashubei2023/2023%E5%B9%B4C%E9%A2%98/C%E9%A2%98%E9%99%84%E4%BB%B6.xlsx <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p>上述是华数杯数学建模竞赛原题及附件，一共五个问题，</p><h4 id="问题一分析"><a href="#问题一分析" class="headerlink" title="问题一分析"></a>问题一分析</h4><p>由于已经指出母亲的身体指标和心理指标对婴儿的行为特征和睡眠质量有影响，需要我们所做的工作便是证明确实存在影响。</p><p>该问是研究自变量与因变量之间是否存在一定规律性的关系，通过给出的数据进行判断。</p><p><strong>探究多个特征之间是否存在规律，这种问题可以采用相关性分析</strong>。</p><blockquote><p><em>相关性分析是指对两个或多个具备相关性的变量元素进行分析，从而衡量两个变量因素的相关密切程度。相关性的元素之间需要存在一定的联系或者概率才可以进行相关性分析。</em></p></blockquote><p>常用的相关性分析方法有：</p><ul><li><strong>皮尔逊相关</strong>（Pearson correlation）</li><li><strong>斯皮尔曼相关</strong>（Spearman correlation）</li></ul><p>在做相关性分析之前，首先要对数据预处理，像缺失值处理，异常值处理，数据编码等。</p><h4 id="问题二分析"><a href="#问题二分析" class="headerlink" title="问题二分析"></a>问题二分析</h4><p>主要任务为<strong>建立关系模型（分类模型），并根据所建立的模型预测表中数据</strong>。</p><p>该问一共包含两个小问题：建立关系模型与预测后20组婴儿行为特征。</p><p>母亲的身体指标与心理指标包含多个特征，属于多变量，婴儿的行为特征属于单个变量。</p><p>而且<strong>行为特征属于离散型变量，不连续</strong>，因而<strong>模型采用分类模型</strong></p><p>观察数据表中的母亲身体指标与心理指标可以看出，</p><ul><li><p>身体指标包含了年龄、婚姻状况、教育程度、妊娠时间和分娩方式。</p><ul><li><p>年龄为<strong>连续型变量</strong></p></li><li><p>婚姻状况为<strong>离散型变量</strong></p></li><li><p>教育程度为<strong>离散型变量</strong></p></li><li><p>妊娠时间为<strong>连续型变量</strong></p></li><li><p>分娩方式为<strong>离散型变量</strong></p></li></ul></li><li><p>心理指标包含了CBTS、EPDS和HADS三个特征</p><ul><li>CBTS为<strong>连续型变量</strong></li><li>EPDS为<strong>连续型变量</strong></li><li>HADS为<strong>连续型变量</strong></li></ul></li></ul><p>该题数据表中已对婚姻状况、教育程度和分娩方式做了<strong>标签编码</strong>，</p><p>婴儿行为特征可以采用标签编码，将安静型、中等型、矛盾型分别编码为1、2、3。</p><p>分类模型种类较多，有决策树分类、随机森林分类、AdaBoost分类、GBDT分类、KNN分类、BP神经网络分类、SVM分类、XGBoost分类、朴素贝叶斯分类、逻辑回归。</p><p>根据所给数据的特点，选择合适的分类模型，将数据预处理为模型所需的格式，代入模型中训练。</p><p>本问我们选择了AdaBoost模型，建立了<strong>基于AdaBoost 集成学习算法的三分类模型</strong>。在数据划分过程中训练集与测试集比例在 0.7，随机种子设置为 2225，在创建 AdaBoost 分类器过程中，设置决策树最大深度为 4，弱分类器个数设置为 67，学习率设置为 1.0，随机种子设置为 42，模型准确率最高，为64.1%</p><p>在对模型做<strong>5折交叉验证</strong>后，得到平均准确率55.64%</p><p><strong>混淆矩阵图</strong>见论文P22</p><p>由于所给数据的特征间关联性不是特别强，因而所得结果不是特别准确。除此之外随机森林、GBDT、KNN分类模型也都能用于解决本问。</p><h4 id="问题三分析"><a href="#问题三分析" class="headerlink" title="问题三分析"></a>问题三分析</h4><p>主要任务为<strong>建立模型（优化模型），根据模型计算最优结果</strong>。</p><p>该问一共需要解决三个小问题：建立模型、计算最少费用以及调整治疗方案。</p><p>使用最小二乘法求解婴儿特征与母亲身心健康指标的函数关系，建立婴儿行为特征与年龄、心理指标的多元回归模型。</p><p>计算各个变量的回归系数，并根据回归系数构建婴儿行为特征与年龄、心理指标的函数关系式<strong>w</strong>，形如<strong>y = kx+b</strong></p><p>将函数表达式<strong>w</strong>作为线性规划的目标函数，约束条件有：</p><ul><li>CBTS线性函数表达式<strong>y<del>1</del><strong>，形如</strong>y<del>1</del> = kx<del>1</del>+b</strong></li><li>EPDS线性函数表达式<strong>y<del>2</del><strong>，形如</strong>y<del>2</del> = kx<del>2</del> +b</strong></li><li>HADS线性函数表达式<strong>y<del>3</del><strong>，形如</strong>y<del>3</del> = kx<del>3</del>+b</strong></li><li>目标函数中因变量 婴儿行为特征 <strong>y</strong> 取值范围</li><li>决策变量 **x<del>母亲年龄</del>**的取值范围</li><li>决策变量 CBTS、EPDS、HADS<strong>治疗后的现有值</strong>x<del>CBTS</del>,x<del>EPDS</del>,x<del>HADS</del><strong>与治疗值</strong>x<del>1</del>,x<del>2</del>,x<del>3</del>**的关系</li></ul><h4 id="问题四分析"><a href="#问题四分析" class="headerlink" title="问题四分析"></a>问题四分析</h4><p>主要任务为综合评判，建立关联模型，并预测结果。</p><p>该问一共需要解决三个小问题：对婴儿睡眠质量做综合评判；建立婴儿综合睡眠质量与母亲的身体指标、心理指标的关联模型；预测后20组婴儿综合睡眠质量。</p><p>由于睡眠时间与入睡方式属于离散型变量，需要做预处理，睡眠时间可以转化为小数，入睡方式已经做了标签编码。</p><p>问题指出婴儿睡眠质量指标包含整晚睡眠时间、睡醒次数和入睡方式。</p><p>我们在解决问题之前，便<strong>做出假设：整晚睡眠时间与睡眠质量成正比，睡醒次数与睡眠质量成反比，入睡方式与睡眠质量成正比。</strong></p><p>实际通过查阅相关资料，数据表中给出的入睡方式从哄睡法【1】、抚触法【2】、安抚奶嘴法【3】、环境营造法【4】到 定时法【5】，在一定程度上婴儿的睡眠效果是由差到好；根据生活经验和相关资料也可以得到，一个人的睡醒次数越多，睡眠时间越少，睡眠质量越差，反之，睡眠质量越好</p><p>确定睡眠时间、睡醒次数与入睡方式这三个特征与睡眠质量之间存在怎样的关系，可以利用相关性分析解决。</p><p>在运用<strong>斯皮尔曼相关系数</strong>检验各睡眠质量特征间的相关性之后，可以发现：</p><ul><li><strong>整晚睡眠时间与入睡方式存在强正相关</strong></li><li><strong>整晚睡眠时间与睡醒次数存在强负相关</strong></li><li><strong>入睡方式与睡醒次数存在强负相关</strong></li></ul><p>相关性分析结果在一定程度上也证实了我们的假设。</p><p>具体实现过程为：</p><ol><li><p>将整晚睡眠时间和入睡方式作为正向指标，将睡醒次数作为逆向指标，利用<strong>Critic赋权法</strong>（依据为特征数值标准差、特征间相关系数与信息量）确定各部分权重：整晚睡眠时间、睡醒次数、入睡方式分别占比为 0.297、0.419 和 0.284。</p></li><li><p>选用一种综合评价方法，这里我们选择的是<strong>TOPSIS优劣解距离法</strong>，将正向指标、逆向指标与权重系数代入后得到数据表中婴儿睡眠质量综合得分。</p><blockquote><p><em>TOPSIS优劣解距离法基本过程为基于归一化后的原始数据矩阵，采用余弦法找出有限方案中的最优方案和最劣方案，然后分别计算各评价对象与最优方案和最劣方案间的距离，获得各评价对象与最优方案的相对接近程度，以此作为评价优劣的依据</em></p></blockquote></li><li><p>运用<strong>K-means</strong>对婴儿睡眠质量得分进行分类，最终确定数据表中婴儿睡眠质量属于哪一类。由于问题中睡眠质量为优、良、中、差四分类，因而聚类个数选择为4。</p><ul><li>优 &gt;=0.777871971989136</li><li>0.777871971989136&gt;良 &gt;=0.641337057538619</li><li>0.641337057538619&gt;中&gt;=0.497799826945968</li><li>0.497799826945968&gt;差&gt;=0</li></ul></li><li><p>分别求得整晚睡眠时间、睡醒次数与入睡方式关于母亲年龄、CBTS、EPDS、HADS的回归方程，建立<strong>偏最小二乘法回归模型</strong>，预测最后20组婴儿的整晚睡眠时间、睡醒次数与入睡方式。</p></li><li><p>最后建立<strong>基于KNN的睡眠质量分类模型</strong>，根据上一步所求得的最后20组婴儿睡眠时间、睡醒次数与入睡方式，预测最后20组婴儿的综合睡眠质量</p></li></ol><h4 id="问题五分析"><a href="#问题五分析" class="headerlink" title="问题五分析"></a>问题五分析</h4><p>第五问是第三问与第四问的结合，问题提示是在问题三的基础上，这说明本问需要利用到第三问治疗费用关系表。</p><p>不过第三问所建立的治疗策略模型是关于婴儿行为特征转变的，第五问则是关于婴儿睡眠质量转变的问题。</p><ol><li><p>首先需要根据第四问的综合评分表，得到238号婴儿的睡眠质量评级为中（见<a class="link" href="https://duojiyun.常子儒.xyz/document/huashubei2023/8.6%E6%95%B0%E6%8D%AE(%E6%96%B0).xlsx">数据表8.6数据(新) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>）</p></li><li><p>按照第三问的方法，构建婴儿综合睡眠质量函数表达式f = 0.29X*<del>睡眠时间</del>* + 0.28X*<del>入睡方式</del>* + 0.41X*<del>睡醒次数</del>*（系数为各部分权重）</p></li><li><p>利用偏最小二乘法回归建立婴儿综合睡眠质量与母亲心理指标关联模型，分别求得整晚睡眠时间、睡醒次数、入睡方式与母亲心理指标的回归方程X*<del>睡眠时间</del>* ，X*<del>入睡方式</del>* ，X*<del>睡醒次数</del>* 。</p></li><li><p>目标函数最优解即治疗费用最小值<strong>min w = y<del>1</del> + y<del>2</del> + y<del>3</del></strong> ，其中y<del>1</del> ， y<del>2</del> ， y<del>3</del> 分别为CBTS、EPDS、HADS的治疗费用，约束条件为：</p><ul><li><em><em>X</em><del>睡眠时间</del></em> ，X*<del>入睡方式</del>* ，X*<del>睡醒次数</del>*** 回归方程</li><li><strong>y<del>1</del> ， y<del>2</del> ， y<del>3</del></strong> 回归方程</li><li>婴儿行为特征关于母亲年龄、心理指标的回归方程 <strong>y</strong></li><li>行为特征 <strong>y</strong> 取值范围</li><li>睡眠质量评分 <strong>f</strong> 取值范围</li><li>CBTS、EPDS、HADS<strong>治疗后的现有值</strong> <strong>x<del>CBTS</del>,x<del>EPDS</del>,x<del>HADS</del></strong> <strong>与治疗值</strong> <strong>x<del>1</del>,x<del>2</del>,x<del>3</del></strong> 的关系</li><li><strong>x<del>1</del>,x<del>2</del>,x<del>3</del></strong> 为整数</li></ul></li><li><p>第三问治疗策略有两种，两种策略目标函数相同，不同处在于约束条件中的行为特征 <strong>y</strong> 取值范围，一种 <strong>y&lt;=2</strong>，另一种 <strong>y &lt;= 1</strong></p></li><li><p>第三问中治疗策略使238号行为特征由矛盾型转为中等型，以及由中等型转为安静型。问题五问“第三问的治疗策略是否调整，如何调整？” 判断第三问的两种治疗策略能否同时使婴儿睡眠质量评级由中转变为优，在满足婴儿行为特征符合第三问要求情况下，同时实现睡眠质量评级转变的治疗费用最小值，四种情况：</p><ul><li>第三问的治疗策略，使婴儿行为特征由矛盾型转变为中等型，同时可以使得睡眠质量评级转变为优</li><li>第三问的治疗策略，使婴儿行为特征由矛盾型转变为中等型，但不能使睡眠质量评级转变为优</li><li>第三问的治疗策略，使婴儿行为特征由中等型转变为安静型，同时可以使得睡眠质量评级转变为优</li><li>第三问的治疗策略，使婴儿行为特征由中等型转变为安静型，但不能使睡眠质量评级转变为优</li></ul><p>四种情况需要根据目标函数的可行域判断。</p></li></ol><blockquote><p>竞赛组评价</p><p><strong>评价一：</strong>摘要简明，条理清晰，解决方案和思路可行，结果有些偏差。符号说明那个表最好弄成三线表格式。在问题一中，阐明了各项指标的数据类型，进行了数据预处理，并进行相关性分析，相关系数表可以进行适当的调整。问题二中，用AdaBoost集成学习算法进行预测，给出了求解过程，给出了相应的算法设计，最终结果有些误差。问题三中，建立模型进行求解，模型部分解释恰当，未给出详尽的算法描述，模型求解结果有些偏差。问题四中，用Critic赋权法和TOPSIS模型进行评价，并用回归模型进行求解，未给出相应的算法描述，结果有些偏差。问题五中，未先对238号婴儿的睡眠作出评估，建立模型求解，但未给出详细的算法设计，结果偏差较大。</p><p><strong>评价二：</strong>论文摘要完整，但是需要给出具体的结论。问题一建议采用斯皮尔曼相关分析和独立性检验。文中给出了相关模型的具体求解算法，是一大优点。问题五结合问题三和问题四进行求解的思路正确。论文整体较为完整，排版规范整齐。</p></blockquote><p>过程文件：</p><ul><li><a class="link" href="https://duojiyun.常子儒.xyz/document/huashubei2023/critic%E6%9D%83%E9%87%8D%E6%B3%95_(%E6%95%B4%E6%99%9A%E7%9D%A1%E7%9C%A0%E6%97%B6%E9%97%B4%EF%BC%88%E6%97%B6%EF%BC%9A%E5%88%86%EF%BC%9A%E7%A7%92%EF%BC%89-%E7%9D%A1%E9%86%92%E6%AC%A1%E6%95%B0-%E5%85%A5%E7%9D%A1%E6%96%B9%E5%BC%8F).docx">critic权重法_(整晚睡眠时间（时：分：秒）-睡醒次数-入睡方式) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li><a class="link" href="https://duojiyun.常子儒.xyz/document/huashubei2023/Spearman%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90_(%E6%95%B4%E6%99%9A%E7%9D%A1%E7%9C%A0%E6%97%B6%E9%97%B4%EF%BC%88%E6%97%B6%EF%BC%9A%E5%88%86%EF%BC%9A%E7%A7%92%EF%BC%89-%E7%9D%A1%E9%86%92%E6%AC%A1%E6%95%B0-%E5%85%A5%E7%9D%A1%E6%96%B9%E5%BC%8F).docx">Spearman相关性分析_(整晚睡眠时间（时：分：秒）-睡醒次数-入睡方式) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li><a class="link" href="https://duojiyun.常子儒.xyz/document/huashubei2023/8.6%E6%95%B0%E6%8D%AE(%E6%96%B0).xlsx">8.6数据(新) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul><p>最终论文：<a class="link" href="https://duojiyun.常子儒.xyz/document/huashubei2023/CCM2302421.pdf">2023 年“华数杯”全国大学生数学建模竞赛论文 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 数模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华数杯 </tag>
            
            <tag> 社科 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSL证书申请与更换</title>
      <link href="/2023/07/05/SSL%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E4%B8%8E%E6%9B%B4%E6%8D%A2/"/>
      <url>/2023/07/05/SSL%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E4%B8%8E%E6%9B%B4%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>如果想让自己网站数据传输更安全，可以将网站HTTP协议跳转为HTTPS协议，这需要我们做的就是申请一张SSL证书。</p><p>证书文件申请后会给我们一份CSR（证书请求文件）与私钥，<u><strong>注意妥善保存私钥！！</strong></u>，而申请验证通过后会给我们一份证书crt文件，这个文件用于为服务器安装证书。</p><p>所以要保存的有CSR、<strong>私钥、证书文件</strong>！（私钥丢失后一般不可找回）</p><p>如今为网站申请一张SSL证书是比较容易的，这里我为我云存储服务用过几次SSL，简单介绍一下这些SSL证书及便捷申请网站。</p><h3 id="常用的SSL证书："><a href="#常用的SSL证书：" class="headerlink" title="常用的SSL证书："></a>常用的SSL证书：</h3><h4 id="一、Let’s-Encrypt证书"><a href="#一、Let’s-Encrypt证书" class="headerlink" title="一、Let’s Encrypt证书"></a>一、Let’s Encrypt证书</h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/8590480a979a97657c0de698b96f5f5e.png"                      alt="image-20230705232130211" style="zoom: 50%;"                 ><p>这是使用非常广泛的SSL证书，凭借免费、方便快速的申请流程与自动续期等特点，使得很多个人网站与服务器都是用的这种。</p><ul><li><p>免费证书有效时长为3个月，时间不算长，也不算短，在一定程度上也避免了域名转移后的非法使用问题。</p></li><li><p>域名所有权验证有DNS验证、File验证。</p></li></ul><blockquote><p>Let’s Encrypt是一个于2015年三季度推出的数字证书认证机构，旨在以自动化流程消除手动创建和安装证书的复杂流程，并推广使万维网服务器的加密连接无所不在，为安全网站提供免费的SSL&#x2F;TLS证书。let’s encrypt证书加密是一个免费的，自动的，开放的认证机构（CA），为公众的利益而运行。它是由互联网安全研究组（ISRG）提供的一项服务。</p><p>Let’s Encrypt的主要原则是：</p><p>免费：拥有域名的任何人都可以使用Let’s Encrypt以零成本获得可信证书。</p><p>自动：在Web服务器上运行的软件可与Let’s Encrypt进行交互，轻松获取证书，安全地配置以供使用，并自动处理更新。</p><p>安全：我们的加密将作为推进TLS安全最佳实践的平台，无论是在CA方面，还是帮助网站运营商妥善保护其服务器。</p><p>透明：所有已颁发或已撤销的证书都将公开记录并可供任何人查看。</p><p>开放：自动签发和更新协议将作为其他人可以采用的开放标准发布。</p><p>合作：就像互联网协议本身一样，Let’s Encrypt是一个共同的努力，让社区受益，超越任何一个组织的控制。</p></blockquote><h4 id="二、Comodo证书"><a href="#二、Comodo证书" class="headerlink" title="二、Comodo证书"></a>二、Comodo证书</h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/2e8474e6fa3f772bb0682f55fa8a6e53.png"                      alt="image-20230705232230828" style="zoom:67%;"                 ><p>这一机构有付费证书（通配符），也有免费证书（单域名）</p><ul><li>免费证书有效时长为3个月。</li><li>域名所有权验证有DNS验证、File验证、邮箱验证。</li></ul><blockquote><p>Comodo ，美国的软件公司，是世界优秀的IT安全服务提供商和SSL证书的供应商之一，总部设在新泽西州泽西城，成立于1998年。</p><p>Comodo 提供一些免费的产品，可以通过其官方网站下载。值得注意的是他们的免费程序防火墙，以及其他免费的安全工具，如防病毒，防恶意软件，搜索引擎和内存防火墙。以A-VSMART保证电子商务的实时安全。</p><p>Comodo 也是一个全球领先的SSL证书提供商，为用户提供为期90天的免费服务。</p><p>Comodo 是世界上知名的SSL证书颁发机构，著名的网络安全软件厂商，致力于为个人和企业用户提供电子邮件安全、托管DNS、PKI管理、SSL证书、安全通讯以及许多其他服务，Comodo是确保互联网具有可靠和安全性的大型证书颁发机构之一。</p><p>Comodo SSL证书保护服务器和客户端浏览器之间通信连接,保证传输和接收的数据的完整性，真实性以及安全性，使COMODO成为一个非常值得信赖的品牌。</p><p>Comodo Positive SSL证书是价格最低,颁发速度最快的SSL证书之一，是中小型企业和个人用户的首选SSL证书安全产品。</p><p>Comodo 是著名SSL证书品牌之一,是WebTrust认证的CA服务商。</p></blockquote><h4 id="三、RapidSSL"><a href="#三、RapidSSL" class="headerlink" title="三、RapidSSL"></a>三、RapidSSL</h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/1cffe93f58c66f8a87731b1801cda7e2.png"                      alt="image-20230705232306965" style="zoom: 33%;"                 ><ul><li>免费证书有效时长为1个月。</li><li>域名所有权验证有邮箱验证。</li></ul><blockquote><p>RapidSSL 是著名SSL数字证书颁发机构 GeoTrust 旗下的信息安全产品。RapidSSL是128&#x2F;256位SSL证书。因为RapidSSL有自己的根证书，所以用户可以享受到稳定可靠的SSL认证服务。RapidSSL全面支持 IE 5.01+、Netscape 4.7+、Firefox、Mozilla 1+ 浏览器及其推出的各款版本。RapidSSL经济亲切的价格，让你轻松提示企业网络安全等级。RapidSSL SSL 证书支持99%以上在市面上通行的浏览器，是入门电子商务网站的最佳选择。</p><p>RapidSSL 数字证书让中小型公司透过低廉的价格就可以购买到全功能的数位凭证。是对目前交易量不大的电子商务网站最佳的选择。RapidSSL 采用自有的根证书 (Root) 发放数字证书，因此让 RapidSSL 更稳定可靠，并且比链锁 (Chain) 式的数字证书更容易安装。 RapidSSL 价格低廉，大幅降低公司使用 SSL 证书的门坎。</p></blockquote><h4 id="四、ZeroSSL"><a href="#四、ZeroSSL" class="headerlink" title="四、ZeroSSL"></a>四、ZeroSSL</h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/4c53c448ef3904553d1e711b76f06b4c.png"                      alt="image-20230705233030087" style="zoom:50%;"                 ><blockquote><p>继letsencrypt之后，zerossl同样提供了免费的SSL证书申请，采用同样的ACME的接口方式。与letsencrypt类似，zerossl提供的SSL免费证书特点：</p><p>1、支持多域名和泛域名</p><p>2、3个月证书有效期</p><p>3、域名不受限制</p><p>zerossl的第三点是与letsencrypt最大的区别，很多朋友在使用letsencrypt申请SSL域名证书的时候，会遇到多次申请的时候，在申请时，提示受到限制。这个在zerossl中就不会出现</p></blockquote><h4 id="五、Buypass"><a href="#五、Buypass" class="headerlink" title="五、Buypass"></a>五、Buypass</h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/19d52b2298db54dd2356349fac3934fb.png"                      alt="image-20230705233627759" style="zoom: 33%;"                 ><blockquote><p>近期，来此加密实现了buypass的兼容升级，即可以申请buypass的免费证书，该证书有以下特点：</p><p>1、证书有效期6个月。</p><p>2、单张证书最多支持5个单域名</p><p>3、根证书起始时间2010‎年，兼容性非常好。</p><p>BuyPass 是挪威的一家 CA 机构，提供数字证书、安全认证产品等多种服务。目前 BuyPass 提供了类似 Let’s Encrypt 的基于 ACME&#x2F;Certbot 的证书自动签发服务 - BuyPass GO Free SSL，免费！</p></blockquote><h3 id="快捷申请网站："><a href="#快捷申请网站：" class="headerlink" title="快捷申请网站："></a>快捷申请网站：</h3><h4 id="一、免费SSL（www-mianfeissl-com）"><a href="#一、免费SSL（www-mianfeissl-com）" class="headerlink" title="一、免费SSL（www.mianfeissl.com）"></a>一、<a class="link"   href="https://www.mianfeissl.com/" >免费SSL（www.mianfeissl.com） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/5e4f1b5d9dfafd25872cd4e83e7c047c.png"                      alt="image-20230705223223127" style="zoom:50%;"                 ><p>优点：</p><ul><li>申请简单快捷（大约10分钟），有“傻瓜式”教程</li><li>纯免费</li><li>证书种类较多，有选择性（RapidSSL、COMODO、Let’s Encrypt）</li><li>有管理后台。订阅证书后，临期证书会通过微信提醒</li></ul><p>缺点：</p><ul><li>私钥与CSR在验证过程中可以查看，但是验证成功后就只能下载证书了（就在昨天，申请了两个comodo证书，结果没保存私钥，没法给云存储上传证书了）</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/6b26c70907f55421b0997f75fe508bf2.png"                      alt="image-20230705230025607" style="zoom:33%;"                 ><h4 id="二、LookSSL（lookssl-com）"><a href="#二、LookSSL（lookssl-com）" class="headerlink" title="二、LookSSL（lookssl.com）"></a>二、<a class="link"   href="https://lookssl.com/" >LookSSL（lookssl.com） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/99f92a9cfccce431083b483a86a17aff.png"                      alt="image-20230705230228738" style="zoom:50%;"                 ><p>优点：</p><ul><li>部分免费</li><li>方便快捷</li></ul><p>缺点：</p><ul><li>申请免费证书时，显示库存不足😅</li></ul><h4 id="三、来此加密（letsencrypt-osfipin-com"><a href="#三、来此加密（letsencrypt-osfipin-com" class="headerlink" title="三、来此加密（letsencrypt.osfipin.com)"></a>三、<a class="link"   href="https://letsencrypt.osfipin.com/" >来此加密（letsencrypt.osfipin.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/07/05/d9457ba44418cf138e2bae80127976ce.png"                      alt="image-20230705231145426" style="zoom: 50%;"                 ><p>优点：</p><ul><li>基本免费</li><li>申请简单快捷（大约5分钟）</li><li>支持多个子域名批量申请</li><li>证书种类较多，有选择性（Let’s Encrypt、ZeroSSL、Buypass、Google）</li><li>可下载包含证书、私钥等文件的完整压缩包</li><li>证书到期提醒</li></ul><p>缺点：</p><ul><li>申请数量有部分限制</li></ul><h4 id="四、FreeSSL（freessl-org）"><a href="#四、FreeSSL（freessl-org）" class="headerlink" title="四、FreeSSL（freessl.org）"></a>四、<a class="link"   href="https://freessl.org/" >FreeSSL（freessl.org） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><img                       lazyload                     src="/images/loading.svg"                     data-src="C:/Users/czr/AppData/Roaming/Typora/typora-user-images/image-20230705230801680.png"                      alt="image-20230705230801680" style="zoom:50%;"                 ><p>优点：</p><ul><li>免费</li><li>方便快捷</li><li>支持多域名申请。</li><li>有管理界面</li></ul><p>缺点：</p><ul><li>不支持中文域名</li></ul><h4 id="五、CloudFlare（www-cloudflare-com-ssl）"><a href="#五、CloudFlare（www-cloudflare-com-ssl）" class="headerlink" title="五、CloudFlare（www.cloudflare.com/ssl）"></a>五、<a class="link"   href="https://www.cloudflare.com/zh-cn/ssl/" >CloudFlare（www.cloudflare.com/ssl） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h4><img                       lazyload                     src="/images/loading.svg"                     data-src="C:/Users/czr/AppData/Roaming/Typora/typora-user-images/image-20230705233854269.png"                      alt="image-20230705233854269" style="zoom: 50%;"                 ><p>优点：</p><ul><li>功能全面，可以对自己的站点针对性定制</li><li>部分免费</li></ul><p>缺点：</p><ul><li>较复杂，需要改域名DNS服务器等</li></ul>]]></content>
      
      
      <categories>
          
          <category> WEB运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云服务器 </tag>
            
            <tag> HTTPS </tag>
            
            <tag> SSL证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客迁移</title>
      <link href="/2023/06/21/hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/"/>
      <url>/2023/06/21/hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<p>由于新换了电脑，所以需要将原来本地hexo博客内容迁移到新的设备上。</p><p>我直接将原本的博客文件夹打包解压到了新电脑上了，目录结构如下：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/21/77cb1156d8ae00bffb25b50ab2971547.png"                      alt="image-20230621110855830" style="zoom: 50%;"                 ><h4 id="Git、nodejs"><a href="#Git、nodejs" class="headerlink" title="Git、nodejs"></a>Git、nodejs</h4><p>新设备需要<strong>提前安装Git、nodejs</strong>。</p><p>安装我就不介绍了，上面安装完后要对nodejs做环境变量配置，将以下路径添加进系统变量Path中。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\nodejs</span><br><span class="line">D:\nodejs\node_global</span><br><span class="line">D:\nodejs\node_global\node_modules</span><br></pre></td></tr></table></figure></div><p>设置完之后，打开命令行输入<code>node -v</code>，<code>npm -v</code>验证是否安装配置成功</p><p>如<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/21/9236c42c63e23eb1df78ad753619268d.png"                      alt="image-20230621110129719" style="zoom:67%;"                 >，这就说明配置成功。</p><p>git version验证git是否安装成功 <img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/21/6662db7accf3351c3fd217c83322e32a.png"                      alt="image-20230621110418692" style="zoom:67%;"                 ></p><h4 id="安装hexo博客框架"><a href="#安装hexo博客框架" class="headerlink" title="安装hexo博客框架"></a>安装hexo博客框架</h4><p>进入博客文件夹，在命令行输入以下内容来安装。</p><div class="highlight-container" data-rel="Powershell"><figure class="iseeu highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i <span class="literal">-g</span> hexo</span><br></pre></td></tr></table></figure></div><p>在命令行输入<code>hexo -v</code>检查是否安装成功</p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>前面内容完成以后，在博客文件夹下命令行输入<code>hexo g</code>和<code>hexo s</code>，来验证博客能否在本地正常生成显示。</p><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>上述工作完成后，进行hexo d部署，会显示错误（无法证明身份），需要我们配置用户信息。邮箱与用户名对应GitHub上的信息</p><div class="highlight-container" data-rel="Powershell"><figure class="iseeu highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="literal">--global</span> user.email <span class="string">&quot;邮箱&quot;</span></span><br><span class="line">git config <span class="literal">--global</span> user.name <span class="string">&quot;用户名&quot;</span></span><br></pre></td></tr></table></figure></div><p>设置SSH连接，先在本地生成SSH公钥与私钥文件</p><div class="highlight-container" data-rel="Powershell"><figure class="iseeu highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure></div><p>用记事本打开id_rsa.pub公钥文件，复制里面的内容。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/21/5cfd5f31baefde277f06a1a755a5e396.png"                      alt="image-20230621112638555" style="zoom: 50%;"                 ><p>打开GitHub—Settings</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/21/155c86219ed66e8942051203c232ff66.png"                      alt="image-20230621112935956" style="zoom: 50%;"                 ><p>命令行输入 <code>ssh -T git@github.com</code> 检验是否搭建完成</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/21/eec72bd0d2f7c4ac1757f0b9b33adf06.png"                      alt="image-20230621114204185" style="zoom:50%;"                 ><p>此外，如果部署过程中出现无法连接的错误（not connect），可能是网络原因，可以设置代理解决，</p><p>我设置的代理端口是33210，根据自己实际情况填写</p><div class="highlight-container" data-rel="Powershell"><figure class="iseeu highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="literal">--global</span> http.proxy <span class="string">&quot;127.0.0.1:33210&quot;</span></span><br><span class="line">git config <span class="literal">--global</span> https.proxy <span class="string">&quot;127.0.0.1:33210&quot;</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nrm模块错误：ERR_Require_ESM</title>
      <link href="/2023/06/18/nrm%E6%A8%A1%E5%9D%97%E9%94%99%E8%AF%AF%EF%BC%9AERR-Require-ESM/"/>
      <url>/2023/06/18/nrm%E6%A8%A1%E5%9D%97%E9%94%99%E8%AF%AF%EF%BC%9AERR-Require-ESM/</url>
      
        <content type="html"><![CDATA[<p>​nrm(npm registry manager)是npm源管理器，能够方便快捷切换npm镜像源。</p><p>在使用<code>npm install -g nrm</code>安装nrm后，使用npm ls命令查看源信息的时候出现报错信息，</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/3a16e83d316a3aa0637a6daeda7ee8e2.png"                      style="zoom:67%;"                 ><p>如上图所示，错误码为“ERR_REQUIRE_ESM”：require() of ES Moudle，错误出现在 <code>const open = require(&#39;open&#39;)</code>语句中，具体位置为require，据了解，nrm不支持新版open的ES Mould规范，要么将open降级，要么改写上述出错代码。</p><p>这里我选择了改写 <code>D:\nodejs\node_global\node_modules\nrm\cli.js</code>，提示所在位置为第9行，<strong>将require改为import</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.常子儒.xyz/2023/06/QQ%E6%88%AA%E5%9B%BE20230619233633.png"                                     ></p><p>最终，nrm能够正常使用。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/QQ%E6%88%AA%E5%9B%BE20230619233838.png"                      style="zoom:67%;"                 ><p>更换镜像源：</p><div class="highlight-container" data-rel="Powershell"><figure class="iseeu highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm use [镜像名]</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> ERR解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘学习记录（三）：数据可视化库matplotlib</title>
      <link href="/2023/05/20/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%BA%93matplotlib/"/>
      <url>/2023/05/20/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%BA%93matplotlib/</url>
      
        <content type="html"><![CDATA[<p>​matplotlib</p>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> 可视化 </tag>
            
            <tag> 图形图像 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习记录（四）：YOLOv5 7.0实战</title>
      <link href="/2023/05/13/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9AYOLOv5%207.0%E5%AE%9E%E6%88%98/"/>
      <url>/2023/05/13/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9AYOLOv5%207.0%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<p>​官方更新了最新的YOLOv5 7.0版本，体验一下</p><h3 id="YOLOv5环境安装"><a href="#YOLOv5环境安装" class="headerlink" title="YOLOv5环境安装"></a>YOLOv5环境安装</h3><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p><strong>anaconda</strong></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>过程请见深度学习记录（一）：PyTorch安装</p><h3 id="YOLOv5使用预训练模型进行检测"><a href="#YOLOv5使用预训练模型进行检测" class="headerlink" title="YOLOv5使用预训练模型进行检测"></a>YOLOv5使用预训练模型进行检测</h3><h4 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h4><p>下载YOLOv5项目文件，地址：<a class="link"   href="https://github.com/ultralytics/yolov5" >GitHub-YOLOv5官方项目 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，</p><p>使用命令：</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ultralytics/yolov5.git</span><br></pre></td></tr></table></figure></div><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/375e70dd1a1c3c093929ddc57b0561c9.png"                      style="zoom: 67%;"                 ><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><p>文件夹中有requirements.txt，列举项目所需依赖，</p><p>打开终端，安装依赖包</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></div><p>具体依赖如下，注意torch&gt;&#x3D;1.7.0，numpy可以选择&#x3D;&#x3D;1.18.5</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/107fe1b65bf82543c7f45ab93ec0f578.png"                      style="zoom: 50%;"                 ><h4 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h4><p>终端输入 <code>python detect.py</code>，先运行一下项目测试用例，看是否能生成检测图片。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/49337d735b48d7383cff712bc76f4107.png"                      style="zoom:50%;"                 ><p>默认是使用yolov5s.pt模型检测，由于我训练过一次了，所以本地有该文件，初次训练会自动从GitHub下载，网速慢尽量挂VPN。</p><p><strong>运行结果放到runs文件夹下</strong>：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/781e6b2fb4bc7045656edea188bd428e.png"                      style="zoom:80%;"                 ><p>样例图<strong>bus.jpg</strong>：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/711ad5b460e4f02dd0f409eb6484681e.png"                      style="zoom: 33%;"                 ><p>样例图<strong>zidane.jpg</strong>：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/591a0360d9605da291e4aaf0ed91ca41.png"                      style="zoom: 33%;"                 ><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p>该部分位于detect.py文件中：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/9a1603f92fe4818faf9dacb03ec26dab.png"                      style="zoom:50%;"                 ><h5 id="关键参数"><a href="#关键参数" class="headerlink" title="关键参数"></a>关键参数</h5><ul><li><strong>weights：权重文件（训练好的模型文件）</strong>，default为<code>yolov5s.pt</code>，模型越大，精度越高，运算速度越慢<ul><li><strong>yolov5s.pt</strong> 小型模型</li><li><strong>yolov5m.pt</strong> 中型模型</li><li><strong>yolov5l.pt</strong> 大型模型</li><li><strong>yolov5x.pt</strong> 超大型模型</li></ul></li><li><strong>source：检测目标</strong>，可以是单张图片、文件夹、屏幕或者摄像头等。</li><li><strong>conf-thres：置信度阈值</strong>，越低框越多，越高框越少。<strong>default为0.25，大于default都会进行标记</strong></li><li><strong>iou-thres：IOU阈值</strong>，越低框越少，越高框越多。default默认为0.45，过大容易一个物体会被识别出多个框，过小则识别不出物体</li><li><strong>save-txt：</strong>把检测的目标的坐标文件输出为txt文件。</li></ul><h4 id="推理检测"><a href="#推理检测" class="headerlink" title="推理检测"></a>推理检测</h4><p>知道上述参数之后，我们该<strong>如何使用自己想要的参数去训练模型呢</strong>？</p><p>打开终端——输入 <code>python detect.py --参数 value</code>，</p><p>如下<strong>将模型文件换成了yolov5m.pt</strong>  </p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --weights yolov5m.pt</span><br></pre></td></tr></table></figure></div><p>初次训练自动下载yolov5m.pt文件。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/9ef616556df134c95f135ce9ea633c50.png"                      style="zoom:50%;"                 ><p>训练完成后查看结果，注意与之前的yolov5s模型训练结果对比：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/99d4bf27cb72464b542a237ef44096d3.png"                      style="zoom:33%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/14/6e94fa59a6e8f2a53524f656df2c0447.png"                      style="zoom: 33%;"                 ></p><p><strong>如果想推理其他图片</strong>，可以将想检测的放入项目文件夹data&#x2F;images中，</p><p>我从网络上下载了一张狂飙电视剧剧照，然后测试 </p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --weights yolov5m.pt --source data/images/狂飙.jpg</span><br></pre></td></tr></table></figure></div><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/21aabc40bcdab317cb7cd4d30e3859db.png"                      style="zoom:50%;"                 ><p>检测效果如下：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/10812739d2f27b4c96811adf1710292f.png"                      style="zoom:50%;"                 ><p><strong>检测当前屏幕中存在的对象</strong>：</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --weights yolov5m.pt --source screen</span><br></pre></td></tr></table></figure></div><p>推理结果会输出一段加速的视频，效果如下：</p><div id="player_1a562434f89d6fe5"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player_1a562434f89d6fe5'),    userId: 6247,    vcode: '1a562434f89d6fe5',    autoPlay: false});</script><p><strong>更改置信度阈值的话会发生什么呢？</strong></p><p>输入命令，将置信度改为0.05：</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --weights yolov5m.pt --source data/images/bus.jpg --conf-thres 0.05</span><br></pre></td></tr></table></figure></div><p>检测效果如下，可以看到原来的bus.jpg图片中检测到了比之前更多的对象，</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/bfbef75a877c31313512c9c9f4af9e97.png"                      style="zoom: 33%;"                 ><p><strong>如果更改同样的IOU阈值呢？</strong></p><p>输入命令，将IOU阈值调成0.05，</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --weights yolov5m.pt --source data/images/bus.jpg --iou-thres 0.05</span><br></pre></td></tr></table></figure></div><p>检测结果如下，框减少：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/ca5f296a796734ccea345ca0cc58df83.png"                      style="zoom:33%;"                 ><h4 id="基于torch-hub的检测方法"><a href="#基于torch-hub的检测方法" class="headerlink" title="基于torch.hub的检测方法"></a>基于torch.hub的检测方法</h4><p>可以直接运行py文件，而不需要终端手动输入命令执行了。</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="comment">#Model，指定了本地源</span></span><br><span class="line">model = torch.hub.load(<span class="string">&#x27;./&#x27;</span>,<span class="string">&#x27;yolov5s&#x27;</span>,source=<span class="string">&#x27;local&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Images，确定检测图片</span></span><br><span class="line">img = <span class="string">&#x27;./data/images/zidane.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Inference，调用模型</span></span><br><span class="line">results = model(img)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Result，展示结果</span></span><br><span class="line">results.show()</span><br></pre></td></tr></table></figure></div><h3 id="YOLOv5构建自定义数据集"><a href="#YOLOv5构建自定义数据集" class="headerlink" title="YOLOv5构建自定义数据集"></a>YOLOv5构建自定义数据集</h3><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><h5 id="数据收集"><a href="#数据收集" class="headerlink" title="数据收集"></a>数据收集</h5><ul><li><p>图片类型数据</p></li><li><p>视频类型数据</p><ul><li><p>使用opencv进行视频抽帧</p><p>将一段完整视频抽成多个一帧一帧的图片，以下利用死神VS火影（带土：卡卡西）的一段游戏视频演示：</p><p>原视频：<a class="link"   href="https://www.bilibili.com/video/BV1Jk4y117hQ?t=1.9" >NSUNS4带土VS鸣人 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div id="player_651cd24bf9e98d1b"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player_651cd24bf9e98d1b'),    userId: 6247,    vcode: '651cd24bf9e98d1b',    autoPlay: false});</script><p>目录结构：<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/bc16a0d772df9f84ad3a78c02f5d17a2.png"                      style="zoom:50%;"                 ></p><p>新建一个jupyter Notebook，命名extract.ipynb，导入opencv模块与matplotlib模块</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure></div><p><strong>ret返回类型为bool类型</strong>，如果读取到了视频，就会返回true；未读取到，返回false。<strong>frame返回一帧图片</strong></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打开视频文件</span></span><br><span class="line">video = cv2.VideoCapture(<span class="string">&#x27;./BVN.mp4&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取一帧</span></span><br><span class="line">ret,frame =  video.read()</span><br></pre></td></tr></table></figure></div><p>使用<code>plt.imshow(frame)</code>显示读取到帧图片，注意这样显示的图片与原视频颜色不一致，是因为输出颜色为<em>BGR</em>格式</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/32e89dde870152b2331dc303f2ee45ca.png"                      style="zoom:50%;"                 ><p>切换到原来颜色可以使用 <code>plt.imshow(cv2.cvtColor(frame,cv2.COLOR_BGR2RGB))</code>，BGR转换RGB格式</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/c584aacc5fc27e0a4afe53ce6160c9df.png"                      style="zoom:50%;"                 ><p>上述是将第一帧图片显示，如果想对整个视频的每帧图片进行读取并保存，需要怎么做呢？</p><p>以下程序是捕获视频——对视频循环读取——每30帧输出一张图片（一个视频总帧数太多，全部图片会特别多）——将图片按格式写入images文件夹中。</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">video = cv2.VideoCapture(<span class="string">&#x27;./BVN.mp4&#x27;</span>)</span><br><span class="line">num = <span class="number">0</span>  <span class="comment">#计数器</span></span><br><span class="line">save_step = <span class="number">30</span>  <span class="comment">#间隔帧</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    ret,frame = video.read()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> num % save_step == <span class="number">0</span>:</span><br><span class="line">        cv2.imwrite(<span class="string">&#x27;./images/&#x27;</span>+<span class="built_in">str</span>(num)+<span class="string">&#x27;.jpg&#x27;</span>,frame)</span><br></pre></td></tr></table></figure></div><p>结果如下：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/4c6201b674df01d58dd89f524628e20c.png"                      style="zoom: 50%;"                 ></li></ul></li></ul><h5 id="标注工具"><a href="#标注工具" class="headerlink" title="标注工具"></a>标注工具</h5><ul><li><p>labelimg</p><p>安装命令：<code>pip install labelimg</code></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/df355f569122dd3bc8c0a30453f98e47.png"                      style="zoom: 50%;"                 ><p>终端输入<code>labelimg</code>，打开<strong>labelimg</strong>：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/51d14ff21bc998ecea40be7e6d193682.png"                      style="zoom: 33%;"                 ><p>界面介绍：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/3e53d5548e0d5d942d799853b90ca732.png"                      style="zoom:50%;"                 ><p>导入图片后进行标注（注意如果标注框一直强制正方形，请按快捷键 <strong>CTRL+SHIFT+R</strong> 或 点击<strong>‘Edit’-&gt;‘Draw Squares’</strong> ）：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/ac4cf1b315e31c4cc1cd9780e4a657ff.png"                      style="zoom:33%;"                 ><p>结果保存到了labels文件夹中：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/345233964bcec5e96b4e8be97a807bdb.png"                      style="zoom:50%;"                 ></li></ul><h3 id="YOLOv5训练自定义数据集"><a href="#YOLOv5训练自定义数据集" class="headerlink" title="YOLOv5训练自定义数据集"></a>YOLOv5训练自定义数据集</h3><h4 id="数据调整"><a href="#数据调整" class="headerlink" title="数据调整"></a>数据调整</h4><ul><li><strong>images：存放图片</strong><ul><li><strong>train：训练集图片</strong></li><li><strong>val：验证集图片</strong></li></ul></li><li><strong>labels：存放标签</strong><ul><li><strong>train：训练集标签文件</strong>，要与训练集图片名称一一对应</li><li><strong>val：验证集标签文件</strong>，要与验证集图片名称一一对应</li></ul></li></ul><p><strong>classes.txt要从labels文件夹移到datasets文件夹下</strong>，然后images和labels分别划分<strong>训练集（多）、验证集（少）</strong>，两文件夹的内容应当对应。</p><p>目录结构： </p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/bdf768994824d55d79770d0ca7765d2b.png"                      style="zoom:50%;"                 ><h4 id="关键参数-1"><a href="#关键参数-1" class="headerlink" title="关键参数"></a>关键参数</h4><ul><li>weights：预训练的权重文件</li><li>data：数据集描述文件</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/15/e92072a259eb83fec5babe6dd9c8687f.png"                      style="zoom: 50%;"                 ><h4 id="训练模型"><a href="#训练模型" class="headerlink" title="训练模型"></a>训练模型</h4><p>在data文件夹下创建bvn.yaml配置文件，规定对应标签。</p><div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">../yolov5-master/datasets</span> <span class="comment"># dataset root dir</span></span><br><span class="line"><span class="attr">train:</span> <span class="string">images/train</span>  <span class="comment"># train images (relative to &#x27;path&#x27;) 128 images</span></span><br><span class="line"><span class="attr">val:</span> <span class="string">images/val</span>  <span class="comment"># val images (relative to &#x27;path&#x27;) 128 images</span></span><br><span class="line"><span class="attr">test:</span>  <span class="comment"># test images (optional)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Classes</span></span><br><span class="line"><span class="attr">names:</span></span><br><span class="line">  <span class="attr">0:</span> <span class="string">daitu</span></span><br><span class="line">  <span class="attr">1:</span> <span class="string">mingren</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>打开train.py文件，<strong>修改参数–data为’data&#x2F;bvn.yaml’</strong></p><p>点击运行即可训练。</p><p>默认是<strong>训练100epoch</strong>，慢慢等</p><p>最后训练好的结果会保存到<strong>runs&#x2F;train</strong>中。</p><p>打开detect.py文件，输入命令</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py --weights runs/train/exp2/weights/best.pt --source datasets/BVN.mp4 --view-img</span><br></pre></td></tr></table></figure></div><p>这样会边推理边播放视频，播放完后视频生成。</p><p>检测效果视频如下：</p><div id="player_9a473702eed3cd8f"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player_9a473702eed3cd8f'),    userId: 6247,    vcode: '9a473702eed3cd8f',    autoPlay: false});</script><h3 id="YOLOv5利用PyQT5实现可视化界面"><a href="#YOLOv5利用PyQT5实现可视化界面" class="headerlink" title="YOLOv5利用PyQT5实现可视化界面"></a>YOLOv5利用PyQT5实现可视化界面</h3><h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><ul><li>Pyside6安装：pip install pyside6</li><li>pyside6 designer：打开 <code>&lt;虚拟环境位置&gt;\Lib\site-packages\PySide6</code></li><li>Qt for Vscode：Vscode扩展</li></ul><h4 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h4><p>打开PySide6的designer.exe，对图形界面设计。</p><p>以下是我绘制的GUI，具体元素如图：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/25/10e843778abed9cf570c38ae0070698a.png"                      alt="image-20230625220804629" style="zoom: 50%;"                 ><p>其中Label工具属性设置如下：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/25/b1d7f5057d96cf6a749c3929ec22251f.png"                      alt="image-20230625221011179" style="zoom: 67%;"                 ><p>按<code>Ctrl+S</code>将图形界面保存，文件名为main_windows.ui，其实它就是一个标准<em>XML</em>格式的文本文件。</p><p>为了将它做成后续的检测界面，需要用Qt for Vscode插件对ui文件转换，如下：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/25/f63f69a7374827db9c060d7520f5cb01.png"                      alt="image-20230625221708626" style="zoom:67%;"                 ><p>上述转换为一个名为main_window_ui.py的文件，里面有个Ui_MainWindow类，一会儿我们会用到，如图所示：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/25/2d0bbdbffddda813c61c12064555530f.png"                      alt="image-20230625221947422" style="zoom:50%;"                 ><p>新建一个base_ui.py用于写GUI主程序，</p><p>用到了前面的基于torch.hub方法，用模型是本文开始的自定义数据集训练的best.pt模型文件。</p><p>整体分为图片检测与视频检测两部分。</p><p><strong>原理为</strong>：</p><ul><li>（图片）点击按钮，打开文件路径，选中图片打开后，执行image_pred函数，将检测结果以图像形式显示出来。</li><li>（视频）点击按钮，打开文件路径，选中视频打开后，执行video_pred函数，对原视频按一定时间间隔抽帧并对每帧图片检测，最后将所有帧的检测结果连续地显示出来。</li></ul><p>代码如下：</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QMainWindow,QApplication,QFileDialog</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QPixmap,QImage</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QTimer</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> main_window_ui <span class="keyword">import</span> Ui_MainWindow</span><br><span class="line"></span><br><span class="line"><span class="comment">#图像绘制</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">conver2QImage</span>(<span class="params">img</span>):</span><br><span class="line">    height,width,channel = img.shape</span><br><span class="line">    <span class="keyword">return</span> QImage(img, width, height, width*channel, QImage.Format_RGB888)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建视图类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span>(QMainWindow,Ui_MainWindow):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MainWindow,self).__init__() <span class="comment">#多继承</span></span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        <span class="comment">#训练好的本地模型</span></span><br><span class="line">        self.model = torch.hub.load(<span class="string">&#x27;./&#x27;</span>,<span class="string">&#x27;custom&#x27;</span>,path=<span class="string">&#x27;runs/train/exp2/weights/best.pt&#x27;</span>,source=<span class="string">&#x27;local&#x27;</span>) </span><br><span class="line">        self.timer = QTimer() <span class="comment">#计时器</span></span><br><span class="line">        self.timer.setInterval(<span class="number">1</span>) <span class="comment">#1ms间隔</span></span><br><span class="line">        self.video = <span class="literal">None</span></span><br><span class="line">        self.bind_slots()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#图片检测</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">image_pred</span>(<span class="params">self,file_path</span>):</span><br><span class="line">        results = self.model(file_path)</span><br><span class="line">        image = results.render()[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> conver2QImage(image)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">open_image</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;点击了检测图片&#x27;</span>)</span><br><span class="line">        file_path = QFileDialog.getOpenFileName(self,<span class="built_in">dir</span>=<span class="string">&#x27;./datasets/images/train&#x27;</span>,<span class="built_in">filter</span>=<span class="string">&#x27;*.jpg;*.png;*.jpeg&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> file_path[<span class="number">0</span>]:</span><br><span class="line">            self.timer.stop()</span><br><span class="line">            file_path = file_path[<span class="number">0</span>]</span><br><span class="line">            <span class="built_in">print</span>(file_path)</span><br><span class="line">            qimage = self.image_pred(file_path)</span><br><span class="line">            self.<span class="built_in">input</span>.setPixmap(QPixmap(file_path))</span><br><span class="line">            self.output.setPixmap(QPixmap.fromImage(qimage))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#视频检测</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">video_pred</span>(<span class="params">self</span>):</span><br><span class="line">        ret, frame = self.video.read()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">            self.timer.stop()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            frame = cv2.cvtColor(frame,cv2.COLOR_BGR2RGB)</span><br><span class="line">            self.<span class="built_in">input</span>.setPixmap(QPixmap.fromImage(conver2QImage(frame)))</span><br><span class="line">            results = self.model(frame)</span><br><span class="line">            image = results.render()[<span class="number">0</span>]</span><br><span class="line">            self.output.setPixmap(QPixmap.fromImage(conver2QImage(image)))</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">open_video</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;点击了检测视频&#x27;</span>)</span><br><span class="line">        file_path = QFileDialog.getOpenFileName(self,<span class="built_in">dir</span>=<span class="string">&#x27;./datasets&#x27;</span>,<span class="built_in">filter</span>=<span class="string">&#x27;*.mp4;*avi;*.flv;*.mpg;*.mov;*.wmv&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> file_path[<span class="number">0</span>]:</span><br><span class="line">            file_path = file_path[<span class="number">0</span>]</span><br><span class="line">            self.video = cv2.VideoCapture(file_path)</span><br><span class="line">            self.timer.start()</span><br><span class="line">                   </span><br><span class="line">    <span class="comment">#事件绑定</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bind_slots</span>(<span class="params">self</span>):</span><br><span class="line">        self.det_image.clicked.connect(self.open_image)</span><br><span class="line">        self.det_video.clicked.connect(self.open_video)</span><br><span class="line">        self.timer.timeout.connect(self.video_pred)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line">    window = MainWindow()</span><br><span class="line">    window.show()</span><br><span class="line"></span><br><span class="line">    app.<span class="built_in">exec</span>()</span><br></pre></td></tr></table></figure></div><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>功能上基本满足，界面适应性上还有点问题，无法自动适配任意大小，</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/06/25/79095456ab84dd2804c6085769314246.png"                      alt="image-20230625225105755" style="zoom:67%;"                 ><h3 id="YOLOv5利用Gradio搭建Web-GUI"><a href="#YOLOv5利用Gradio搭建Web-GUI" class="headerlink" title="YOLOv5利用Gradio搭建Web GUI"></a>YOLOv5利用Gradio搭建Web GUI</h3><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/08/c35dd2cc26177b6a06380984fde06228.png"                      alt="image-20231008114257720" style="zoom: 50%;"                 ><p>Gradio是一个机器学习模型可视化的Python库，简单来说Gradio可以通过python生成一套html页面，其中包含大部分组件，通过设置相关组件可以实现丰富的交互功能，让机器学习模型拥有用户友好的图形界面。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/08/6c7ebcebe22a98dafff132adedbb24e2.png"                      alt="image-20231008114143706" style="zoom:67%;"                 ><p>Gradio与Hugging Face合作密切，很多机器学习爱好者与研究员常常会将gradio的模型部署到 HuggingFace的 Space托管空间中，实现外界免费访问</p><p>Gradio常用于测试AI模型的效果，如图像识别，姿态估计，图像分割。在将训练完成的模型加载之后，可以对测试数据集进行实时检测。</p><blockquote><p>Gradio的主要优点包括:</p><ol><li><p>简单易用,只需要几行代码就可以创建界面。无需前端开发经验。</p></li><li><p>支持丰富的交互组件,如滑块、单选框、文本框等。可以快速构建复杂的界面。</p></li><li><p>可以为TensorFlow、PyTorch等多种框架的模型构建界面。</p></li><li><p>支持在线部署。可以通过链接与他人分享你的模型。</p></li><li><p>支持在Jupyter Notebook中嵌入组件,使Notebook更加交互式。</p></li><li><p>开源免费。社区活跃,文档丰富。</p><p>Gradio官方网站：<a class="link"   href="http://www.gradio.app/" >www.gradio.app <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，参考文档：<a class="link"   href="https://www.gradio.app/docs/interface" >Gradio — 文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>   官方Github：<a class="link"   href="https://github.com/gradio-app/gradio" >gradio-app&#x2F;gradio：构建和分享令人愉快的机器学习应用程序 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></li></ol></blockquote><p>该部分是基于Gradio来搭建YoLov5模型的WebUI系统，分别实现本地与外网访问，所用模型为上述火影忍者训练集训练好的模型。如果想实现特定的人或物的检测，可以更换其他模型。</p><p>- </p><ul><li>操作如下：</li></ul><ol><li><p>如果环境中没有Gradio库的话，需要先行安装，</p><div class="highlight-container" data-rel="Powershell"><figure class="iseeu highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gradio</span><br></pre></td></tr></table></figure></div></li><li><p>创建Gradio_demo.py文件用于编写WebUI程序</p></li><li><p>示例代码：</p></li></ol><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> gradio <span class="keyword">as</span> gr</span><br><span class="line"></span><br><span class="line">model = torch.hub.load(<span class="string">&#x27;./&#x27;</span>,<span class="string">&#x27;custom&#x27;</span>,path=<span class="string">&#x27;runs/train/exp2/weights/best.pt&#x27;</span>,source=<span class="string">&#x27;local&#x27;</span>) <span class="comment">#模型加载,该模型为训练效果最好的模型</span></span><br><span class="line"></span><br><span class="line">title = <span class="string">&#x27;基于Gradio的YOLOv5演示项目&#x27;</span></span><br><span class="line">desc = <span class="string">&#x27;这是一个基于Gradio的图像识别WebUI演示项目,非常简洁方便&#x27;</span></span><br><span class="line"></span><br><span class="line">base_conf,base_iou = <span class="number">0.25</span>,<span class="number">0.45</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># det_image函数为将滑动条与模型conf与iou关联,并实现对img的检测与渲染</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">det_image</span>(<span class="params">img,conf_thres,iou_thres</span>):</span><br><span class="line">    model.conf = conf_thres</span><br><span class="line">    model.iou = iou_thres</span><br><span class="line">    <span class="keyword">return</span> model(img).render()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x27;image&#x27;字符串为gr.Image()的映射,使用效果相同, gr.Slider()为gradio自带滑动条</span></span><br><span class="line"><span class="comment"># 参数live为是否将示例实时检测</span></span><br><span class="line"><span class="comment"># 参数fn为所用模型及渲染</span></span><br><span class="line"><span class="comment"># 参数example为示例图像</span></span><br><span class="line">interface = gr.Interface(inputs=[<span class="string">&#x27;image&#x27;</span>,gr.Slider(minimum=<span class="number">0</span>,maximum=<span class="number">1</span>,value=base_conf),gr.Slider(minimum=<span class="number">0</span>,maximum=<span class="number">1</span>,value=base_iou)],</span><br><span class="line">             outputs=[<span class="string">&#x27;image&#x27;</span>],</span><br><span class="line">             fn=det_image,</span><br><span class="line">             title = title,</span><br><span class="line">             description= desc,</span><br><span class="line">             live= <span class="literal">True</span>,</span><br><span class="line">             examples=[[<span class="string">&quot;./datasets/images/train/30.jpg&quot;</span>,base_conf,base_iou],[<span class="string">&quot;./datasets/images/train/90.jpg&quot;</span>,base_conf,base_iou]]</span><br><span class="line">             )</span><br><span class="line"></span><br><span class="line"><span class="comment">#其中interface.launch()方法返回三个值</span></span><br><span class="line"><span class="comment"># app，为 Gradio 演示提供支持的 FastAPI 应用程序</span></span><br><span class="line"><span class="comment"># local_url，本地地址</span></span><br><span class="line"><span class="comment"># share_url，公共地址，当share=True时生成</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app,local_url,share_url = interface.launch(share=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div><p>效果图：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/08/dffb5608bd9d58b1fac25f38c8a3c1ed.png"                      alt="image-20231008113809902" style="zoom: 67%;"                 ><h3 id="VSCode与AutoDL服务器连接"><a href="#VSCode与AutoDL服务器连接" class="headerlink" title="VSCode与AutoDL服务器连接"></a>VSCode与AutoDL服务器连接</h3><p>进行深度学习模型训练时，常常需要用到GPU进行加速，但是由于自己用的电脑GPU算力较低，所以跑模型一般常借助GPU服务器来帮助训练，以下是使用VSCode和AutoDL（服务器提供商）来完成在服务器上的模型训练。</p><h4 id="打开VScode插件"><a href="#打开VScode插件" class="headerlink" title="打开VScode插件"></a>打开VScode插件</h4><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/e3162c93dce5bd82fdfd3329a6c1d00d.png"                      alt="image-20231010161610637" style="zoom:67%;"                 ><ul><li>安装Remote-SSH远程连接插件</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.常子儒.xyz/2023/10/10/c4d11d146f69b7ce8979300166ac2c7c.png"                      alt="image-20231010161451924"                ></p><h4 id="打开远程连接窗口"><a href="#打开远程连接窗口" class="headerlink" title="打开远程连接窗口"></a>打开远程连接窗口</h4><ul><li>在VScode左下角</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/f1ff8119db3d450d18931a9f0417cb43.png"                      alt="image-20231010161657180" style="zoom: 80%;"                 ><h4 id="连接服务器"><a href="#连接服务器" class="headerlink" title="连接服务器"></a>连接服务器</h4><ul><li>连接主机</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/24a04148c1b8d852a30a2b9501f01782.png"                      alt="image-20231010161754197" style="zoom: 80%;"                 ><ul><li>添加新的服务器</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/2c1a8aea2de8729050c33413661d1527.png"                      alt="image-20231010161855610" style="zoom:80%;"                 ><ul><li>这个地方输入登陆指令，我开的服务器是<code>ssh -p 44599 root@region-45.autodl.pro</code></li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/9f204a5ac2f1138b55cb112a501ca6ed.png"                      alt="image-20231010161936542" style="zoom:80%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/3207d1b8759ae50f914778388cf2fc25.png"                      alt="image-20231010162012524" style="zoom: 67%;"                 ><ul><li>这个地方默认选择第一个，会将SSH configuration存到本地。</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/f892c58cb14ad002eb589ab033035600.png"                      alt="image-20231010162306620" style="zoom:67%;"                 ><ul><li>然后这时候重新打开运程连接工具，新加的服务器链接就有了。这时候点击新加的这个。</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/f1b1a4ad408d86908a338f3f59c6e08c.png"                      alt="image-20231010162433472" style="zoom:80%;"                 ><ul><li>选择服务器的操作系统</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/49dadce88dae0331c9f9cd6fe24cc4dd.png"                      alt="image-20231010162546357" style="zoom:80%;"                 ><ul><li>输入服务器密码</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/f3d380e9156822187b0be06959601f6a.png"                      alt="image-20231010162618472" style="zoom:80%;"                 ><h4 id="使用服务器"><a href="#使用服务器" class="headerlink" title="使用服务器"></a>使用服务器</h4><ul><li>这时打开文件夹，这显示的便是服务器中的文件。</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/6551c60f386ed4f6770702b970ebb077.png"                      alt="image-20231010162752393" style="zoom:80%;"                 ><ul><li>再打开一个项目测试时，可能会出现<code>安装Python扩展</code>提示，因为之前的Python扩展是安装在本地，在服务器使用VScode，需要重新安装扩展。</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/db232a803c0fb6cbc077aa974bde8ab7.png"                      alt="image-20231010163202982" style="zoom: 67%;"                 ><ul><li>运行需要选择一个解释器，服务器中有多个，其中Base为Anaconda默认的，另一个为深度学习专用虚拟环境</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/10/10/dfde879df88d8ecebe7f51bce58ae62e.png"                      alt="image-20231010163546332" style="zoom: 80%;"                 >]]></content>
      
      
      <categories>
          
          <category> DeepLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YOLO </tag>
            
            <tag> 目标检测 </tag>
            
            <tag> 实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NewBing申请及体验</title>
      <link href="/2023/05/12/NewBing%E7%94%B3%E8%AF%B7%E5%8F%8A%E4%BD%93%E9%AA%8C/"/>
      <url>/2023/05/12/NewBing%E7%94%B3%E8%AF%B7%E5%8F%8A%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>​</p><p>​New Bing网站：<a class="link"   href="https://www.bing.com/new" >新必应 - 了解详细信息 (bing.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="1、挂VPN"><a href="#1、挂VPN" class="headerlink" title="1、挂VPN"></a>1、挂VPN</h3><p><strong>节点路线最好选择美国</strong>，其他地区的节点应该也可以。</p><p>推荐一下我使用的VPN：</p><ul><li>🌸<a class="link"   href="https://sakuracat-link.com/#/register?code=iCPvqgNE" >樱花猫SakuraCat <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：网速快，延迟较低，价格比较便宜。有中转、IPEL（专线）、隧道，网络质量IPEL&gt;中转&gt;隧道</li></ul><p>有较多套餐可供选择（按周期或按流量）：<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/b8090beb21d69dc9e999b618dc3ad9ed.png"                      style="zoom:15%;"                 ></p><p>我的订阅是250G套餐永久期限，综合来讲比较划算<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/a582fdf70008f0bcc92080780cb7a351.png"                      alt="image-20230513000401882" style="zoom: 33%;"                 ></p><ul><li><p><a class="link"   href="https://tsmeow.xyz/reguser?aff=r56srjfU" >千速喵TSMeow <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：这个机场相较于樱花猫更便宜点，其中一次性为不限时套餐，其余为月付，双11的时候有活动，会有年付套餐，我购买的是38元一年，每月111G流量。这个机场的套餐不会限速，网速比较快，不过有0.6倍消耗，1倍消耗和3.5倍消耗之分<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.常子儒.xyz/2023/11/17/a3140dad5d361be78f8e5f9e202392d0.png"                      alt="image-20231117193938463"                ></p></li><li><p>✈<a class="link"   href="https://一元机场.com/#/register?code=BSE0E7Jq" >一元机场 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：这个机场非常便宜，网络质量有时稳定有时卡，套餐较少</p></li></ul><p>我购买的是11一年的，首月500G，以后每月100G，适合看视频之类的😁，这个需要下载客户端clash，将订阅链接复制进去，详情见文档。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/520c4f8ccf90cc9b442f3684159794a5.png"                      style="zoom: 33%;"                 ><h3 id="2、所在地区更改"><a href="#2、所在地区更改" class="headerlink" title="2、所在地区更改"></a>2、所在地区更改</h3><p>打开 <strong><a class="link"   href="https://bing.com或https//bing.com/new" >https://bing.com或https://bing.com/new <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong> 必应网站，选择右侧 <strong>横线——设置——国家&#x2F;地区</strong>，</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/277817d487d297f9328938a59bec7131.png"                      style="zoom: 50%;"                 ><p>选择 <strong>美国</strong>。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/1a3ae5624255f0e6e3e155a530ac3fef.png"                      style="zoom:50%;"                 ><p>操作完成后返回必应<a class="link"   href="https://bing.com,如果有以下内容则成功了一半!/" >https://bing.com，如果有以下内容则成功了一半！ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/0d9cfec54fbe0aa26013a9a9683060d9.png"                      style="zoom:50%;"                 ><h3 id="3、问题“出错了，请重试”"><a href="#3、问题“出错了，请重试”" class="headerlink" title="3、问题“出错了，请重试”"></a>3、问题“出错了，请重试”</h3><p>上述操作完成后，尝试使用New Bing，开始聊天，会发现<strong>显示“出错了，请重试”</strong>，这种情况<strong>要么是没翻墙，要么是账号受限（概率较大）</strong>。</p><p>一般账号申请较早，被禁止访问New Bing了，<strong>需要注册一个新的微软账号，注册国家选择美国</strong>，选择一个新的邮箱，原本手机号也可以接收验证码。完成后重新开一下Edge浏览器</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/9d765106b1a8b55558dd0554e21bfd00.png"                      style="zoom: 67%;"                 ><h3 id="4、使用"><a href="#4、使用" class="headerlink" title="4、使用"></a>4、使用</h3><p>界面：可以选择对话样式，</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/e6ef561159cceff5a8a20529388dc466.png"                      style="zoom: 50%;"                 ><p>尝试几个奇怪的问题询问它，并比较这三种对话样式：</p><p>1、更精确：开始简洁、直截了当的对话；如下：该模式可能趋向于正确性标准答案，</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/9ae6567978d499f47452e7f781a9d322.png"                      style="zoom: 50%;"                 ><p>2、更平衡：开始一个信息丰富且友好的聊天；如下：答案适中，具有精确与创造两者特点。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/bd04c72e46dd97846d8d585de96ab440.png"                      style="zoom:50%;"                 ><p>3、更创造：开始原创和富有想象力的聊天；如下：答案：趋向于基于原内容再创作，比较无厘头。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/2d73e6c1d845ae179f966ddce9156fab.png"                      style="zoom:50%;"                 ><p>以上就是我个人申请并使用New Bing聊天的过程，欢迎评论！</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NewBing </tag>
            
            <tag> chatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习记录（三）：了解神经网络模型（结构、原理）</title>
      <link href="/2023/05/10/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E4%BA%86%E8%A7%A3%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%EF%BC%88%E7%BB%93%E6%9E%84%E3%80%81%E5%8E%9F%E7%90%86%EF%BC%89/"/>
      <url>/2023/05/10/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E4%BA%86%E8%A7%A3%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%EF%BC%88%E7%BB%93%E6%9E%84%E3%80%81%E5%8E%9F%E7%90%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>​神经网络</p><p>听到神经网络，总是被各种各样的称呼迷惑半天，什么CNN、RNN、GAN、NN等等，下面准备从各个神经网络入手，了解他们的<strong>网络结构及工作原理</strong>。</p><h3 id="先验知识"><a href="#先验知识" class="headerlink" title="先验知识"></a>先验知识</h3><h4 id="赫布型学习"><a href="#赫布型学习" class="headerlink" title="赫布型学习"></a>赫布型学习</h4><p>1949年，心理学家唐纳德·赫布在《The Organization of Behavior》论文中描述了神经元学习法则，这是一个神经科学理论，解释了学习过程中脑神经元发生的变化，描述了突触可塑性原理，即<em>突触前神经元向突触后神经元的持续重复的刺激，可以导致突触传递效能的增加。</em></p><p>这一理论可以表述为：</p><blockquote><p><em>我们可以假定，反射活动的持续与重复会导致神经元稳定性的持久性提升……当神经元A的轴突与神经元B很近并参与了对B的重复持续的兴奋时，这两个神经元或其中一个便会发生某些生长过程或代谢变化，致使A作为能使B兴奋的细胞之一，它的效能增强了。</em></p></blockquote><ul><li>神经元”A”的激发必须在神经元”B”之先，而不能同时激发——&gt;突触可塑性需要一定的时间延迟</li><li>对神经元的重复刺激，使得神经元之间的突触强度增加</li></ul><h3 id="感知机"><a href="#感知机" class="headerlink" title="感知机"></a>感知机</h3><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/195bbae72e29f2f3ddd8afa127876f5b.png"                      style="zoom: 50%;"                 ><p>我们知道人工智能的任务是模拟人的智能做出类似的决策等，那么在早期人工智能刚兴起时，科学家就想到了“能否构造模拟人脑的模型呢？”，人脑有数以亿计的神经元组成，当人接收到外界刺激时，生成的电信号在各个神经元细胞直接传递，然后人会得到相应的信息，继而作出反应，神经元传递信息的这一过程似乎与计算机的工作原理类似，所以<strong>最初的神经网络从单个神经元出发，研究这一基本单位，确认如何模拟工作</strong>。</p><p>因而有了最基本的**<a class="link"   href="https://zh.wikipedia.org/wiki/%E6%84%9F%E7%9F%A5%E5%99%A8" >感知机 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>（英语：Perceptron，一种神经元模型）**：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/d98c8c5f26cd16b9e67b75d299696167.png"                      style="zoom: 50%;"                 ><blockquote><p><strong>弗兰克·罗森布拉特</strong>在1957年就职于康奈尔航空实验室（Cornell Aeronautical Laboratory）时所发明的一种<strong>人工神经网路</strong>。它可以被视为一种<strong>最简单形式的前馈神经网路</strong>，是一种<strong>二元线性分类器</strong>，在人工神经网络领域，它也被指为单层的人工神经网络。但是它的本质缺陷是<strong>不能处理线性不可分问题</strong>。</p><p>——来自维基百科</p></blockquote><p>工作原理：其<strong>输入为实例的特征向量</strong>，<strong>输出为实例的类别</strong>。</p><p>感知器的<strong>取值为+1和-1的二值</strong>，感知机对应于输入空间中<strong>将实例划分为正负两类分离超平面</strong>（<strong>超平面是指在N维图形内部的N-1维图形，如二维平面中的一维直线、三维空间中的二维平面</strong>），属于判别模型，</p><p>感知机学习旨在求出将训练数据进行线性划分的分离超平面——&gt;导入基于误分类的损失函数——&gt;利用梯度下降法进行损失函数极小化——&gt;求出感知机模型。</p><p>前馈神经网络（Feedforward neural network，FNN）</p><p>前馈卷积神经网络</p>]]></content>
      
      
      <categories>
          
          <category> DeepLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概念辨析：偏导数、方向导数及梯度</title>
      <link href="/2023/05/04/%E6%A6%82%E5%BF%B5%E8%BE%A8%E6%9E%90%EF%BC%9A%E5%81%8F%E5%AF%BC%E6%95%B0%E3%80%81%E6%96%B9%E5%90%91%E5%AF%BC%E6%95%B0%E5%8F%8A%E6%A2%AF%E5%BA%A6/"/>
      <url>/2023/05/04/%E6%A6%82%E5%BF%B5%E8%BE%A8%E6%9E%90%EF%BC%9A%E5%81%8F%E5%AF%BC%E6%95%B0%E3%80%81%E6%96%B9%E5%90%91%E5%AF%BC%E6%95%B0%E5%8F%8A%E6%A2%AF%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<p>​<strong>导数是一元函数的变化率（斜率）</strong>。导数也是函数，是函数的变化率与位置的关系。</p><p>如果是多元函数呢？</p><h3 id="偏导数"><a href="#偏导数" class="headerlink" title="偏导数"></a>偏导数</h3><p>偏导数是针对多变量函数而言的，它是将多变量函数退化成一元函数分别求各自导数，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container>元函数有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.009ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 888 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g></g></svg></mjx-container>个偏导数。</p><p>以二元函数为例：Z = F（x，y），求x的偏导数就是将y变量看成常量，然后对x求导。</p><p>对于两个变量的函数<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.244ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 550 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></svg></mjx-container>，它的偏导数和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.667ex;" xmlns="http://www.w3.org/2000/svg" width="5.298ex" height="2.262ex" role="img" focusable="false" viewBox="0 -705 2341.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mo" transform="translate(977.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1422.1,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>定义为：<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/89625ab34e1392d743d5d592dc43da91.png" style="zoom: 50%;"></p><p>其他表示方法也有，如：<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/01562dc2fcb68190c29f3f3d7bfddab5.png" style="zoom:67%;"></p><p>F(x,y)=x^2^+y^2^的图像：<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/20d24aef5a64bbd3cd1bf90a7449e034.png" style="zoom:50%;"></p><p>分别求偏导，<code>dF(x,y)/dx=2x；dF(x,y)/dy=2y</code>，图像为：<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/edc225aa828bb030736df1f9255da9d5.png" style="zoom:50%;"></p><h3 id="方向导数"><a href="#方向导数" class="headerlink" title="方向导数"></a>方向导数</h3><p>​如果是方向不是沿着坐标轴方向，而是任意方向呢？则为<strong>方向导数</strong>。如下图所示，点P位置处红色箭头方向的方向导数为黑色切线的斜率，示例来自于 <a class="link" href="https://www.geogebra.org/m/Bx8nFMNc">Directional Derivative – GeoGebra — 定向导数 – GeoGebra <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/998cb012b3ee3cb697d1cba39ec13c5d.png" style="zoom:67%;"><p>​方向导数为函数在某一个方向上的导数，具体地，定义<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="2.403ex" height="1.464ex" role="img" focusable="false" viewBox="0 -442 1062 647"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(572,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>平面上一点<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.934ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2180.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(918,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1362.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(1791.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>以及单位向量<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.537ex" height="2.477ex" role="img" focusable="false" viewBox="0 -845 6867.2 1095"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(849.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1905.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2294.6,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(2727.6,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(3212.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(3681.6,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(4150.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4595.2,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(5064.2,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5409.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6009.2,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(6478.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>，在曲面<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="10.482ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4633.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(742.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1798.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(2348.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2737.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3309.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3754.2,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4244.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>上，从点<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="12.118ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5356 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(918,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1362.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(1791.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2236.3,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(2786.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3175.3,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(3704.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4149,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(4578,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4967,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>出发，沿<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.537ex" height="2.477ex" role="img" focusable="false" viewBox="0 -845 6867.2 1095"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(849.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1905.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2294.6,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(2727.6,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(3212.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(3681.6,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(4150.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4595.2,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(5064.2,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5409.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6009.2,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(6478.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>方向走 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.817ex" height="1.441ex" role="img" focusable="false" viewBox="0 -626 361 637"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container> 单位长度后，函数值<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.052ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 465 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g></svg></mjx-container> 为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="29.091ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 12858.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(749,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1138,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(1499,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2165.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3221.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3771.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4160.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(4911.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(5912,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(6273,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(6706,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(7191,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(7660,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(8129,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(8573.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(9224.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(10225.1,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(10586.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(11055.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(11400.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(12000.1,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(12469.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>，则点<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.934ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2180.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(918,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1362.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(1791.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>处<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.537ex" height="2.477ex" role="img" focusable="false" viewBox="0 -845 6867.2 1095"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(849.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1905.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2294.6,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(2727.6,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(3212.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(3681.6,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(4150.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(4595.2,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(5064.2,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5409.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6009.2,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(6478.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>方向的方向导数为：</p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/05/12/fbd843ed4f4224afac5a8520691337f5.png"></p><p>​上面推导中使用了链式法则。其中，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.145ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3158.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mo" transform="translate(977.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1366.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(1895.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2340.1,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2769.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.667ex;" xmlns="http://www.w3.org/2000/svg" width="7.014ex" height="2.364ex" role="img" focusable="false" viewBox="0 -750 3100.1 1045"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(919.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1308.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(1837.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2282.1,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(2711.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>分别为函数在<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.934ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2180.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(918,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1362.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(1791.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>位置的偏导数。由上面的推导可知：</p><p>​该位置处，任意方向的<strong>方向导数为偏导数的线性组合，系数为该方向的单位向量</strong>。当该方向与坐标轴正方向一致时，方向导数即偏导数，换句话说，<strong>偏导数为坐标轴方向上的方向导数，其他方向的方向导数为偏导数的合成</strong>。</p><p>​写成向量形式，<strong>偏导数构成的向量</strong>为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.667ex;" xmlns="http://www.w3.org/2000/svg" width="28.005ex" height="2.364ex" role="img" focusable="false" viewBox="0 -750 12378.2 1045"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1383,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1772,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(2301,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2745.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3174.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3841.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4897.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5286.2,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mo" transform="translate(6263.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6652.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(7181.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(7626.4,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(8055.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8444.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(8889,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(9808.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10197.5,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(10726.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(11171.2,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(11600.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11989.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>，称之为<strong>梯度</strong>。</p><h3 id="梯度"><a href="#梯度" class="headerlink" title="梯度"></a>梯度</h3><p><strong>梯度</strong>，写作<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="3.129ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 1383 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></svg></mjx-container>，二元时为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.11ex;" xmlns="http://www.w3.org/2000/svg" width="8.267ex" height="3.145ex" role="img" focusable="false" viewBox="0 -899.6 3654.1 1390.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mfrac" transform="translate(389,0)"><g data-mml-node="mrow" transform="translate(257.8,394) scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-345.6) scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="1004.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(1633.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mfrac" transform="translate(2078.4,0)"><g data-mml-node="mrow" transform="translate(228.8,394) scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-345.6) scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="946.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(3265.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>，多元时为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.11ex;" xmlns="http://www.w3.org/2000/svg" width="11.296ex" height="3.145ex" role="img" focusable="false" viewBox="0 -899.6 4992.7 1390.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mfrac" transform="translate(389,0)"><g data-mml-node="mrow" transform="translate(257.8,394) scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-345.6) scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="1004.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(1633.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mfrac" transform="translate(2078.4,0)"><g data-mml-node="mrow" transform="translate(228.8,394) scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-345.6) scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2202" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="946.7" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(3431.7,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mo" transform="translate(4603.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>。</p><p>我们继续上面方向导数的推导，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.934ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2180.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(918,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1362.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(1791.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>处<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g></g></g></svg></mjx-container>方向上的方向导数为:</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/69e2dc47da935b55fe8f3ec8e49b9bc5.png" style="zoom: 80%;"><p>其中，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.348ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 596 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g></g></g></svg></mjx-container>为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.063ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3563.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1383,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1772,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(2301,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2745.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3174.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>与<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.937ex" role="img" focusable="false" viewBox="0 -845 572 856"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container> 的夹角，显然，当<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="5.497ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 2429.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(873.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1929.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>即<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.937ex" role="img" focusable="false" viewBox="0 -845 572 856"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container>与梯度<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.063ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3563.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1383,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1772,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(2301,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2745.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3174.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container><strong>同向时</strong>，<strong>方向导数取得最大值</strong>，<strong>最大值为梯度的模</strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.321ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4119.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(278,0)"><g data-mml-node="mo"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g></g><g data-mml-node="mi" transform="translate(1111,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1661,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2050,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(2579,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3023.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3452.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3841.7,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g></g></svg></mjx-container>，</p><p>当 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="5.655ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 2499.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(873.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1929.6,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g></g></g></svg></mjx-container> 即 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.937ex" role="img" focusable="false" viewBox="0 -845 572 856"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container> 与梯度<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.063ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3563.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1383,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1772,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(2301,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2745.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(3174.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>反向时<strong>，</strong>方向导数取得最小值，最小值为梯度模的相反数。</p><p>此外，根据上面方向导数的公式可知，在夹角<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="6.273ex" height="2.361ex" role="img" focusable="false" viewBox="0 -698.8 2772.6 1043.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(873.8,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mfrac" transform="translate(1929.6,0)"><g data-mml-node="mi" transform="translate(220,394) scale(0.707)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="mn" transform="translate(244.7,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="603.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>时方向导数为正，表示<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.937ex" role="img" focusable="false" viewBox="0 -845 572 856"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(313.8,31) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g></g></svg></mjx-container>方向函数值上升；<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="6.273ex" height="2.361ex" role="img" focusable="false" viewBox="0 -698.8 2772.6 1043.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(873.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mfrac" transform="translate(1929.6,0)"><g data-mml-node="mi" transform="translate(220,394) scale(0.707)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z"></path></g><g data-mml-node="mn" transform="translate(244.7,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="603.1" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>时方向导数为负，表示该方向函数值下降。</p><p>至此，方才有了<strong>梯度的几何意义</strong>：</p><ol><li>当前位置的<strong>梯度方向</strong>，为函数在该位置处<strong>方向导数最大的方向</strong>，也是函数值<strong>上升最快的方向</strong>，反方向为下降最快的方向；</li><li>当前位置的<strong>梯度长度（模）</strong>，为最大方向导数的值。</li></ol><h3 id="常用导数表"><a href="#常用导数表" class="headerlink" title="常用导数表"></a>常用导数表</h3><h3 id="1-常数"><a href="#1-常数" class="headerlink" title="1. 常数"></a>1. 常数</h3><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="31.718ex" height="3.949ex" role="img" focusable="false" viewBox="0 -1313 14019.4 1745.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="msup" transform="translate(1149,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(422,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2093.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3149,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(3649,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(4093.7,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(4343.7,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(5103.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(6103.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">常</text></g><g data-mml-node="mi" transform="translate(7103.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g></g></g></g></svg></mjx-container></p><h3 id="2-指数函数"><a href="#2-指数函数" class="headerlink" title="2. 指数函数"></a>2. 指数函数</h3><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="24.781ex" height="3.949ex" role="img" focusable="false" viewBox="0 -1313 10953.1 1745.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(633,363) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="msup" transform="translate(1476.5,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(422,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2420.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3476.5,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(633,363) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mi" transform="translate(4730.6,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(278,0)"></path></g><g data-mml-node="mo" transform="translate(5564.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(5731.3,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="16.814ex" height="3.949ex" role="img" focusable="false" viewBox="0 -1313 7432 1745.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="msup" transform="translate(1342.5,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(422,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2286.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3342.5,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></g></svg></mjx-container></p><h3 id="3-对数函数"><a href="#3-对数函数" class="headerlink" title="3. 对数函数"></a>3. 对数函数</h3><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.381ex;" xmlns="http://www.w3.org/2000/svg" width="27.033ex" height="4.766ex" role="img" focusable="false" viewBox="0 -1496.3 11948.6 2106.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mi" transform="translate(1311,-241.4) scale(0.707)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g><g data-mml-node="mo" transform="translate(2124.1,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2290.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(2862.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(422,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3807,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4862.7,0)"><g data-mml-node="mn" transform="translate(845.2,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-345) scale(0.707)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(738.7,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(278,0)"></path></g><g data-mml-node="mo" transform="translate(1572.7,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1739.3,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g><rect width="1804" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.381ex;" xmlns="http://www.w3.org/2000/svg" width="18.811ex" height="4.766ex" role="img" focusable="false" viewBox="0 -1496.3 8314.6 2106.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(278,0)"></path></g><g data-mml-node="mo" transform="translate(1223,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1389.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(1961.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(422,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2905.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3961.7,0)"><g data-mml-node="mn" transform="translate(245.5,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220,-345) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><rect width="604.5" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p><h3 id="4-幂函数"><a href="#4-幂函数" class="headerlink" title="4. 幂函数"></a>4. 幂函数</h3><p> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="48.322ex" height="4.243ex" role="img" focusable="false" viewBox="0 -1442.7 21358.4 1875.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msup" transform="translate(1468.3,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(422,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2412.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3468.3,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="msup" transform="translate(4068.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6051.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mtext" transform="translate(6495.9,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mi" transform="translate(6745.9,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(7345.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">为</text></g><g data-mml-node="mi" transform="translate(8345.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">任</text></g><g data-mml-node="mi" transform="translate(9345.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">意</text></g><g data-mml-node="mi" transform="translate(10345.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">实</text></g><g data-mml-node="mi" transform="translate(11345.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g></g></g></g></svg></mjx-container></p><h3 id="5-三角函数"><a href="#5-三角函数" class="headerlink" title="5. 三角函数"></a>5. 三角函数</h3><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="25.176ex" height="3.949ex" role="img" focusable="false" viewBox="0 -1313 11128 1745.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(394,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(672,0)"></path></g><g data-mml-node="mo" transform="translate(1617,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1783.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(2355.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(422,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3299.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4355.7,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path></g><g data-mml-node="mo" transform="translate(5693.7,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(5860.3,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="28.874ex" height="3.949ex" role="img" focusable="false" viewBox="0 -1313 12762.2 1745.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path></g><g data-mml-node="mo" transform="translate(1727,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1893.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(2465.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(422,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3409.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4465.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(5410.3,0)"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(394,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(672,0)"></path></g><g data-mml-node="mo" transform="translate(6638.3,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(6805,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="27.515ex" height="4.243ex" role="img" focusable="false" viewBox="0 -1442.7 12161.7 1875.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(389,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(889,0)"></path></g><g data-mml-node="mo" transform="translate(1834,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2000.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(2572.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3516.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(4572.7,0)"><g data-mml-node="mi"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(394,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(838,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1315,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6291.2,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(6457.9,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="30.774ex" height="4.243ex" role="img" focusable="false" viewBox="0 -1442.7 13602.2 1875.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(944,0)"></path></g><g data-mml-node="mo" transform="translate(1722,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1888.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(2460.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3404.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4460.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(5405.3,0)"><g data-mml-node="mi"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(444,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(838,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(1315,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7123.9,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(7290.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="34.368ex" height="3.949ex" role="img" focusable="false" viewBox="0 -1313 15190.6 1745.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(394,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(838,0)"></path></g><g data-mml-node="mo" transform="translate(1671,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1837.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(2409.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3353.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4409.7,0)"><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(394,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(838,0)"></path></g><g data-mml-node="mo" transform="translate(5691.7,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(5858.3,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(6597,0)"><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(389,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(889,0)"></path></g><g data-mml-node="mo" transform="translate(8042,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(8208.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></svg></mjx-container></p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.979ex;" xmlns="http://www.w3.org/2000/svg" width="37.627ex" height="3.949ex" role="img" focusable="false" viewBox="0 -1313 16631.1 1745.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(444,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(838,0)"></path></g><g data-mml-node="mo" transform="translate(1671,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(1837.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(2409.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3353.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4409.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(5354.3,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(444,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(838,0)"></path></g><g data-mml-node="mo" transform="translate(6636.3,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(6803,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(7541.7,0)"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(944,0)"></path></g><g data-mml-node="mo" transform="translate(8874.7,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(9041.3,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></svg></mjx-container></p><h3 id="6-反三角函数"><a href="#6-反三角函数" class="headerlink" title="6. 反三角函数"></a>6. 反三角函数</h3><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -2.307ex;" xmlns="http://www.w3.org/2000/svg" width="32.689ex" height="5.693ex" role="img" focusable="false" viewBox="0 -1496.3 14448.4 2516.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(892,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(1336,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1730,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(2008,0)"></path></g><g data-mml-node="mo" transform="translate(2953,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(3119.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(3691.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4635.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(5691.7,0)"><g data-mml-node="mn" transform="translate(1153.2,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="msqrt" transform="translate(220,-523.4) scale(0.707)"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(1278,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(0,119.9)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="2286.6" height="73.4" x="853" y="846.5"></rect></g><rect width="2420" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -2.307ex;" xmlns="http://www.w3.org/2000/svg" width="36.164ex" height="5.693ex" role="img" focusable="false" viewBox="0 -1496.3 15984.6 2516.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(892,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(1336,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(1780,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(2280,0)"></path></g><g data-mml-node="mo" transform="translate(3063,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(3229.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(3801.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4745.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(5801.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(6579.7,0)"><g data-mml-node="mn" transform="translate(1153.2,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="msqrt" transform="translate(220,-523.4) scale(0.707)"><g transform="translate(853,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(1278,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(0,119.9)"><path data-c="221A" d="M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z"></path></g><rect width="2286.6" height="73.4" x="853" y="846.5"></rect></g><rect width="2420" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.704ex;" xmlns="http://www.w3.org/2000/svg" width="31.177ex" height="5.089ex" role="img" focusable="false" viewBox="0 -1496.3 13780.3 2249.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(892,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1336,0)"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(1725,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(2225,0)"></path></g><g data-mml-node="mo" transform="translate(3170,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(3336.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(3908.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4852.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(5908.7,0)"><g data-mml-node="mn" transform="translate(851.6,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-377.4) scale(0.707)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(1278,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="1816.8" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.704ex;" xmlns="http://www.w3.org/2000/svg" width="33.784ex" height="5.089ex" role="img" focusable="false" viewBox="0 -1496.3 14932.5 2249.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle" transform="scale(1.73)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(892,0)"></path><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z" transform="translate(1336,0)"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(1780,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(2280,0)"></path></g><g data-mml-node="mi" transform="translate(3224.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="msup" transform="translate(3796.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4740.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(5796.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(6574.7,0)"><g data-mml-node="mn" transform="translate(851.6,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-377.4) scale(0.707)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(1278,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="1816.8" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础概念 </tag>
            
            <tag> 偏导数 </tag>
            
            <tag> 方向导数 </tag>
            
            <tag> 梯度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘学习记录（二）：数据分析处理库Pandas</title>
      <link href="/2023/05/03/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%A4%84%E7%90%86%E5%BA%93Pandas/"/>
      <url>/2023/05/03/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%A4%84%E7%90%86%E5%BA%93Pandas/</url>
      
        <content type="html"><![CDATA[<h3 id="数据分析处理库Pandas"><a href="#数据分析处理库Pandas" class="headerlink" title="数据分析处理库Pandas"></a>数据分析处理库Pandas</h3><p>Pandas工具包是专门用作数据处理与分析的，其底层计算其实都是由Numpy来完成的，再把复杂的操作全部封装起来，使用起来十分高效，使得使用者可以更专注于数据处理与分析。在数据科学领域，无论哪个方向都是跟数据打交道，所以Pandas非常实用，本文章主要介绍Pandas的核心数据处理操作，并通过实际数据集来演示如何进行数据处理与分析任务。</p><h3 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h3><p>利用Pandas做数据预处理，那必然先要导入相关库。</p><p><code>import pandas as pd</code></p><p>和Numpy导入方法类似，并且<strong>将pandas模块命名为pd</strong>，方便后续写代码</p><p>本节主要了解pandas的数据读取与DataFrame结构的基本数据处理操作。</p><h4 id="数据读取"><a href="#数据读取" class="headerlink" title="数据读取"></a>数据读取</h4><p>我们在上一篇文章了解到，<strong>Numpy读取文件是利用loadtxt()或load()获取文件内容</strong>，pandas也有自己独特的方法。</p><p>pandas读文件需要<strong>根据文件类型的不同使用不同的方法</strong>，如下是对这些方法的汇总：</p><ul><li><em><strong>pd.read_csv()：读取CSV文件</strong></em></li><li><em><strong>pd.read_excel()：读取Excel文件</strong></em></li><li><em><strong>pd.read_sql()：读取SQL数据库中的数据</strong></em></li><li><em><strong>pd.read_json()：读取JSON文件</strong></em></li><li><em><strong>pd.read_html()：读取HTML文件中的表格数据</strong></em></li><li><em><strong>pd.read_clipboard()：读取剪贴板中的数据</strong></em></li><li><em><strong>pd.read_pickle()：读取pickle格式的数据</strong></em></li><li><em><strong>pd.read_feather()：读取feather格式的数据</strong></em></li><li><em><strong>pd.read_parquet()：读取parquet格式的数据</strong></em></li><li><em><strong>pd.read_msgpack()：读取msgpack格式的数据</strong></em></li></ul><p>方法很多，但常用的就那几个：read_csv、read_excel、read_sql、read_json，我们在一些数据集网站上可以看到大部分Dataset都是CSV格式的，CSV文件的通用性非常强，所以后面学习以CSV文件为主，</p><h5 id="pd-read-csv"><a href="#pd-read-csv" class="headerlink" title="pd.read_csv()"></a>pd.read_csv()</h5><p><strong>pd.read_csv(‘文件名’)<strong>，本文的数据集来自于</strong><a class="link" href="https://www.kaggle.com/datasets/ahmedshahriarsakib/usa-real-estate-dataset">Kaggle平台 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><strong>，是一份</strong>真实美国房地产数据</strong>，包含<strong>10个特征</strong>，共计<strong>10万个样本</strong>。read_csv通过Notebook读取CSV文件可以直接展示成表格形式。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/8c5b527cc6ac0554230f9d2254f51c3c.png" style="zoom: 67%;"><h5 id="df-head"><a href="#df-head" class="headerlink" title="df.head()"></a>df.head()</h5><p>可以<strong>展示读取数据，默认展示前五条</strong>。如果想展示更多数据，则可以在head()函数中指定数值，head(10)表示展示前10条数据。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/841a4f03c7fb0a956a42762a7f6c9ef5.png" style="zoom: 67%;"><h5 id="df-tail"><a href="#df-tail" class="headerlink" title="df.tail()"></a>df.tail()</h5><p>用法和head()一致，不过tail()是<strong>展示读取最后面的数据</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/818cb5459d30a4c4aac23d775bbc0e09.png" style="zoom:67%;"><h4 id="DataFrame结构"><a href="#DataFrame结构" class="headerlink" title="DataFrame结构"></a>DataFrame结构</h4><p>Numpy记录中我们了解到Python有自己的四种基本类型，而Numpy有自己的ndarray多维数组。现在学习pandas，它也有自己的数据结构DataFrame。</p><p>那DataFrame是什么样的呢？</p><p>其实上面展示的数据就是DataFrame结构，它是一个<strong>表格型的数据结构</strong>，它含有<strong>一组有序的列</strong>，每列可以是不同的值类型（数值、字符串、布尔型值）。DataFrame 既有行索引也有列索引。</p><p>CSV文件通过read_csv读取后就会转换为DataFrame格式，这也是我们为什么命名df的原因（DataFrame缩写）</p><h5 id="df-info"><a href="#df-info" class="headerlink" title="df.info()"></a>df.info()</h5><p><strong>该方法可以检查读取数据的部分信息</strong>，pandas.core.frame.DataFrame就表示数据类型为DataFrame，下面<strong>箭头a</strong>指的是数据样本规模，<strong>箭头b</strong>指的是各列特征的基本信息及数据类型，<strong>箭头c</strong>指的是文件所占空间大小</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/abc6811d490d444c43c060ff07f37712.png" style="zoom:67%;"><p>除了使用info查看详细数据外，还有很多能调用的属性如下：</p><h5 id="df-index"><a href="#df-index" class="headerlink" title="df.index"></a>df.index</h5><p><strong>单独查看数据样本规模</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/b6be598fb384242aa198e3b040c3dfec.png" style="zoom:67%;"><h5 id="df-columns"><a href="#df-columns" class="headerlink" title="df.columns"></a>df.columns</h5><p><strong>单独查看数据的每列特征的名字</strong></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/05/04/4b964f4bd1f9ff8003977832276c317b.png"></p><h5 id="df-dtypes"><a href="#df-dtypes" class="headerlink" title="df.dtypes"></a>df.dtypes</h5><p>单独查看各列数值的<strong>数据类型</strong>，object表示Python中的字符串</p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/05/04/c0578d417fd2aeee3e94740ba47e7dac.png"></p><h5 id="df-values"><a href="#df-values" class="headerlink" title="df.values"></a>df.values</h5><p><strong>直接取得数值矩阵</strong></p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.常子儒.xyz/2023/05/04/c5debf716ca6680ead2e35f8cd88b6c2.png"></p><p><strong>其他更多属性详细使用方法请见<a class="link" href="https://pandas.pydata.org/docs/">Pandas官方文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></p><h4 id="数据索引"><a href="#数据索引" class="headerlink" title="数据索引"></a>数据索引</h4><p>在引入数据后，我们需要查找具体哪条数据或某一列指标等，该怎么办呢？现在Pandas给出了许多简便方法：</p><h5 id="df-‘特征名’-、变量名-a-b"><a href="#df-‘特征名’-、变量名-a-b" class="headerlink" title="df[‘特征名’]、变量名[a:b]"></a>df[‘特征名’]、变量名[a:b]</h5><p><strong>df[‘特征名’]表示单独查找该特征下的所有值、变量名[a:b]表示该特征值中索引a-b的数据</strong>，如下 【0,5）数据0-4共五个数据。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/6cd2f809409495283222c2cd249cabf6.png" style="zoom:67%;"><p>如果说DataFrame类似于二维数组，那上述单独的bed特征是不是就类似于一维数组呢？</p><p>其实Pandas除了基本DataFrame结构外，还有一种数据结构为Series，由索引（index）和列组成，查询bed的结构发现为pandas.core.series.Series，证实bed为Series类型。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/ccf698074522c6ac623c507419da713d.png" style="zoom:67%;"><p>如果想对样本数据进行计算整理等操作，DataFrame和Series并不能很好的参与，而是需要将结果单独拿出来，上述讲到的df.values返回结果就是二维数组，Series.values结果便是一维数组。这些数组结果也正是因为Pandas中的很多计算和处理等操作都是由Numpy完成的。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/c26b7224aff1828ec66d6258c6d9a0fd.png" style="zoom:67%;"><h5 id="df-set-index-‘标签’"><a href="#df-set-index-‘标签’" class="headerlink" title="df.set_index(‘标签’)"></a>df.set_index(‘标签’)</h5><p>pandas读取CSV文件后，会<strong>自动在第一列设置索引</strong>，如果我们不想使用1，2，3之类的索引，而<strong>使用其它的关键字作索引</strong>，我们可以用set_index(‘标签名’)来设置索引，如下便设置city标签为索引：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/1bb2a309ed0112e8b9ad0aae09a3e427.png" style="zoom:67%;"><p>上述设置了city索引后，如果我们想查询某个城市的一些信息，我们可以如下操作：使用df[‘bed’]只显示bed标签的数据，在使用bed[‘Adjuntas’]是找到Adjuntas索引的bed信息。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/3daa37ea198b63a358bb983aa995e234.png" style="zoom:67%;"><h5 id="df-‘标签’-‘索引’"><a href="#df-‘标签’-‘索引’" class="headerlink" title="df[‘标签’] [‘索引’]"></a>df[‘标签’] [‘索引’]</h5><p><strong>查询某些标签的具体索引</strong>。如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/fb0fc88fdd685b04734bc94534ba8771.png" style="zoom:67%;"><p>Pandas中还有两个特别的函数用来帮忙查询数据：</p><p>df.iloc()与df.loc()两种方法效果类似，工作原理都是<strong>根据行与列交叉定位数据</strong>，换言之和<strong>定位二维坐标轴中的点一样，由（x, y）组成</strong>。</p><p>不同之处无非在于列的表示方法，iloc()只能使用列的索引位置，而loc可以使用列的标签名。loc在使用起来更个性化</p><h5 id="df-iloc"><a href="#df-iloc" class="headerlink" title="df.iloc[]"></a>df.iloc[]</h5><p><strong>用索引位置找数据</strong></p><p><strong>df.iloc[x,y]</strong> 表示<strong>定位x行 y列的数据，而X与Y不一定是一个数，它也可以是一个范围</strong>，如</p><ul><li>df.iloc[0:5,0:5]表示前五行前五列的数据<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/44bce7ecd873eae449e5c7a92fb2e3a2.png" style="zoom:50%;"></li><li>df.iloc[0:5]：括号里只有一个范围则默认显示指定行+所有列的数据（对比上面df.iloc[0:5,0:5]）    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/6e0ea945bbe46c6c07f3a09ca7ed7e85.png" style="zoom:50%;"></li><li>df.iloc[0]定位第一行的数据信息    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/d1b880878529061ec5da4b9f02e48df8.png" style="zoom:50%;"></li></ul><h5 id="df-loc"><a href="#df-loc" class="headerlink" title="df.loc[]"></a>df.loc[]</h5><p><strong>用索引标签找数据</strong></p><p><strong>df.loc[x,y]<strong>表示</strong>定位x行 列名为y的数据</strong>，<strong>其中x为行索引，y表示列标签名（一个或多个）</strong></p><ul><li>df.loc[0:5,[‘bed’,’bath’]]表示前五行标签为bed与bath的数据<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/c655859ab4ca625ff7e836b7b29189c1.png" style="zoom:50%;"></li><li>df.loc[0:5]默认显示前五行的全部数据信息    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/4e77f8b22198ebd5087dec08a033f2ef.png" style="zoom:50%;"></li><li>df.loc[0]表示第一行数据    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/159e724e45cd9bacfe4bbe8dd149cecf.png" style="zoom:50%;"></li><li>df.set_index(‘zip_code’)将行索引改为邮编，df.loc[‘605’]定位605邮编有哪些数据    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/2bcef19dedf5c07fb027d16ebd2162c3.png" style="zoom:50%;"></li><li>df[605,[‘bed’,’bath]]表示查找605邮编，标签为bed、bath的数据（和上述df.loc[0:5,[‘bed’,’bath’]]类似，只不过行索引换成了邮编号）    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/94b329426835107db9203082b69c400a.png" style="zoom:50%;"></li><li>df.loc[605,’bed’]=6表示找到该行列的数据，然后对它赋值     <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/258f838bf614e8cafee94061a29c2410.png" style="zoom:50%;"></li></ul><p>在Pandas中<strong>Bool类型同样也可以作为索引</strong>，可以<strong>根据=、&lt; 、 &gt;来筛选符合一定条件的数据</strong>，举个例子如下</p><ul><li><p>df[‘price’]&gt;1000000 : 筛选房价大于1000000美金的房屋邮编    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/7c576919650f6593e2bd6958385089a6.png" style="zoom:50%;"></p></li><li><p>df[df[‘price’]&gt;1000000].head(5)：展示前五条符合房价大于100万美金的房屋数据。 <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/a34c2645b950862063edcaadbf26e0b7.png" style="zoom:50%;"></p></li><li><p>df[df[‘city’]==’penuelas’].head(5)：展示前五条位于penuelas城市的房屋数据。  </p><p>​<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/eff668a46d70f006b4ebc5ba0423023c.png" style="zoom:50%;"></p></li><li><p>df.loc[df[‘city’] == ‘Penuelas’,’price’].mean()：计算位于Penuelas城市的房价平均值    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/34d2df1a5d0f520af37134ee6cefa23b.png" style="zoom:50%;"></p></li><li><p>(df[‘price’] &gt; 1000000).sum()：统计所有房价大于100万美金的房屋数量    <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/567b9270d47a5dc72d1db2652cf12f35.png" style="zoom:50%;"></p></li></ul><p>通过上述的一些例子，我们可以看到Pandas中的数据索引方式多种多样，非常灵活，在面对大样本数据时，也可以按照要求方便地定位数据。</p><h4 id="创建DataFrame"><a href="#创建DataFrame" class="headerlink" title="创建DataFrame"></a>创建DataFrame</h4><p>之前我们都是用读取文件的方式获得DataFrame结构数据，那该如何创建自己的DataFrame数据呢？</p><p>最简单的方式就是创建一个字典结构，其中Key表示列名，Value表示各个样本的实际值，然后通过pd.DataFrame()将字典转换为DataFrame结构。操作如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/908dd75d3dfb5b8bab8cdf4924771a0f.png" style="zoom:50%;"><p>使用Pandas做数据分析时，发现NoteBook显示行数较少，我们可以通过相关的函数对数据显示做设置，具体一些去Pandas官方文档查询即可。</p><h4 id="Series操作"><a href="#Series操作" class="headerlink" title="Series操作"></a>Series操作</h4><p>上面也讲到了Series结构的一些，和DataFrame区别就是Series相当于一维的。单独读取某列数据，那就是Series结构。</p><h5 id="创建Series"><a href="#创建Series" class="headerlink" title="创建Series"></a>创建Series</h5><p>pd.Series(data=值, index=索引)：将值列表与索引列表合并转换为Series结构，如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/6df8343a1beeb81ba9c0b000c3e53d57.png" style="zoom:50%;"><h5 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h5><p>Series的loc()与iloc()方法：和DataFrame类似。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/5534065374b18ec4ac5f560126356c24.png" style="zoom:50%;"><h5 id="修改实际值"><a href="#修改实际值" class="headerlink" title="修改实际值"></a>修改实际值</h5><p>修改操作可以直接对查找到的数据赋值：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/194067567ba4f3b0b9dacfff607a11d5.png" style="zoom:50%;"><p>也可以使用<strong>replace()函数修改</strong>：<strong>to_replace参数表示要修改的数据，value表示修改后的数据，inplace=True表示修改好后赋值，inplace=False表示只执行打印操作，不赋值</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/0a1286232099732b002c01383df731d4.png" style="zoom:50%;"><h5 id="修改索引"><a href="#修改索引" class="headerlink" title="修改索引"></a>修改索引</h5><p>可以直接给索引赋值：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/280981b4039a1f511340cbe17df70248.png" style="zoom:50%;"><p>实际情况中索引数量往往非常多，无法一一写出来，因而用<strong>rename()方法</strong>可以很好地替换索引：<strong>参数index={‘原始值’:’更新值’}，inplace=True表示修改好后赋值，inplace=False表示只执行打印操作，不赋值</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/b88366f51677b6f863619df20595d6d5.png" style="zoom:50%;"><h5 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h5><p>创建个新的Series，然后<strong>原有Series与新Series拼接</strong>，然后形成的Series就是增加后的所有数据。如下：用<strong>pandas.concat()进行拼接</strong>（如果拼接对象为DataFrame结构数据，还需要考虑参数ignore_index=True：忽略索引；sort=False：列的顺序维持原样， 不进行重新排序；axis=1：横向合并），s3[‘j’]=500直接增加实际值500的j。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/9a3015375d407157ff6a4ef95cf2a6c3.png" style="zoom: 67%;"><p>DataFrame拼接：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/e4149d61f0de33cc364e91dac75ef508.png" style="zoom:50%;"><p>Series拼接使用ignore_index=True后，原有的’A’,’b’,’d’,’h’,’k’被替换成了0~4的索引。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/1f86ded56d50ad06688fdb6a866cd158.png" style="zoom: 67%;"><h5 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h5><ul><li><strong>del 变量名[索引]</strong></li><li><strong>变量名.drop([索引], inplace=True)</strong></li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/04/f7d4152f3574a8566cc01bd703dc4083.png" style="zoom:67%;"><p>也可以删除整列，方法相同。</p><h3 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h3><p>DataFrame也可以和Numpy一样对数据进行计算，如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/f72046e03b0385dd7bce97075dbef9a0.png" style="zoom: 50%;"><h4 id="统计分析"><a href="#统计分析" class="headerlink" title="统计分析"></a>统计分析</h4><p>在对数据进行分析时，样本数据的各种属性是常常分析的对象，数据特征的分析指标比较多，例如均值，最大值，最小值等均可以直接调用其属性获得。</p><h5 id="df-sum"><a href="#df-sum" class="headerlink" title="df.sum()"></a>df.sum()</h5><p>先创建一个简单的DataFrame，传入数据，指定行索引与列索引。可以对每一列与每一行进行求和计算，参数axis=0或1分别对应列或行，默认axis=0。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/fa010f9271c0ad3f106c4615e214f1ea.png" style="zoom:67%;"><h5 id="df-describe"><a href="#df-describe" class="headerlink" title="df.describe()"></a>df.describe()</h5><p>df.describe()方法可以详细展示样本数据的各类属性，</p><ul><li>count：个数</li><li>mean：均值</li><li>std：标准差</li><li>min、max：最小值、最大值</li><li>25%、50%、75%：分别为较小四分位数、中位数、较大四分位数，所谓四分位数（Quartile），是指在统计学中把所有数值由小到大排列并分成四等份，处于三个分割点位置的数值。</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/206816b4ecb15f89fd8f908fe3d8c000.png" style="zoom:67%;"><p>使用describe方法可以很好地观察数据是否存在问题，如年龄、房价等特征是否存在负数值，数据是否存在缺失值。</p><h5 id="df-cov"><a href="#df-cov" class="headerlink" title="df.cov()"></a>df.cov()</h5><p><strong>协方差矩阵</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/246d9da7aead47483aab736f39eba0f4.png" style="zoom:50%;"><h5 id="df-corr"><a href="#df-corr" class="headerlink" title="df.corr()"></a>df.corr()</h5><p><strong>相关系数</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/6357a4bf93915ee08b8fb513229792b0.png" style="zoom:50%;"><h5 id="df-value-counts"><a href="#df-value-counts" class="headerlink" title="df.value_counts()"></a>df.value_counts()</h5><p>对样本数据的实际值进行分组计数，参数ascending=True表示指定顺序，从小到大；对于组数特别多的数值型数据，参数bins=10表示将数据分为10组。</p><p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/114f45ba65a27db6787dc8f43e30367e.png" style="zoom: 50%;"> <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/f7483f88f504cf88a39e422ec449071c.png" style="zoom: 50%;"><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/186fc88f3c90cc59a3a107bfa4d30cb3.png" style="zoom: 50%;"></p><h5 id="pd-cut"><a href="#pd-cut" class="headerlink" title="pd.cut()"></a>pd.cut()</h5><p>对连续型的数值进行分箱操作，常用于对所有数值进行分档或分类操作。</p><p>形式pd.cut( x, bins, right=True, labels=None, retbins=False, precision=3, include_lowest=False, duplicates=’raise’ )：</p><ul><li><strong>x：一维数组</strong></li><li><strong>bins：整数，标量序列或者间隔索引，是进行分组的依据</strong></li><li>right：布尔值，默认为True，表示包含最右侧的数值（左开右闭）</li><li><strong>labels：数组或布尔值，指定分箱的标签</strong></li><li>retbins： 是否显示分箱的分界值。默认为False，当bins取整数时可以设置retbins=True以显示分界值，得到划分后的区间</li><li>precision：整数，默认3，存储和显示分箱标签的精度。</li><li>include_lowest：布尔值，表示区间的左边是开还是闭，默认为false，也就是不包含区间左边。</li><li>duplicates：如果分箱临界值不唯一，则引发ValueError或丢弃非唯一</li></ul><p>具体示例如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/2e485dd849a1b1be1a7f7b609ee4550c.png" style="zoom:67%;"><p>在机器学习中将连续型数据离散化是一种常用的套路。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/05/da9a593c9d062c5e4fe4e4c4604a74fb.png" style="zoom:67%;"><h4 id="pivot数据透视表"><a href="#pivot数据透视表" class="headerlink" title="pivot数据透视表"></a>pivot数据透视表</h4><h5 id="pd-pivot-df-index-columns-values"><a href="#pd-pivot-df-index-columns-values" class="headerlink" title="pd.pivot(df,index,columns,values)"></a>pd.pivot(df,index,columns,values)</h5><p>类似于excel的数据透视表，返回DataFrame按指定行(index)和列(column)重构的数据透视表，返回的数据透视表也是一个DataFrame。</p><ul><li>参数df：DataFrame数据</li><li>参数index：行索引标签，可以为单个标签，也可以多个标签组成的列表。</li><li>参数columns：列索引标签，可以为单个标签，也可以多个标签组成的列表。</li><li>参数values：对应实际值</li></ul><p>创建如下DataFrame数据，包括种类、月份、数量三个特征，每个特征都有12个实际值。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/2a48ebdb8432190c53662a2528b09e03.png" style="zoom: 50%;"><p>使用df.pivot()实现数据的重构，以Category为行索引，以Month为列索引，以Amount为实际值，建立了一个新的DataFrame。因此可以看出pivot作用：原本杂乱的数据按照规则做重新整理。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/c265f9ae20900ba3d7ff77ca251b502f.png" style="zoom:50%;"><p>形成的透视表就是DataFrame，同样可以进行运算操作等</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/1c6b2a3d3d29efab06f68ae69efbae71.png" style="zoom:50%;"><ul><li><strong>注意！当行索引和列索引相同时，实际值只能有一个</strong></li></ul><p>官方文档给出例子：<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/0b70d4394930d993fcd3049b02c2f2dd.png" style="zoom:50%;"></p><p>图中行索引为’one’，列索引为’A’的数据有两条，实际值分别为1、2，这种情况存在冲突，会报错：索引包含重复条目，无法重新整形。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/cfebc529aab381c9480c4da0160e1e67.png" style="zoom:50%;"><ul><li>此外，<strong>行索引与列索引不能同样</strong>，否则会报错：</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/3aa3d58bc5f74fa45c862a34b4852e24.png" style="zoom:50%;"><h4 id="groupby操作"><a href="#groupby操作" class="headerlink" title="groupby操作"></a>groupby操作</h4><p>groupby函数是统计分析中经常用到的函数，用法非常灵活，可以指定许多参数，也可以和DataFrame一样使用多种运算与分析操作，但是也非常容易出错，使用前一定先设想需要什么样的结果，然后再去选择合适的参数，否则在编写程序时容易杂乱混淆。</p><h5 id="df-groupby"><a href="#df-groupby" class="headerlink" title="df.groupby()"></a>df.groupby()</h5><p>下图是groupby的工作过程，将原本的DataFrame拆分，按照拟定规则分成不同组，最后形成多个DataFrame组成的DataFrameGroupBy类型，图片来自于<a class="link" href="https://zhuanlan.zhihu.com/p/101284491">Pandas教程 | 超好用的Groupby用法详解 - 知乎 (zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/49b28078fae8fba609586364165e7f33.png" style="zoom:67%;"><p>根据一定条件做分组操作，</p><ul><li>创建一个DataFrame：</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/74db79330b488dc09f8bcaebf5121600.png" style="zoom:50%;"><ul><li>为计算每一类别的数据有多少个，使用传统的循环分组，操作如下：</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/4747be2188a76c09850723861fc3e2a4.png" style="zoom:67%;"><ul><li>如果使用groupby操作，只需要一行代码，按照’key’进行分组如下：</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/558dd966cc15f070da10d5891bebcb7b.png" style="zoom:67%;"><ul><li>使用groupby对原有df分组后的数据类型不是单纯的DataFrame，而是多个子DataFrame组成在一起的类型，如下：</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/0578e9b946e18d8584a62ac234e86006.png" style="zoom: 67%;"><p>直接打印分组后的数据，会返回一个DataFrameGroupBy类型，后面0x00表示该对象是可迭代的，如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/737ae1fe50c1301e4945dd57bf9d9368.png" style="zoom:50%;"><h5 id="查看分组数据"><a href="#查看分组数据" class="headerlink" title="查看分组数据"></a>查看分组数据</h5><h6 id="groups"><a href="#groups" class="headerlink" title="groups"></a>groups</h6><p>使用groupby().groups可以<strong>查看分组结果</strong>，如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/e77852c0331318e044bf641970d2ebb2.png" style="zoom:67%;"><h6 id="get-group"><a href="#get-group" class="headerlink" title="get_group()"></a>get_group()</h6><p>使用get_group()可以对分组后的数据<strong>指定读取某一组的数据</strong>，如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/e7eb1a2354bfe14904de05c8676381d2.png" style="zoom: 67%;"><h6 id="遍历分组数据"><a href="#遍历分组数据" class="headerlink" title="遍历分组数据"></a>遍历分组数据</h6><p>for循环遍历，操作如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/f7969c1c967aa7972484cf0672956b47.png" style="zoom:50%;"><h5 id="groupby-agg"><a href="#groupby-agg" class="headerlink" title="groupby().agg()"></a>groupby().agg()</h5><p>通过 aggregate()或agg() 函数可以对分组对象应用一个或多个聚合函数，多个聚合函数表示类似<code>agg([np.size,np.mean,np.std])</code>如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/2597d78df4f117f17c602bfec859cc73.png" style="zoom:50%;"><h5 id="groupby-transform-‘-‘"><a href="#groupby-transform-‘-‘" class="headerlink" title="groupby().transform(‘ ‘)"></a>groupby().transform(‘ ‘)</h5><p>transform方法会按照原本，<strong>详细使用方法请见：<a class="link" href="https://www.jianshu.com/p/509d7b97088c">新手向——理解Pandas的Transform - 简书 (jianshu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/06/3f703429b3d1eb1e678dac771c5d1f92.png" style="zoom:67%;"><h5 id="groupby-filter"><a href="#groupby-filter" class="headerlink" title="groupby.filter()"></a>groupby.filter()</h5><p>通过 filter() 函数可以实现数据的筛选，该函数根据定义的条件过滤数据并返回一个新的数据集。</p><h5 id="groupby-apply"><a href="#groupby-apply" class="headerlink" title="groupby.apply()"></a>groupby.apply()</h5><h3 id="常用函数操作"><a href="#常用函数操作" class="headerlink" title="常用函数操作"></a>常用函数操作</h3><h4 id="Merge函数"><a href="#Merge函数" class="headerlink" title="Merge函数"></a>Merge函数</h4><p>该函数常用于两个DataFrame数据进行左右合并。区别于concat()的纵向连接，Merge实现数据的横向连接。</p><p>形式 <strong>pandas.merge(left, right, on, left_index, right_index, how, suffixes, indicator) ：</strong></p><ul><li><p>left：用于合并的左侧DataFrame</p></li><li><p>right：用于合并的右侧DataFrame</p></li><li><p>on：设置主键字段，可以设置一个或多个</p></li><li><p>left_index, right_index：布尔类型，默认False，这两个参数要么全部False，要么全部True</p></li><li><p>how：连接方式，默认内连接（inner），其他连接方式：外连接（outer）、左连接（left）、右连接（right）。</p></li><li><p>suffixes：区分不同表中相同列来自哪个DataFrame，默认会设置后缀为<code>_x，_y</code></p></li><li><p>indicator：显示拼接后的表中哪些信息来自哪个表</p></li></ul><p>创建一个新的DataFrame，如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/b6091e93e14f57bcb9ad3eaa6d5efbba.png" style="zoom:50%;"><p>合并left与right两个表，左右合并，<strong>on</strong>设置主键为’key’</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/d35f5e431c16e19cab3018b934ab1a02.png" style="zoom:67%;"><p><strong>left_index/right_index</strong>显示相同列的左右索引，字段key分为left表的key_x与right表的key_y</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/3257bd75266da300e179cf1e7406a8a9.png" style="zoom:67%;"><p>设置<strong>参数suffixes</strong>，将key_x、key_y修改为key_left、key_right</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/e3fbd0ac4ffdddcb7053e07376a688d5.png" style="zoom:67%;"><p>新建一个DataFrame，变量名为new；原来的left表与right表合并成res表；然后将res与new合并，<strong>how默认是内连接</strong>。</p><p>4行与2行合并，最后只有K1与K2的行显示了，因为<strong>内连接只会显示同一主键下左右两表都有数值的行</strong>。K0与K3这两行数据没有’E’,’F’的数据，不完整。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/de51ed16ad10b4fb5eee1465f4fc1756.png" style="zoom:50%;"><p><strong>外连接</strong>：<strong>按照行和列显示两个表中的所有信息，而不存在的数据也会用NaN来填充</strong>。如K0，K3没有E列与F列的数据，K5没有A、B、C、D列的数据。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/09a9f5004b32047e9834def174480f8d.png" style="zoom:67%;"><p><strong>左连接</strong>：<strong>保留所有左表的信息，把右表中主键与左表一致的信息拼接进来，标签不能对齐的部分，用NAN进行填充</strong>，而左表没有的主键将不会显示，如字段K5只在new表中，不在res中。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/394e20b44d4d5f3d6670a3767bb7ec19.png" style="zoom:67%;"><p><strong>右连接</strong>：<strong>保留所有右表的信息，把左表中主键与左表一致的信息拼接进来，标签不能对齐的部分，用NAN进行填充</strong>，而右表没有的主键将不会显示，如字段K0，K3只在res表中，不在new中。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/63e5575e1ef61e84d18fe039bdbdddba.png" style="zoom:67%;"><p>通过外连接显示所有信息后，<strong>indicator参数用于设定显示拼接后的表中哪些信息来自于哪一个表格</strong>，其中<strong>both</strong>表示该行数据来自左右两个表，<strong>left_only</strong>表示该行数据只来自左表，<strong>right_only</strong>表示该行数据只来自右表。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/bea0adc8b8de456f5847997b64b45730.png" style="zoom:67%;"><h4 id="排序操作"><a href="#排序操作" class="headerlink" title="排序操作"></a>排序操作</h4><p>创建一个新的DataFrame，字段为group与data</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/e867b0afdd21e2cfd244bdc0a4004b54.png" style="zoom:67%;"><h5 id="df-sort-values-by-ascending"><a href="#df-sort-values-by-ascending" class="headerlink" title="df.sort_values(by, ascending)"></a>df.sort_values(by, ascending)</h5><p><strong>能够实现指定列数据的升降序排序</strong>，</p><ul><li><p>参数<strong>by</strong>：<strong>指定排序的字段，可以为一个或多个字段。</strong></p></li><li><p>参数<strong>ascending</strong>：<strong>布尔类型，默认为True，按升序排列；False代表按降序排列。</strong></p></li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/3db77fc6348c8b7b83cf700c1cc5657c.png" style="zoom: 50%;"><p><strong>多字段时，哪个字段在前就先排列哪个，然后相同数据会成一组，按规则排序，同时每一组中的数据也按规则排序</strong>，ascending位置与by的位置一一对应，区分以下两种情况：</p><p>（1）group按照升序排，data按照降序排；先排列group，如果有相同数据再排列data</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/9d52c30e87572a5643034477b716df04.png" style="zoom: 50%;"><p>（1）data按照升序排，group按照降序排；先排列data，如果有相同数据再排列group</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/e663861ac17530dd78d1286be37a6595.png" style="zoom:50%;"><h4 id="重复值处理"><a href="#重复值处理" class="headerlink" title="重复值处理"></a>重复值处理</h4><h5 id="df-drop-duplicates"><a href="#df-drop-duplicates" class="headerlink" title="df.drop_duplicates()"></a>df.drop_duplicates()</h5><p>去重函数df.drop_duplicates(subset=[‘A’,’B’,’C’],keep,inplace)</p><ul><li>参数subset：<strong>要去重的列名，默认为 None</strong>。</li><li>参数keep：有三个可选参数，分别是 <strong>first、last、False，默认为 first</strong>，表示只保留第一次出现的重复项，删除其余重复项，last 表示只保留最后一次出现的重复项，False 则表示删除所有重复项。</li><li>参数inplace：<strong>布尔值参数，默认为 False</strong> 表示删除重复项后返回一个副本，若为 Ture 则表示直接在原数据上删除重复项。</li></ul><p>创建新的DataFrame：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/0de4052eb1a0a3ce8ec38a86dae5ca61.png" style="zoom:50%;"><p>不设置参数，表示直接将大部分完全重复的行删除，只保留第一个重复项（默认）：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/30a69fcccf181a0ae0e48b49b4caafcc.png" style="zoom:50%;"><p>设置subset为k1，表示只对k1列去重，不会处理k2的重复项，如k1中只有one、two两个值，结果就只保留两个。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/5ff53fe92da308c49260a86cc4a166c5.png" style="zoom:50%;"><p>keep设置为False，表示将完全删除重复项，不会保留。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/939547d6dc75df67a3bb356211325424.png" style="zoom:50%;"><h4 id="缺失值处理"><a href="#缺失值处理" class="headerlink" title="缺失值处理"></a>缺失值处理</h4><h5 id="增加列"><a href="#增加列" class="headerlink" title="增加列"></a>增加列</h5><h6 id="df-assign"><a href="#df-assign" class="headerlink" title="df.assign()"></a>df.assign()</h6><p><strong>用于往数据中添加新的列</strong>，</p><p>如下，创建一个新的DataFrame，使用assign函数往df中添加新的列ration：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/0595760c53549ee00523e76cb9d87860.png" style="zoom: 50%;"><h6 id="df-insert"><a href="#df-insert" class="headerlink" title="df.insert()"></a>df.insert()</h6><h6 id="df-‘新列名’-x3D-值"><a href="#df-‘新列名’-x3D-值" class="headerlink" title="df[‘新列名’]=值"></a>df[‘新列名’]=值</h6><h6 id="df-reindex"><a href="#df-reindex" class="headerlink" title="df.reindex()"></a>df.reindex()</h6><h6 id="df-merge"><a href="#df-merge" class="headerlink" title="df.merge()"></a>df.merge()</h6><h6 id="df-concat"><a href="#df-concat" class="headerlink" title="df.concat()"></a>df.concat()</h6><h6 id="df-loc-新列名-x3D-值"><a href="#df-loc-新列名-x3D-值" class="headerlink" title="df.loc(:, 新列名) = 值"></a>df.loc(:, 新列名) = 值</h6><h5 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a>缺失值</h5><p>创建一个包含缺失值的DataFrame，使用<strong>numpy.nan可以生成NaN缺失值</strong>。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/298783f2d3f94aee05f9918c7d457e08.png" style="zoom:50%;"><h6 id="df-isnull"><a href="#df-isnull" class="headerlink" title="df.isnull()"></a>df.isnull()</h6><p>会<strong>直接对表格进行判断</strong>，缺失值用False表示，有数值就用True表示。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/fc9b7614525bb38129c514164da79695.png" style="zoom: 50%;"><p><strong>any()函数：检查行或列中是否存在缺失值</strong>，只要有一个缺失值，行或列就会表现为True，如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/77fed7c32a2083ed883a6db7972bd270.png" style="zoom:50%;"><h6 id="df-fillna-填充值"><a href="#df-fillna-填充值" class="headerlink" title="df.fillna(填充值)"></a>df.fillna(填充值)</h6><p><strong>对缺失值进行填充</strong>，实际问题中填充值更常使用的是<strong>均值、中位数等指标</strong>，还需要根据具体问题具体分析，如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/d38692213bf3df317a626f369b2fe4e9.png" style="zoom:50%;"><h4 id="apply自定义函数"><a href="#apply自定义函数" class="headerlink" title="apply自定义函数"></a>apply自定义函数</h4><p>将DataFrame或Series数据作为实参传入函数中。</p><p>DataFrame.apply(func, axis=0, raw=False, result_type=None, args=(), **kwargs)，返回类型为Series或DataFrame，</p><ul><li>func：应用于每行每列的方法，可以是def自定义函数，也可以是lambda表达式。</li><li>axis：0表示将函数应用于每一列，1表示将函数应用于每一行</li><li>raw：布尔类型，默认False，将每一行或每一列作为Series传递给函数。</li><li>args：  元组类型，需要递给func的除array/series外的其他参数。</li><li>**kwargs：字典类型，传递给func的其他关键字参数，如果args只传递了部分参数，那kwargs可以再递补剩余的。</li></ul><p>新建一个DataFrame:</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/a8d7d678683108db62f9bab1c58cc9a0.png" style="zoom: 50%;"><p>使用apply函数增加新的一列food_map，具体方法为自定义映射函数food_map，使用判断条件语句，将food标签做了分组：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/07/ec7657b074696104838f7f731a04bb9e.png" style="zoom:67%;"><h4 id="时间操作"><a href="#时间操作" class="headerlink" title="时间操作"></a>时间操作</h4><h5 id="pd-Timestamp"><a href="#pd-Timestamp" class="headerlink" title="pd.Timestamp()"></a>pd.Timestamp()</h5><p>在机器学习建模时，偶尔会遇到时间特征，当拿到一份时间特征时，最好还是将其转换为标准格式，这样提取时更加方便一点。</p><p>如下是将字符串时间转换为datetime类型，Timestamp.month/year/day代表时间特征中的月/年/日：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/5df9147a0d4c402120a69a0fb5dfaeab.png" style="zoom: 67%;"><p>可以在原Datetime格式数据直接相加减Timestamp时间特征，效果如下：原日期+5天</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/ea67de87b3815d0ba583e485b0d63340.png" style="zoom: 67%;"><h5 id="pd-to-datetime"><a href="#pd-to-datetime" class="headerlink" title="pd.to_datetime()"></a>pd.to_datetime()</h5><p>用于将Series或DataFrame数据中时间对象转换为datetime64类型，方便后续时间处理。如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/d1ed448223ab0d99c2c54fb36d17b3d9.png" style="zoom:67%;"><p>df.dt.hour/minute/second/weekday：求时间特征的小时、分钟、秒数、周几：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/03ab5de912162b913fcca208e88b405a.png" style="zoom:67%;"><h5 id="pd-date-range"><a href="#pd-date-range" class="headerlink" title="pd.date_range()"></a>pd.date_range()</h5><p>pd.date_range(start, periods, freq)用于连续生成时间特征数据，参数start为时间格式，参数periods为生成时间特征数据格式，参数freq为相隔时间：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/5680c5e46ec3ed362fe213d0b5f33416.png" style="zoom:67%;"><h4 id="绘图操作"><a href="#绘图操作" class="headerlink" title="绘图操作"></a>绘图操作</h4><p>在Notebook中使用绘图操作需要先执行此命令<code>%matplotlib inline</code>，如下是绘制四条折线，random.randn(10,4)生成随机的十行四列的数组（十行：每条线十个点；四列有四条折线），</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/f7f3ce664d114a95eebd79952e028c45.png" style="zoom: 50%;"><h5 id="df-plot-axes-kind"><a href="#df-plot-axes-kind" class="headerlink" title="df.plot(axes, kind)"></a>df.plot(axes, kind)</h5><p>axes[0]为标签在x轴，axes[1]为标签在y轴，kind为图表类型，有“bar”、“barh”、“line”等</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/0804c53eba0c48a9f81d7a2d162c398d.png" style="zoom:67%;"><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/4d59bf8bc2e7f257c8dd0e2b5264bbd4.png" style="zoom:67%;"><p>创建DataFrame数据，绘制柱形图：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/75a00e9e5a52d7942a523bf051781216.png" style="zoom:67%;"><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/4259e74cbee307ea3f2d40fbbea082cc.png" style="zoom:67%;"><p>选取美国房地产数据集中特征绘制散点图：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/4abe3b3c18f8244a09330b5855298bb9.png" style="zoom:67%;"><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/12/07fbd89898ab6f98dac15d85da29c7c7.png" style="zoom:67%;"><h3 id="大数据处理技巧"><a href="#大数据处理技巧" class="headerlink" title="大数据处理技巧"></a>大数据处理技巧</h3><h4 id="数值类型转换"><a href="#数值类型转换" class="headerlink" title="数值类型转换"></a>数值类型转换</h4><blockquote><p>数据集文件：<a class="link" href="https://duojiyun.常子儒.xyz/document/realtor-data.csv">realtor-data.csv <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> Pandas </tag>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据挖掘学习记录（一）：科学计算库numpy</title>
      <link href="/2023/04/29/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E5%BA%93numpy/"/>
      <url>/2023/04/29/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E5%BA%93numpy/</url>
      
        <content type="html"><![CDATA[<h3 id="科学计算库Numpy"><a href="#科学计算库Numpy" class="headerlink" title="科学计算库Numpy"></a>科学计算库Numpy</h3><p>​在python数据科学领域，包括数据分析、数据可视化、机器学习等等方面，Numpy是用得最广泛的工具包之一，基本涉及到数据计算、转换、清洗等等任务都能看到他的影子。</p><p>​在机器学习、深度学习中，常常用到矩阵计算，而包含<strong>多个特征的数据往往都可以转换为矩阵</strong>：<strong>行是每一条样本数据，列就是其每个字段的特征</strong>。相较于传统的循环列表相乘，Numpy在矩阵计算上非常高效，可以节省大量运行时间，接下来学习Numpy的核心模块与常用函数用法</p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>​Anaconda往往都默认安装了Numpy，如果用的是pip,就<strong>pip install numpy</strong>安装一下，安装完后，导入到运行环境中，为了方便，不要忘了<strong>给numpy起一个别名</strong> <code>import numpy as np</code></p><h4 id="array数组"><a href="#array数组" class="headerlink" title="array数组"></a>array数组</h4><p>​我们知道Python中有四种基本数据类型，如列表List、元组Tuple、集合Set和字典Dictionary，而numpy也有自己独特的数据类型，为<strong>ndarray(多维数组)<strong>，是Python进行科学计算时</strong>基本的数据类型</strong></p><p>​如何创建？</p><p>​如下图，先导入numpy库，方法**np.array(参数)**用来创建array数组，其中参数为一维列表或多维列表。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/adbcb1479000adfbed87b3c3d1395d56.png" style="zoom: 80%;"><p>​数组间可以直接<strong>相加，相减，相乘，相除</strong>：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/21dec898f32a3ce3c277c4cd87c9a8bf.png" style="zoom: 67%;"><p>​但是注意，<strong>运算的两个数组应该保持相同元素数</strong>，如下图，3个元素与五个元素相加出现错误，乘除如此：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/e199ef63e818ba4d3882aa4ff11032df.png" style="zoom: 67%;"><p>​使用ndarray数组时，数组中的所有元素必须是同一类型的，如果不是同一类型，数组元素会自动地向下进行转换，int–float–str，示例如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/cb4b77a2a2bd81f58b5333e756121474.png" style="zoom: 80%;"><h4 id="属性操作"><a href="#属性操作" class="headerlink" title="属性操作"></a>属性操作</h4><h5 id="type方法"><a href="#type方法" class="headerlink" title="type方法"></a>type方法</h5><p>用**type()**可以看到array类型为ndarray数据类型。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/adbcb1479000adfbed87b3c3d1395d56.png" style="zoom: 80%;"><h5 id="dtype方法"><a href="#dtype方法" class="headerlink" title="dtype方法"></a>dtype方法</h5><p><strong>array.dtype</strong> 打印当前数据格式，查询当前数据元素的类型</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/44ddead8a4ddbe3dbb16a5ccdc3b6b3c.png" style="zoom:80%;"><h5 id="shape方法"><a href="#shape方法" class="headerlink" title="shape方法"></a>shape方法</h5><p><strong>array.shape</strong>表示数组的维数，如下图：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/8b97ab955c5a5f3b4130fe42d5ef6624.png" style="zoom:80%;"><p>array4数组是一个三维数组</p><ul><li>**shape[0]**表示第一维，shape[0]=2表示元素有两个</li><li>**shape[1]**表示第二维，shape[1]=4表示元素有四个</li><li>**shape[2]**表示第三维，shape[2]=1表示元素有1个</li></ul><p><strong>数字不断增大</strong>，维数由外到内。</p><h5 id="size方法"><a href="#size方法" class="headerlink" title="size方法"></a>size方法</h5><p><strong>array.size</strong> 打印当前数组中的元素个数</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/feb14c8ac8c846f0181d51d56648a01d.png" style="zoom:80%;"><h5 id="ndim方法"><a href="#ndim方法" class="headerlink" title="ndim方法"></a>ndim方法</h5><p><strong>array.ndim</strong> 打印当前数据维度</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/d490712bd445555fceaae57161e34a53.png" style="zoom:80%;"><h3 id="索引与切片"><a href="#索引与切片" class="headerlink" title="索引与切片"></a>索引与切片</h3><h4 id="数值索引"><a href="#数值索引" class="headerlink" title="数值索引"></a>数值索引</h4><p>对array([1,2,3,4,5])执行索引与切片操作</p><p><strong>[1:3]表示左闭右开</strong>，索引<strong>从0开始</strong>，即第一、二共两个元素</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/1ea76a815742c3c93e67259a7dcdcd2d.png" style="zoom:80%;"><p><strong>[-2:] 负数为从倒数开始读数据</strong>，表示从倒数第二个元素开始取，<strong>直到最后</strong>。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/fbb8c546e0a91a21063b9c68bd202fde.png" style="zoom: 80%;"><p>可以对索引位置<strong>进行赋值操作</strong></p><p>当数组是多维时，索引操作如下：</p><ul><li>取第二<strong>行</strong>数据</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/82a14e17bf3aa92e613df826d5c0a8fe.png" style="zoom: 67%;"><ul><li>取第二<strong>列</strong>数据</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/b7f27ddeca827125c63b9c893daf1e60.png" style="zoom:80%;"><h4 id="bool索引"><a href="#bool索引" class="headerlink" title="bool索引"></a>bool索引</h4><p>创建方法：np.array([1,0,1,···], dtype=bool)</p><p>常常搭配数组，用于放回对应True的元素，示例如下：</p><ul><li>先用<strong>np.arange(起始, 终末, 步长)<strong>创建一个0-100以10为间隔的数组[0,10,20,30,40,50,60,70,80,90]，然后创建bool数组，</strong>数组名[bool数组名]</strong> 获得True对应的数组！（注意：task_array与mask的<strong>元素数应该一致</strong>）</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/f384fee4046d03d5990a1906387ff987.png" style="zoom:67%;"><ul><li>可以<strong>判断数组中的每个元素是否满足要求</strong>，返回布尔类型。</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/c9418252a076b688bc0330fce09d31ac.png" style="zoom: 67%;"><ul><li>还可以将<strong>索引判断条件置于数组中</strong>，查找满足条件的具体元素值</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/38127cdcecef5c974310930c694afdaf.png" style="zoom: 80%;"><ul><li>可以用于<strong>对比两个数组</strong>，或者快速进行<strong>逻辑判断</strong>操作。</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/7460f7e2751f9bbed05357f97706015f.png" style="zoom: 67%;"><h3 id="数据类型与数值计算"><a href="#数据类型与数值计算" class="headerlink" title="数据类型与数值计算"></a>数据类型与数值计算</h3><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ul><li>为了满足不同需要，可以<strong>在创建数组时指定其数据类型</strong>：</li></ul><p><strong>float16：半精度；float32：单精度；float64：双精度</strong>。如果没有较高精度要求，半精度能够大幅节省计算成本与时间，对于深度学习大规模参数计算，能降低数据传输与存储成本，加快训练速度。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/00e51197c3dc62647edb87c61ee3bd94.png" style="zoom: 67%;"><ul><li><strong>数组数据类型转换</strong>，利用<strong>np.asarray(原始数组, dtype =目标类型)</strong> 即可得到目标数据类型数组，如下为int型转换为float32类型：</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/451d46895745323fddec3f26bc5750e5.png" style="zoom:67%;"><h4 id="复制与赋值"><a href="#复制与赋值" class="headerlink" title="复制与赋值"></a>复制与赋值</h4><ul><li>如果想<strong>将一个数组的元素赋给另一个数组</strong>，可以用如下方法：</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/f9babb4da58e4d3d5452ce2c40a6a9b3.png" style="zoom:67%;"><p>但是，可以看到，<strong>当ru_array2中的元素改变时，原有数组ru_array中元素也发生了改变</strong>，因而，这种赋值方法实际上不过是用两个名称<strong>表示了同一个数组</strong>罢了。</p><ul><li>如果想让新数组的元素与之前的数组元素<strong>没有关联</strong>，该怎么办呢？</li></ul><p>利用<strong>copy()方法</strong>，这样ru_array2与ru_array根本就是两回事了。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/3cfdd10ffa84065b635ec9b0afbc6dc2.png" style="zoom:67%;"><ul><li>在numpy中有许多数值计算的操作，下面是常用的一些：</li></ul><h5 id="np-sum-array"><a href="#np-sum-array" class="headerlink" title="np.sum(array)"></a>np.sum(array)</h5><p>求和，<strong>参数axis = 为0表示列，为1表示行</strong>。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/836dcfaae3efc7f17cbe8936a26a0e74.png" style="zoom:67%;"><h5 id="array-prod"><a href="#array-prod" class="headerlink" title="array.prod()"></a>array.prod()</h5><p>表示数组中各元素累乘，同时<strong>参数axis</strong>是针对列的乘积与各单位数组的乘积：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/18fde4d0b2c6d72f9dffc614867deb0b.png" style="zoom:67%;"><h5 id="array-min-、array-max-、array-mean"><a href="#array-min-、array-max-、array-mean" class="headerlink" title="array.min()、array.max()、array.mean()"></a>array.min()、array.max()、array.mean()</h5><p>分别为求数组中元素<strong>最小值、最大值以及平均值</strong>。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/2a6ef1bc367cfc5c8a55ad9c970398ca.png" style="zoom:67%;"><h5 id="array-std-、array-var"><a href="#array-std-、array-var" class="headerlink" title="array.std()、array.var()"></a>array.std()、array.var()</h5><p>分别表示求数组元素的<strong>标准差与方差</strong>。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/e01c409b5c921a24d956b2c8f2c1d516.png" style="zoom: 67%;"><h5 id="a-clip-a-min-a-max"><a href="#a-clip-a-min-a-max" class="headerlink" title="a.clip(a_min, a_max)"></a>a.clip(a_min, a_max)</h5><p>其中a是一个数组，后面两个参数分别表示<strong>最小和最大值</strong>，clip这个函数将将数组中的元素限制在a_min, a_max之间，<strong>大于a_max的就使得它等于 a_max，小于a_min的就使得它等于a_min</strong>。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/e425c1f1d07330df8a08786a62865e7c.png" style="zoom:67%;"><h5 id="array-round"><a href="#array-round" class="headerlink" title="array.round()"></a>array.round()</h5><p>表示对数组元素<strong>小数部分进行四舍五入</strong>，<strong>参数decimals</strong>为<strong>指定精度</strong>，示例中decimals=1表示精确到一位小数：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/3ea3d9750e303005f781a227741a7bbe.png" style="zoom:67%;"><h4 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h4><p>这里介绍两种计算方法，<strong>一种是按对应位置元素进行相乘（1）；另一种是在数组中进行矩阵乘法（2）</strong></p><h5 id="（1）np-multiply-方法"><a href="#（1）np-multiply-方法" class="headerlink" title="（1）np.multiply()方法"></a>（1）np.multiply()方法</h5><p>对元素各对应位置相乘，返回计算后的数组：<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/1af5e7d9d5ec6911de5c9402f3bbbd90.png" style="zoom: 67%;"></p><h5 id="（2）np-dot-方法"><a href="#（2）np-dot-方法" class="headerlink" title="（2）np.dot()方法"></a>（2）np.dot()方法</h5><p>为矩阵乘法，按照数学规则相乘：<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/feaebc7dde0802bb24f57d73e4f44e23.png" style="zoom:67%;"></p><p>关于numpy.dot的具体介绍请见numpy官网：<a class="link" href="https://numpy.org/doc/stable/reference/generated/numpy.dot.html">numpy.dot — NumPy v1.24 Manual <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><strong>矩阵计算</strong>在线性代数中讲过，在numpy中也有矩阵运算的方法，<strong>矩阵与多维数组类似</strong></p><p>如矩阵 <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/1b8dd9c7b453a9028333ea44923e0151.png" style="zoom:50%;">，如果用数组可以表示为**array[[1,2,3],[4,5,6],[7,8,9]]<strong>，</strong>每个括号的元素组成矩阵的行 <code>1 2 3/4 5 6/7 8 9</code>，每一行的相同索引位置组成矩阵的列<code>1 4 7/2 5 8/3 6 9</code>**，</p><p>上述（2）中所示为只有一行的矩阵相乘：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="12.57ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5556 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mtable" transform="translate(278,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mtd" transform="translate(1500,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mtd" transform="translate(3000,0)"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mtd" transform="translate(4500,0)"><g data-mml-node="mn"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(5278,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></svg></mjx-container> X <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="12.57ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5556 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mtable" transform="translate(278,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path></g></g><g data-mml-node="mtd" transform="translate(1500,0)"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path></g></g><g data-mml-node="mtd" transform="translate(3000,0)"><g data-mml-node="mn"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g></g><g data-mml-node="mtd" transform="translate(4500,0)"><g data-mml-node="mn"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(5278,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></g></svg></mjx-container>​，运算过程为1X5+2X6+3X7+4X8=20（参考<code>dot(a, b)[i,j,k,m] = sum(a[i,j,:] * b[k,:,m])</code>）</p><p>如果是多行矩阵相乘呢？</p><p>下面示例：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/5954be369b9042d59a3e3bb33467083f.png" style="zoom: 80%;"><p>二维数组x与y进行矩阵计算，x = <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/8d1b7c10951ddb4d84ed2016d6706392.png" style="zoom: 67%;">，y= <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/a390a11e8be543d41939d2016fd08fbd.png" style="zoom: 67%;">，矩阵计算过程为<img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/01/c56a577871298144695af971ba0337a9.jpg" style="zoom:15%;"></p><h3 id="常用功能模块"><a href="#常用功能模块" class="headerlink" title="常用功能模块"></a>常用功能模块</h3><h4 id="排序操作"><a href="#排序操作" class="headerlink" title="排序操作"></a>排序操作</h4><h5 id="np-sort"><a href="#np-sort" class="headerlink" title="np.sort()"></a>np.sort()</h5><p>将数组按照<strong>升序排序</strong>，<strong>参数axis = 0表示列排序；axis=1表示行排序</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/3dc02593d7f58da68594921a52cefe45.png" style="zoom:67%;"><h5 id="np-argsort-方法"><a href="#np-argsort-方法" class="headerlink" title="np.argsort()方法"></a>np.argsort()方法</h5><p>返回<strong>排序前元素的索引位置</strong>，如原来的1.3在排序前在索引1，排序后变为了索引0，argsort后返回的是索引1</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/deece11fbb4a95c53b6d306a141e668d.png" style="zoom:67%;"><h5 id="np-linspace-m-n-i"><a href="#np-linspace-m-n-i" class="headerlink" title="np.linspace(m, n, i)"></a>np.linspace(m, n, i)</h5><p>返回的是<strong>m到n的i个元素的数组</strong>，如下图，np.linspace(0,10,10)从0到10的十个数。</p><h5 id="np-searchsorted-数组1，数组2"><a href="#np-searchsorted-数组1，数组2" class="headerlink" title="np.searchsorted(数组1，数组2)"></a>np.searchsorted(数组1，数组2)</h5><p>返回的是<strong>数组2插入到数组1中的元素索引位置</strong>，如下图，2.5，6.5，9.5插入到ru_array中的索引位置分别为3，6，9。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/68341aec21d76539abfebd952732d005.png" style="zoom: 67%;"><h5 id="np-lexsort"><a href="#np-lexsort" class="headerlink" title="np.lexsort()"></a>np.lexsort()</h5><p>返回<strong>排序后的索引位置</strong>，具体示例如下</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/70ff0bc7a23cb993e346637985775289.png" style="zoom: 67%;"><h4 id="数组形状操作"><a href="#数组形状操作" class="headerlink" title="数组形状操作"></a>数组形状操作</h4><ul><li><strong>array.shape = XX,XX</strong> ，可以直接改变数组形状，如下将一维数组按照顺序转换为二维数组，但是转换前后的数组元素个数应当一致，如果shape设定的数值乘积超出或不足会提示ValueError报错。</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/e747af6ceaaea07c4e29f1c351d8359d.png" style="zoom:67%;"><ul><li><strong>np.newaxis</strong>可以给数组单纯地<strong>增加维度</strong>，如下array由一维数组转换为二维。</li></ul><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/d8fe0e313bdf986c8ce8ac7b36dd0b07.png" style="zoom:67%;"><h5 id="array-squeeze-："><a href="#array-squeeze-：" class="headerlink" title="array.squeeze()："></a>array.squeeze()：</h5><p>可以给array<strong>减少维度</strong>，如上面使用newaxis增加为二维数组后，使用squeeze使得array又转为一维数组。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/99c98ec6033c7114d482fe286284eaec.png" style="zoom:67%;"><h5 id="array-transpose"><a href="#array-transpose" class="headerlink" title="array.transpose()"></a>array.transpose()</h5><p>矩阵转置操作，如下矩阵 <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/97836538814ffe9f3a81b2e069c1f713.png" style="zoom: 67%;">转置为 <img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/688925af67fa8486a9cc790669bbd07e.png" style="zoom: 67%;">，<strong>array.T</strong>也可以完成转置操作，</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/b6276a8f350ee813bd69505c55994b66.png" style="zoom:67%;"><h4 id="数组拼接"><a href="#数组拼接" class="headerlink" title="数组拼接"></a>数组拼接</h4><h5 id="np-concatenate-a-b"><a href="#np-concatenate-a-b" class="headerlink" title="np.concatenate((a,b))"></a>np.concatenate((a,b))</h5><p>用于把数组a与数组b数据拼接在一起（a,b都是二维数组，拼接后也为二维数组），这里参数axis默认为<strong>0表示按列拼接</strong>，<strong>axis=1表示按行拼接</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/3f31c262aa5d29896f03dedbf80d7cfe.png" style="zoom:67%;"><h5 id="np-stack-d-e"><a href="#np-stack-d-e" class="headerlink" title="np.stack((d,e))"></a>np.stack((d,e))</h5><p>是另一种拼接方法，原始数据是一维的，拼接后是二维，类似还有<strong>hstack与vstack操作</strong>，分别表示<strong>水平与竖直</strong>的拼接方式。在<strong>数据维度为1</strong>时，它们的作用<strong>相当于stack</strong>，用于<strong>创建新轴</strong>，而当<strong>维度大于或等于2</strong>时，他们的作用<strong>相当于concatenate</strong>，用于<strong>在已有轴上进行操作</strong>。示例如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/fa720971323958c9b4313daaf95f3c58.png" style="zoom:67%;"><h5 id="array-flatten"><a href="#array-flatten" class="headerlink" title="array.flatten()"></a>array.flatten()</h5><p>可以<strong>将多维数组拉平</strong>，转为一维数组。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/b2a7abe2c230085845fa5302fd9ef9aa.png" style="zoom:67%;"><h4 id="创建数组函数"><a href="#创建数组函数" class="headerlink" title="创建数组函数"></a>创建数组函数</h4><p>创建数组最直接的是np.array()，但是应用场景不同，需要创建的数组也不一样。</p><p>较常见的是np.arange(开始值，结束值，步长)，可以自己定义数组取值区间与间隔，此外还有其他一些方法创建数组：</p><h5 id="np-logspace-start-stop-num-base"><a href="#np-logspace-start-stop-num-base" class="headerlink" title="np.logspace(start,stop,num,base)"></a>np.logspace(start,stop,num,base)</h5><p>形式与arange类似，其中<strong>start为开始值，stop为结束值，num为个数，而base为底，base如果不强调，默认以10为底</strong>。如下图<strong>第一个程序表示从10的0次方到10的1次方取5个数</strong>，<strong>第二个程序表示从2的0次方到2的1次方取5个数</strong>。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/a0cc4f8d7601e8f21b7c5984e8280e43.png" style="zoom:67%;"><h5 id="np-r-起始：结束：间隔"><a href="#np-r-起始：结束：间隔" class="headerlink" title="np.r_[起始：结束：间隔]"></a>np.r_[起始：结束：间隔]</h5><p>快速创建行向量</p><h5 id="np-c-起始：结束：间隔"><a href="#np-c-起始：结束：间隔" class="headerlink" title="np.c_[起始：结束：间隔]"></a>np.c_[起始：结束：间隔]</h5><p>快速创建列向量</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/4738beed3d0304e1b93a79f2fcdd7e0a.png" style="zoom:67%;"><h5 id="np-zeros"><a href="#np-zeros" class="headerlink" title="np.zeros()"></a>np.zeros()</h5><p>创建零矩阵，（3）表示创建数组为一维，包含三个元素；（3,3）表示创建3X3的零矩阵</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/47ef5cb2a7b1e7abfbc3c89e20737331.png" style="zoom:67%;"><h5 id="np-ones"><a href="#np-ones" class="headerlink" title="np.ones()"></a>np.ones()</h5><p>表示创建单位矩阵，元素都为1，用法和zeros一样</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/398423eba14fad83fe156cb456afa6e6.png" style="zoom:67%;"><h5 id="np-empty"><a href="#np-empty" class="headerlink" title="np.empty()"></a>np.empty()</h5><p>表示创建空的矩阵，**array.fill(m)**表示用数值m进行填充。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/13a1b313efad983b7ff6815c642d0fe4.png" style="zoom:67%;"><h5 id="np-zeros-like"><a href="#np-zeros-like" class="headerlink" title="np.zeros_like()"></a>np.zeros_like()</h5><p>表示初始化一个零矩阵，让它和某个数组维度一致</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/561d78917205cb045316ae5086bdcbfd.png" style="zoom:67%;"><h5 id="np-identity-m"><a href="#np-identity-m" class="headerlink" title="np.identity(m)"></a>np.identity(m)</h5><p>表示创建一个m行m列的矩阵，只有对角线有数值，并且为1</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/c756f57929a606db15723de553df5860.png" style="zoom:67%;"><h4 id="随机模块random"><a href="#随机模块random" class="headerlink" title="随机模块random"></a>随机模块random</h4><p>初始化参数、切分数据集、随机采样等操作都会用到随机模块，对于深度学习参数设置有很好帮助。</p><h5 id="np-random-rand"><a href="#np-random-rand" class="headerlink" title="np.random.rand()"></a>np.random.rand()</h5><p>可以<strong>创建一个随机矩阵</strong>，如下图np.random.rand(3,2)创建了一个3行2列的随机数矩阵；如果括号中不填入参数，那么只会返回一个随机数。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/acd01375c967659ac1b51455c3c7f176.png" style="zoom:67%;"><h5 id="np-random-randint"><a href="#np-random-randint" class="headerlink" title="np.random.randint()"></a>np.random.randint()</h5><p><strong>返回随机整数的矩阵</strong>，如np.random.randint(10,size=(5,4))表示返回一个五行四列的数组，元素范围为【0，10）；如np.random.randint(0,10,3)也可以指定区间0-10与个数3</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/921be7e6c1bd224f77b908431a1f5385.png" style="zoom:67%;"><h5 id="np-random-normal"><a href="#np-random-normal" class="headerlink" title="np.random.normal()"></a>np.random.normal()</h5><p><strong>返回一组符合高斯分布的概率密度随机数</strong>，函数语法np.random.normal(loc,scale,size)：loc为概率分布的均值，scale为概率分布的标准差，size为随机数个数，</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/5c3a46347878efcc20801fc142cde0e4.png" style="zoom: 67%;"><h5 id="np-set-printoptions-precision"><a href="#np-set-printoptions-precision" class="headerlink" title="np.set_printoptions(precision)"></a>np.set_printoptions(precision)</h5><p>该方法<strong>用于全局设置</strong>，参数precision为控制结果输出的小数位数。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/96cc3e167ff74d4879ef27c40ca540ee.png" style="zoom:67%;"><h5 id="np-random-shuffle-array"><a href="#np-random-shuffle-array" class="headerlink" title="np.random.shuffle(array)"></a>np.random.shuffle(array)</h5><p><strong>用于对数组进行洗牌操作</strong>，有时候生成的数据集总是按照顺序排列，我们需要一种随机的顺序完成机器学习，因而可以借助该函数打乱顺序。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/a8ee906d2783ba4b41418b03ff905456.png" style="zoom:67%;"><h5 id="np-random-seed"><a href="#np-random-seed" class="headerlink" title="np.random.seed()"></a>np.random.seed()</h5><p><strong>随机种子函数</strong>，当我们希望对数据随机操作时，但又不想每次操作数据都变个样，所以可以使得每次随机结果都相同，如下图，设定的随机种子为100，当进行normal随机操作时返回的都是如下结果，随机种子数值可以随便设置。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/3a2c27091a31591c789cd1bebd705753.png" style="zoom: 67%;"><p>在某些情况下最好指定唯一的随机种子，避免由于随机差异对结果产生影响。</p><h4 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h4><p>如果用python进行数据读取，代码要比较麻烦繁琐，Numpy相对简单一点，此外后续的Pandas中也有关于数据读写的方法，都非常简单，这里我们先熟悉一下Numpy中的文件读写的基本操作。</p><p>首先创建一个文本文件，**%%writeflie &lt;文件名&gt;** 为Notebook的魔法指令，相当于写了一个文件</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/107a83a1deaff137c99461d835562fc2.png" style="zoom:67%;"><h5 id="np-loadtxt-或np-load"><a href="#np-loadtxt-或np-load" class="headerlink" title="np.loadtxt()或np.load()"></a>np.loadtxt()或np.load()</h5><p>传统的Python读取文件，操作如下：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/336cdbed748a8755c93f8482c67f30e9.png" style="zoom:67%;"><p>使用Numpy完成上述步骤：</p><p><strong>使用np.loadtxt(‘文件名’)方法</strong>，只需要一行就可以完成！</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/44e265fc95b8f2e43c7b66ce2c441d49.png" style="zoom:67%;"><p>如果文本带有分隔符，也可以读取：</p><p>如下文本文件中元素以“，”分隔，np.loadtxt()方法中的<strong>delimiter参数</strong>可以设置识别的分隔符。</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/b4c0c2124f27c510a845d78cd014714d.png" style="zoom:67%;"><p>等等loadtxt的功能请看API文档，这里不做过多介绍。</p><h5 id="np-savetxt"><a href="#np-savetxt" class="headerlink" title="np.savetxt()"></a>np.savetxt()</h5><p>可以在当前路径创建一个文件或者在原有文件中<strong>写入数据</strong>，可以指定<strong>保存格式参数fmt</strong>与<strong>分隔符参数delimiter</strong></p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/30a6b7150bd9f4eecd2552a0ac277eb1.png" style="zoom:67%;"><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/50df57b117c94bc61f95e24e1f5952a8.png" style="zoom:80%;"><p>在Numpy中还有一种“.npy”格式，可以通过<strong>np.save()把数据保存为ndarray的格式</strong>，这种方法可以把程序运行结果保存下来，需要时再通过<strong>np.load()读取.npy文件</strong>即可，非常便捷，如下是具体示例：</p><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/8f656896fa9b9751981062a97d1a9bf8.png" style="zoom:67%;"><img lazyload="" src="/images/loading.svg" data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/02/bd99b32af7f257a13d83b671d1c5a794.png" style="zoom:80%;"><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>学习过程并不需要记住所有函数，只需要熟悉其基本使用方法即可，在实际使用时遇到困难可随时翻阅文档查询用法，对于各种工具包要边学边用，边用边学。</p><blockquote><p><strong>上述展示的代码如有需要，<a class="link" href="https://duojiyun.常子儒.xyz/program/dl-note-numpy.ipynb">点此处下载dl-note-numpy.ipynb <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Numpy </tag>
            
            <tag> 基础知识 </tag>
            
            <tag> 科学计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习记录（二）：PyTorch使用技巧</title>
      <link href="/2023/04/27/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9APyTorch%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/04/27/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9APyTorch%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>​在安装完PyTorch深度学习框架后，需要在编辑器具体来进行编程，这里选择<strong>Pycharm或Jupyter Notebook</strong>。</p><p>​<strong>Jupyter Notebook即其他的Notebook IDE的操作方法可以看我这篇博客<a class="link"   href="https://常子儒.xyz/2023/04/03/%E7%BD%91%E9%A1%B5%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%BC%96%E7%A8%8BNoteBook%E5%90%88%E9%9B%86/" >网页交互式编程NoteBook合集 - 阿儒小站  <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，他们的使用方法都大同小异，特点都是交互式编程。但是如果你的解释器是新创建的虚拟环境，注意用<code>conda list</code>查看虚拟环境中是否有Jupyter一系列软件包。</strong></p><p>​在Pycharm中可以创建普通的py文件也可以创建notebook文件，方法如下图：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/cc0490f01d5c561fe5894c82fdb463fa.png"                      style="zoom: 50%;"                 ><p>​我自己也是分别创建了如下py与ipynb两个文件开始练习<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/4f36fcfb46bb0a7d29e586ad0ab62312.png"                      style="zoom: 50%;"                 ></p><p>​利用Pytorch进行编程之前记住两个常用的函数 <code>dir</code> 和 <code>help</code>，这也是Python中常用的法宝函数。</p><p>​下图是一个工具箱，类比于package（pytorch）：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/130bdbc4f529dd352172fba1f25a24b8.png"                      style="zoom: 50%;"                 ><ul><li><strong>dir</strong>：<strong>这个函数功能类似于打开工具箱，列举出torch工具箱中的各种工具</strong>。<strong>dir(torch)</strong> 输出的是工具箱的分区 1、2、3、4；</li></ul><p>而我们想找出某个分区的工具，需要继续，<strong>dir(torch.3)</strong> 输出的是工具箱第3分区的所有工具；如果我们还想得知具体工具a，我们需要继续寻找，<strong>dir(torch.3.a)</strong> 输出的是工具箱第3分区的工具a，至此便类比找到了软件包中的具体函数了。</p><p><strong>以torch.cuda.is_available()为例，具体查找示例如下图：</strong></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/33c9283c5dd71f9645e4fbe7de16ff69.png"                      style="zoom:50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/55000809dc80b32f1fe71128b7736fa3.png"                      style="zoom:50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/3fc22689c0d796881eb8569f19229aa7.png"                      style="zoom:50%;"                 ><ul><li><p><strong>help</strong>：<strong>这个函数功能是查询某某函数的功能及返回结果（类似于说明书）</strong>。如下是具体示例：</p><p>torch.cuda.is_available返回结果是bool类型，用于检验cuda是否正确实现</p></li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/00ae9267db29d820e6c67d53b4ceb8ea.png"                      style="zoom:50%;"                 >]]></content>
      
      
      <categories>
          
          <category> DeepLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> 使用技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习记录（一）：在conda环境下安装PyTorch（CUDA版）</title>
      <link href="/2023/04/24/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9C%A8conda%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85PyTorch%EF%BC%88CUDA%E7%89%88%EF%BC%89/"/>
      <url>/2023/04/24/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9C%A8conda%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85PyTorch%EF%BC%88CUDA%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="Pytorch是什么"><a href="#Pytorch是什么" class="headerlink" title="Pytorch是什么"></a>Pytorch是什么</h3><p>​PyTorch 是一种用于构建深度学习模型的功能完备框架，是一种通常用于图像识别和语言处理等应用程序的机器学习。使用 Python 编写，因此对于大多数机器学习开发者而言，学习和使用起来相对简单。PyTorch 的独特之处在于，它完全支持 GPU，并且使用反向模式自动微分技术，因此可以动态修改计算图形。这使其成为快速实验和原型设计的常用选择。</p><h3 id="为什么选择Pytorch"><a href="#为什么选择Pytorch" class="headerlink" title="为什么选择Pytorch"></a>为什么选择Pytorch</h3><ol><li><strong><a class="link"   href="http://pytorch.org/" >Pytorch <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 有一个充满活力的大型社区，具有优秀的文档和教程</strong>。论坛十分活跃，并能给予帮助和支持，官方支持好，更新及时。</li><li><strong>采用 Python 编写，并集成了热门的 Python 库</strong>，在安装pytorch时，常用的科学计算库会一并安装，例如用于科学计算的 NumPy、SciPy 和用于将 Python 编译为 C 以提高性能的 Cython。</li><li><strong>对于 Python 开发者来说，学习起来比较容易</strong>。Torch语言底层采用C语言，以Lua语言为接口，国内受众较小；而Pytorch是torch的python版本， PyTorch 的语法和用法均符合 Python</li><li><strong>受主要云平台的有力支持</strong>。大多云计算厂商的GPU设备都会有自带Pytorch框架选项，项目部署调试变得简单。</li><li><strong>支持 CPU、GPU、并行处理以及分布式训练。</strong>pytorch官方支持的计算平台有CPU平台和GPU支持的CUDA平台，这意味着计算工作可以在多个 CPU 和 GPU 核心之间分配，并且可以在多台机器上的多个 GPU 上进行训练。</li><li><strong>相较于Tensorflow，pytorch更加简单易懂</strong>，设计追求最少的封装，避免重复造轮子，PyTorch的源码只有TensorFlow的十分之一左右，更少的抽象、更直观的设计使得PyTorch的源码十分易于阅读</li><li><strong>运行速度与灵活性并存</strong>。在许多评测中，PyTorch 的速度表现胜过 TensorFlow和Keras 等框架，对于规模较小的项目，pytorch性能要优于tensorflow</li><li><strong>方便快捷的编程</strong>。能够用代码快速实现自己的想法，验证实验过程也较为简单</li></ol><h2 id="安装PyTorch"><a href="#安装PyTorch" class="headerlink" title="安装PyTorch"></a>安装PyTorch</h2><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><ul><li><strong>windows</strong></li><li><strong>conda</strong></li><li><strong>Nvidia driver</strong></li></ul><h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="安装Nvidia-driver驱动程序"><a href="#安装Nvidia-driver驱动程序" class="headerlink" title="安装Nvidia driver驱动程序"></a>安装Nvidia driver驱动程序</h4><p>​由于PyTorch(CUDA版)是基于英伟达显卡CUDA平台的深度学习框架，所以必须要保证电脑的GPU为英伟达Nvidia品牌，其次带有相关驱动程序，这样在使用Pytorch的时候才能利用CUDA并行计算。</p><p>​首先明确自己电脑的独立显卡是什么型号？通过：搜索——<code>设备管理器</code>——<code>显示适配器</code> 或者 <code>任务管理器</code>——<code>性能</code>——<code>GPU</code>，两种方法都可以看到，图上显示我的电脑是GTX 1050Ti显卡</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/26/574ea884dfe83d22811235adf7579d1b.png"                      style="zoom:50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/26/602bc30359d9f2b36ac7cb446de1a762.png"                      style="zoom:50%;"                 ><p>​然后，打开官网<a class="link"   href="https://www.nvidia.cn/geforce/drivers/" >NVIDIA GeForce 驱动程序 - N 卡驱动 | NVIDIA <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，找到自己型号的显卡驱动程序是哪个，如果嫌麻烦可以直接选择立即下载；如果想自己配置不同版本，就手动搜索。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/26/4b48aeccdfeea92c37f2801170ee22e5.png"                      style="zoom: 33%;"                 ><p>​看下自己电脑有没有Nvidia控制面板，如果没有就在微软商城下载 搜索Nvidia Control Panel，</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/415cc3aff9f5ad75e002abc42fb7eff1.png"                      style="zoom:50%;"                 ><p>​打开Nvidia控制面板，可以看设备CUDA版本，也可以命令行输入<strong>nvidia-smi</strong>查看。我电脑显卡驱动支持的CUDA版本为12.1</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/27/3e19f98f13b13e562629325a997c372d.png"                      style="zoom: 67%;"                 ><p>​注意，在后续安装PyTorch的时候会要求CUDA版本为多少多少之类的，所以尽可能地保持显卡驱动最新版本。</p><p>​例如你显卡驱动Driver显示CUDA版本号为12.1，而安装最新PyTorch的计算平台要求为11.8，这种情况是可以的，因为安装pytorch会自动安装CUDA与cuDNN，安装的11.8版本CUDA便能够被你电脑支持；</p><p>​但是如果你电脑只支持11.2，那么你就只能找计算平台要求11.2及以下的PyTorch框架安装了，因为11.8超过了你电脑显卡CUDA支持范围。</p><h4 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h4><p>​打开Anaconda官网（<a class="link"   href="https://www.anaconda.com/%EF%BC%89%EF%BC%8C%E6%89%BE%E5%88%B0%E8%8E%B7%E5%BE%97%E9%A2%9D%E5%A4%96%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%E3%80%82" >https://www.anaconda.com/），找到获得额外的安装包。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/1edad3b40c62680f49c858e1348bf68d.png"                      style="zoom: 50%;"                 ><p>​根据自己电脑的操作系统选择，博主电脑是win，所以本文以windows为主。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/75cc285a051d565ec6168a0e5da3d421.png"                      style="zoom: 50%;"                 ><p>​下载完成后，打开安装包，进行安装，点击我同意</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/0bf82a9c101d08303fa4263442459edf.png"                      style="zoom:80%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/a511eb7f575eefced4e472e44972940e.png"                      style="zoom:67%;"                 ><p>​默认推荐，点击下一步</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/1ae213be7c2804f9f46790ea3a1886b3.png"                      style="zoom: 67%;"                 ><p>​<strong>修改默认安装路径，尽量不要在C盘安装</strong>，由于我之前已经安装在D盘了，这次我选择E盘新建Anaconda文件夹；同时<strong>注意磁盘空间，不要过小</strong>，后续可能安装其他软件包可能还要占一部分空间！ 继续点下一步</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/853db84ae61711b96d33300eef673a90.png"                      style="zoom:67%;"                 ><p>​默认选择的是下述两项，第一项与第三项</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/31a0451dd6d7bb86b92cb82a2d23d6a5.png"                      style="zoom:67%;"                 ><p>​第二项<code>Add Anaconda to my PATH　environment variable</code> 是指：<strong>选择是否将 Anaconda 添加到 PATH 环境变量</strong>。<strong>建议不要将 Anaconda 添加到 PATH 环境变量中</strong>，因为这会干扰其他软件。相反，通过从”开始”菜单打开 Anaconda Navigator 或 Anaconda 提示符来使用 Anaconda 软件。</p><p>​第四项 <code>Clear the package cache upon completion</code> 是指清除包缓存，为了恢复部分磁盘空间，这个可选可不选，默认不选。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/e030f41be632b4816685361fd2ccadca.png"                      style="zoom: 67%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/615ddf80857ac29a1629760ca7b3fb75.png"                      style="zoom:50%;"                 ><p>​由于我电脑已经安装了Anaconda，所以该过程我并没有实际安装，但是上述步骤都是一个样的。最后是下图的Finish.</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/1fcaff4e8d05726a2c3dfdc441c88f7b.png"                      style="zoom:50%;"                 ><p>​由于在安装Anaconda时没有添加环境变量，因此需要我们手动配置。</p><p>​可以使用windows+R，输入SYSDM.CPL打开系统属性，也可以右键我的电脑——找到高级系统设置，打开系统属性。</p><p>​下图，找到环境变量，进行设置。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/88afbb09fa5316783ad93b72886e2586.png"                      style="zoom: 67%;"                 ><p>​如下，对用户变量与系统变量进行编辑。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/fa84198ae64aa84984e2bd7f4da750a2.png"                      style="zoom: 50%;"                 ><p>​如果环境变量中下述属性已存在就可以不用再新建了。</p><p>​用户变量：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/96f676ca1cd8615df02eaecfef7bcbdc.png"                      style="zoom: 67%;"                 ><p>​系统变量：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/e86f246b545af1eda3d1543f1bdd8412.png"                      style="zoom:67%;"                 ><p>​最后，我们打开命令行，验证anaconda是否安装成功，如果输入<code>conda</code>出现以下内容，则证明anaconda安装成功，且环境变量配置完毕</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/16a6570e9c5d797c8fb48b69f57bd0fc.png"                      style="zoom:50%;"                 ><p>通过<code>conda -V</code>可以查看conda版本号，如图可以看到，我的conda版本为22.9</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/5d96726aeadab677ff82935271df32a5.png"                      style="zoom: 67%;"                 ><h4 id="安装PyTorch-1"><a href="#安装PyTorch-1" class="headerlink" title="安装PyTorch"></a>安装PyTorch</h4><p>​安装命令需要去官网获取，打开<a class="link"   href="https://pytorch.org/" >Pytorch官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><a class="link"   href="https://pytorch.org/" >https://pytorch.org/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，找到如下内容：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/34d158f12cb2c552e1adb0548c02570b.png"                      style="zoom:50%;"                 ><p>​这是各版本安装命令汇总，每一项具体意思是</p><ul><li><strong>Pytorch Build：pytorch的安装版本，这个默认安装Stable（最多测试与支持），目前最稳定的是2.0.0</strong></li><li><strong>Your OS：你的操作系统</strong></li><li><strong>Package：包安装方式</strong>，给出了conda、pip、LibTorch、Source四种方式，<strong>一般选前两种conda或pip</strong>，官方推荐是使用anaconda做包管理(可以很方便的切换python版本)，并且我们之前已经配置了Anaconda，所以<strong>我们选用conda方式</strong></li><li><strong>language：默认python</strong></li><li><strong>Compute Platiform：计算平台</strong>，这里有CPU版本与CUDA版本，由于CUDA是NVIDIA 发明的一种并行计算平台和编程模型，能够大幅度提升模型训练速度，因而<strong>我们选择CUDA安装</strong>，同时需要注意根据自己电脑Nvidia显卡所支持的CUDA版本安装选择合适的，</li><li><strong>Run this Command：运行命令</strong>，用于命令行安装</li></ul><p>​下图便是根据我的实际情况选择好的配置（供参考）</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/05cd245932b40dc37b3b876f7f7e37c9.png"                      style="zoom: 67%;"                 ><p>​不要着急安装，<strong>我的建议是先建个新的虚拟环境来安装PyTorch框架</strong>，不要直接在conda中直接安装pytorch，不然卸载的时候比较麻烦。</p><blockquote><p><u>汇总虚拟环境管理命令</u></p><ol><li><strong>列出所有已有的虚拟环境</strong>：<code>conda env list</code>  或  <code>conda info -e</code></li><li><strong>创建一个新的虚拟环境：</strong> <code>conda create -n （虚拟环境名） python=（python的版本）</code></li><li><strong>激活虚拟环境</strong>：<code>conda activate  （虚拟环境名）</code></li><li><strong>退出虚拟环境：</strong>  <code>conda deactivate</code></li><li><strong>克隆一个虚拟环境：</strong>  <code>conda create -n （新虚拟环境名） --clone （旧虚拟环境名）</code></li><li><strong>删除虚拟环境</strong>：<code>conda remove –n （虚拟环境名） ––all</code></li></ol><p><u>汇总虚拟环境包管理 命令</u></p><ul><li><strong>🍼　查看已有的包：<code>conda list</code></strong></li><li><strong>☕ 安装虚拟环境的特定包：<code>conda install （包名）</code></strong></li><li><strong>🍸 安装指定版本的包：<code>conda install （包名）=（版本）</code></strong></li><li><strong>🍷 删除虚拟环境中特定包：<code>conda remove （包名）</code></strong></li><li><strong>🍹 更新虚拟环境特定包：<code>conda update （包名）</code></strong></li><li><strong>🥂 搜索虚拟环境中特定包：<code>conda search （包名）</code></strong></li></ul></blockquote><p>​打开命令行，依次输入一下命令</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda env list  #检查自己有哪些虚拟环境</span><br><span class="line">conda create -n dlenv python=3.9  #创建虚拟环境dlenv，指定python版本为3.9</span><br><span class="line">conda activate dlenv  #激活虚拟环境dlenv</span><br></pre></td></tr></table></figure></div><p>​进入到dlenv虚拟环境，准备安装pytorch。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/359d828d83b1905f869028d56fa6da66.png"                                       ><p>​输入命令：<code>conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</code> 开始安装！</p><p>​安装过程不要借助清华镜像等下载软件包，由于软件包来源是官网，官网位于国外，所以安装速度有点慢，可以挂国外VPN或者慢慢等等。安装的所有软件包总共大小约有3-4G。</p><p>​安装完毕之后，在命令行输入<code>conda list</code>查看安装情况，可以找到这几个，就说明安装成功，注意红色框指：pytorch类型版本为cuda版。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.常子儒.xyz/2023/04/24/9a139d8d5ff42023041f85b1a0c9ab24.png"                                     ></p><p>​打开编辑器，运行代码</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available())</span><br></pre></td></tr></table></figure></div><p>​若为True，则说明CUDA版本的PyTorch安装成功！<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/24/5a2292b1273c0ff04fbd12a67a447f72.png"                      style="zoom: 50%;"                 ></p><h4 id="pytorch安装问题"><a href="#pytorch安装问题" class="headerlink" title="pytorch安装问题"></a>pytorch安装问题</h4><p>​可能很多人在官网复制完命令，并在虚拟环境运行命令、安装完成后，执行<code>torch.cuda.is_available()</code>代码发现<strong>结果为False</strong>，这说明<strong>CUDA版本PyTorch安装失败</strong>。</p><p>​但是实际安装过程发现并未出错，运行流畅，检查<code>conda list</code>会发现安装的是<strong>CPU版本的PyTorch</strong>。</p><p>​<strong>我明明执行的是CUDA版的运行命令，但为什么会安装CPU版的呢？</strong></p><p>​<strong>实际上，官网给出的命令所下载的软件包来源于网址<a class="link"   href="https://download.pytorch.org/whl/torch_stable.html%EF%BC%8C" >https://download.pytorch.org/whl/torch_stable.html， <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 该网站中包含了所有各版本的PyTorch，如果你所安装CUDA版本的PyTorch未在该网站中，conda会自动安装为虚拟环境安装CPU版本的PyTorch</strong>，</p><p>举个例子：</p><p>如果<strong>你的Python版本为3.7</strong>（我当时第一次安装时虚拟环境的python版本）</p><p>你执行这条命令**<code>conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</code>**，到最后会发现安装的是CPU版本。</p><p>​看一下这个文件**<code>cpu/torch-2.0.0%2Bcpu-cp310-cp310-win_amd64.whl</code>**的名称，</p><ul><li><strong>cpu指的是 cpu版本的pytorch文件</strong></li><li><strong>torch -2.0.0 指的是软件包名称与版本</strong></li><li><strong>cp310指的是 支持的python版本为3.10</strong></li><li><strong>win指的是 操作系统windows环境</strong></li></ul><p>​根据如此规律，我们找到<code>conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</code> CUDA11.8版本对应的各类软件包。如下图：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.常子儒.xyz/2023/04/24/efb769d217013390300c357aa6aaa3c2.png"                                     ></p><p>​图中可以看出，<strong>CUDA11.8版本所支持的python版本为3.8、3.9、3.10、3.11，我第一次安装时python版本为3.7，由于网站中没有该环境的pytorch包，conda便自动安装了CPU版本的</strong>（小东西挺会自作主张的😅），后来卸载了虚拟环境，换了python3.9就没问题了。</p><p>​最后运行代码测试，结果为True</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available())</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> DeepLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 包管理 </tag>
            
            <tag> anaconda </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Picgo插件--上传图片至多吉云</title>
      <link href="/2023/04/21/Picgo%E6%8F%92%E4%BB%B6-%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3%E5%A4%9A%E5%90%89%E4%BA%91/"/>
      <url>/2023/04/21/Picgo%E6%8F%92%E4%BB%B6-%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3%E5%A4%9A%E5%90%89%E4%BA%91/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​由于博主之前用的阿里云作为图床，后来发现阿里云OSS存储费、流量流出费、还有CDN流出、回源乱七八糟的费用很杂。</p><p>​<strong>虽然OSS存储一年只需要9元</strong>，但OSS流量流出费为<strong>闲时0.25元&#x2F;GB，忙时0.5元&#x2F;GB</strong>，而且如果你想要使用CDN加速的话，实际费用大约就是OSS存储费+OSS流出费+CDN流出费+CDN会员费，如果到后面，博客访问量大了的话，费用叠加起来可能比较高。</p><p>​个人博客的话能省一分是一分(っ °Д °;)っ，况且<a class="link"   href="https://www.dogecloud.com/?iuid=6247" >多吉云 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>能白嫖，稳定性上也可以，为啥要付费呢😛</p><p>​好了正式说一下，如何用Picgo上传图片至<a class="link"   href="https://www.dogecloud.com/?iuid=6247" >多吉云 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>作图床。</p><h3 id="一、Picgo插件安装"><a href="#一、Picgo插件安装" class="headerlink" title="一、Picgo插件安装"></a>一、Picgo插件安装</h3><p>​<del>首先，下载、安装Picgo</del>😃 <img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/c3a377f0603e077466092c7e995e3f71.png"                      style="zoom: 10%;"                 ></p><p>​由于原装Picgo并不提供dogeCloud做图床，需要利用Picgo的第三方插件，叫<a class="link"   href="https://github.com/W4J1e/picgo-plugin-dogecloud" >picgo-plugin-dogecloud <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>​因而<code>打开软件</code>——<code>插件设置</code>——<code>搜索框搜索dogecloud</code>——点击<code>安装</code></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230421214044.png"                      style="zoom: 67%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/5e4f458c2298b6d5e5aed30e5d9ae0d9.png"                      style="zoom:67%;"                 ><p>​至此，插件便自动安装到Picgo了，是不是很简单？<strong>还没完，还需要配置多吉云的云存储</strong>。</p><h3 id="二、多吉云云存储设置"><a href="#二、多吉云云存储设置" class="headerlink" title="二、多吉云云存储设置"></a>二、多吉云云存储设置</h3><p>​1、下面是云存储的存储空间设置，如果之前创建过存储空间（<strong>注意，空间类型需要为标准型，基础型不行</strong>），可以直接跳到第三步，</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/097532ab674f02a5bd5269e335601166.png"                      style="zoom: 50%;"                 ><p>​2、<strong>一定要选标准型，因为它支持SDK与API等等，而用Picgo上传图片需要这个功能！！</strong>当然，标准型也不支持10G免费额度，多吉云云存储的话按量付费非常便宜。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/c277670c9361b0aef5fa6f926197105c.png"                      style="zoom: 67%;"                 ><p>​3、进入刚刚常见的云存储空间，选中 <code>SDK参数</code>——复制<code>s3Bucket</code>，一会我们配置项需要。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/49a38d10abfbf4dd8fd8d53acb226908.png"                      style="zoom:67%;"                 ><p>​4、记得绑定一个自定义域名做CDN加速域名，需要自己到域名商那做CNAME解析，主机记录为子域名，记录类型为CNAME，解析值为多吉云给出的，具体过程如下，我不细讲了。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/c920cdc4f0c5d668c54c23f5ffa67411.png"                      style="zoom:50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/5cb6e2e55e07f328421c2f69f8680f2e.png"                      style="zoom: 50%;"                 ><h3 id="三、Picgo配置项"><a href="#三、Picgo配置项" class="headerlink" title="三、Picgo配置项"></a>三、Picgo配置项</h3><p>​1、查看AK与SK两个密钥，如下：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/92732aa6aad3a817e0539b3806458fd2.png"                      style="zoom:50%;"                 ><p>​2、如下配置项按要求填写，点击设为默认图床后，便完成了多吉云图床制作。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/2cfd3d1a6b90a17f06d86e9d648f64f5.png"                      style="zoom: 67%;"                 ><p>​如果想图床转移，可以去控制台上传文件或文件夹<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/e517a54c1db9b695f21fde33672fba21.png"                      style="zoom: 25%;"                 ></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Picgo插件 </tag>
            
            <tag> DogeCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022—2023生活实录</title>
      <link href="/2023/04/16/2022-2023%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/04/16/2022-2023%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>​<strong>2022年对我来说可以说是不平凡的一年</strong></p><h2 id="实习"><a href="#实习" class="headerlink" title="实习"></a>实习</h2><p>​2022年上半年，我大三下学期，去青州北关初中进行了为期四个月的教育见习与实习。</p><p>​这次经历收获颇丰，感受也颇多，是我第一次走上讲台正式教课，虽说是实习，但实际教学任务还是挺繁重的，由于实习学校比较缺老师，所以刚来到校长就语重心长地和我们实习教师说“我知道你们每个人所学专业有语文、历史、化学什么的，但是咱学校很缺老师，你们来到这里，可能除了负责本学科教学以外，还会任教一些其他学科”😌，其实我早预料到的，果然我除信息技术外还教数学😂，负责的是七年级五班数学与整个八年级的信息技术。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/ba9688e0ce01f9d8ad1dfd4cf37f888e.png"                      alt="实习课表" style="zoom: 33%;"                 ><p>​实习期间我认为教数学占大头，基本大部分的时间都在数学备课，上课，课后批改作业等等，信息技术实际上学校要求不高，或者说没啥要求，八年级信息技术所教授的信息技术内容是WPS表格与Python基本的语法</p><p>青州好风光！</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/698a0cb444b9722ddd03b528d3ff76b0.png"                      style="zoom:50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/86282267b878b66ae821f9452c84ad49.jpg"                      style="zoom: 33%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/76cfe55ca8c910ec2831b203458c2158.jpg"                      style="zoom: 33%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/2e63be092cc7a3d66e637cc26b1674ee.jpg"                      style="zoom: 50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/971d370a15d0fd46ee8c69d9f19dbee0.jpg"                      style="zoom: 50%;"                 ><p>​<strong>2022年2月21开始实习</strong>，第一天听了几节课，然后第二天就开始教课了（；´д｀）ゞ</p><p>​除教课外，实习学校组织的一些活动也使日常的生活不是那么单调。</p><ul><li>组织的校外打扫垃圾的社会实践活动——我和7.5班主任、英语老师一块带领的初一五班😀（学生们打扫的还是很认真的）</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/b9209ce280cc7bc7939038d9fb3fd582.png"                      style="zoom: 33%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/63b4e2aae9f946c811aafd25670241e4.png"                      style="zoom:25%;"                 ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/7a9af076edead589dc6a495f8c15f65b.png"                      style="zoom: 33%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/bca794f1787591752a11f7ca6fe21bd3.png"                      style="zoom: 25%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/d52352b4aa8f33ae40eee763b7bc625e.png"                      style="zoom: 33%;"                 ></p><ul><li>和北关初中另一名信息技术老师一块参加的信息技术中考教学改进讨论活动（要求每个人都要对会上所展示两个公开课分别提出自己的意见，被迫营业😅）</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/f531c12e565094c934890745d4ed2aad.png"                      style="zoom: 33%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/2d01507eb39beb85acfbeaaf80540e0e.png"                      style="zoom: 50%;"                 ></p><ul><li>实习学校校长、级部主任请我们实习教师吃大餐😋</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/dd1ebff4b9ad1560cfffc529d9a2e28e.png"                      style="zoom: 50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/045c7fe0e30910448ef87b07ab34aad5.png"                      style="zoom:33%;"                 ></p><p>因为喝多了，吃完饭出来就醉了，回到宿舍倒头就睡了(ಥ _ ಥ)<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/c3155087c0c76a8c809393909034148f.png"                      style="zoom: 25%;"                 ></p><p>​<strong>直到2022年3月上旬</strong>，都是平凡的课堂授课，但是新冠疫情突发严重，山东其他地市都相继<strong>实行线上授课</strong>，<strong>或者实习教师提前结束实习</strong>。不久，青州市也发了受疫情原因全市教学工作<strong>转为线上</strong>的通知，其实对于这个通知还是挺高兴的，因为经过十几天的课堂授课，感觉日常教学有点枯燥<del>（教师职业倦怠）</del>，哈哈哈，其实就是单纯想体验下线上教学的感觉，而且确实方便不少。</p><p>​刚开始被线上教学设备与工具困扰，由于北关初中的教师们之前在2020年那会有过线上教学的经验，我也从他们那学到了不少，方法多种多样。</p><ul><li>用电脑直接播放课件，然后用鼠标画画写写的<strong>（教信息技术我用这种）</strong></li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/bd37b972d2726edb4607d8efa5f12d9e.png"                      style="zoom:25%;"                 ><ul><li>用教室的多媒体白板放课件，然后用手机直播讲台内容</li><li>还有用手机支架将手机架在桌子上，摄像头朝着桌面，下面放着课本或习题。（**教数学我用的就是这种方法(#_&lt;-)**）</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/8479afb505e8bbe6fdd2ddc244204bee.png"                      style="zoom: 25%;"                 ><p>​<strong>线上教学其实存在不少问题</strong>，由于教师一端，学生一端，两者联系较少，导致部分学生不能专心参与到课堂学习中，或者手机在线，人不知道去哪玩了，这时候课堂提问与点名能很好的调动学生积极性（这种方法肯定会有部分同学借着设备原因躲避提问😥），所以其他老师又用了加分制，由教师主动转学生主动，回归学生主体，不过线上教学，始终解决不了的互动的限制和氛围感（由部分热爱学习的同学营造起来的积极学习氛围），学生个人在家学习如果没有很好的参与感就会注意力慢慢转移，心思便不再这节课上了。</p><p>​线上教学的日子里生活上确实比之前闲暇了一些，由于疫情学校不能很好的解决在校教师的饮食问题（学校没有食堂，没宿舍，学生通校），有个小配餐处（疫情原因关了），这样我们实习教师也就只能自己解决饮食问题了，刚开始线上几天，便买了个电煮锅，平日买点速冻食品热一热，煮一煮，偶尔买点食材做做饭，感觉好不惬意😘，下面是同事帮忙拍的照。</p><p>煎蛋🍳  (〃￣︶￣)人(￣︶￣〃)</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/d8a16c2587e031bfed9c5da7f9db0505.jpg"                      style="zoom:25%;"                 >                <img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/4399968558c918714a1886019be6667b.png"                      style="zoom: 50%;"                 ></p><p>葱油面和“红烧肉” (oﾟvﾟ)ノ</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/827b7e3850f584863e48bd82a75e4813.png"                      style="zoom: 50%;"                 >              <img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/a2c3ac3b3539dec558caa7b2bb7faba1.png"                      style="zoom: 33%;"                 ></p><p>烧卖、水饺、紫菜汤、粽子…..</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/e65be8642eb31231ade715d23364793c.jpg"                      style="zoom: 25%;"                 >    <img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/50538c2197b91bd5b8d24a5e16d72f95.jpg"                      style="zoom:25%;"                 >    <img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/b10447925af32f79b528b65c3bb7c6db.jpg"                      style="zoom:25%;"                 ></p><p>还有煮排骨，红烧鸡翅，乱七八糟的，没图就不放了 ( ఠൠఠ )ﾉ</p><p>​2022年3月上旬到2022年4月下旬，这段时间在学校度过了一个比较舒服的日子😁，比线下教学那会确实轻松不少。</p><p>​进入2022年四月下旬，山东一些县市区宣布恢复线下授课，青州市也同样恢复，就这样，又要从线上教学转为线下，其实多少还是有些不情愿的😟，不过还是比较期待见到学生，线上时，总是自己讲，互动效果很不好，对于学生的实际学习效果也只能从提问和课后作业提交上得知。</p><p>​和同事一起吃饭的小馆子，挺有特色的。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/093ae88e1b2625d4e97186649858541a.jpg"                      style="zoom: 50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/ebc59be75e39d3ce4c8d8d1a40c7e599.jpg"                      style="zoom:50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/3115f28fa02ff24e1f222e1113969915.png"                      style="zoom: 50%;"                 ><p>​大概6月初，实习带队老师说，可以六月中旬结束实习，然后回学校或回家，听到这个还是非常高兴的，但是实习学校的学生可能再转给原来的任课老师教。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/b71f45d142f6d600e3ea87231f8a6c9b.png"                      style="zoom:25%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/dc4adcdf1ba9dbf78b4f21afbf4c79a4.png"                      style="zoom:25%;"                 ></p><p>​洪老师是我的实习学校指导老师，教授给我丰富教学方法，通过旁听也学习宝贵的经验，是一位十分认真负责的老师。</p><p>​受过许多帮助，学到很多东西，都将封存心底，当回忆起的时候，总是能感觉像昨日再现。</p><p>​<strong>珍贵的经历，永远的回忆！</strong></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/4f3ff41083eefa5f1f74895c2be58b92.jpg"                                       ><h2 id="考研"><a href="#考研" class="headerlink" title="考研"></a>考研</h2><p>​考研这个想法是在实习时便有的，但是奈何一周十六节课，教学任务比较多，所以没有集中时间准备，在上完课后，就不太想背考研的内容了🤐 所以考研准备上就一直耽搁，在实习期间基本没怎么复习考研内容。</p><p>​在实习学校教学期间，总感觉工作要大于学习，甚至觉得读研无用😦 也导致一直没将考研放在心上。</p><p>​随着时间一点点过去，实习结束回到山师，暑假可以说“躺平了一个月”，等到暑假快结束回家后，突然有了想准备考研的念头，可能是上半年实习那会激情又回来了ˋ( ° ▽、° ) </p><p>​8月10号正式开始复习，从333和考研政治开始，333教育综合跟的是徐影老师的教育史、教育学原理，凯程其他老师的教育心理学。我看的是网课，当时对要考内容很陌生。</p><p>333做的计划是：</p><ol><li>打算从头开始看一遍视频，对总体内容有一个清晰的认识，</li><li>然后再不断强化记忆，</li><li>在针对性对不熟悉部分在强化，</li><li>最后模拟题目</li></ol><p>​考研政治是跟着徐涛老师网课学习的，配合教材看一遍网课效果还是可以的。</p><p>​908计算机基础是买的学长学姐的资料，内容不算多，就一本计算机基础知识和一本教育技术热点以及往年真题，其实山师往年考的都不难。</p><hr><p>​在文渊楼C区的考研小窝，这个地方没啥人，比较安静，但是冬天呼呼的风太冷了😑</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/d1fb8173e62346875d4bd825791e844d.png"                      style="zoom:33%;"                 ><p>​进入12月份，国家宣布放开疫情管控，然后疫情又大规模爆发。好巧不巧，考试前几天（12月20号），舍友感上了新冠，我当晚也发烧了😯 考前几天的状态就是躺床上休息,考试内容一点也没复习,看书就头晕,知识点根本背不动。<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/b19b7b958eea93058304c015228c2b19.png"                      style="zoom: 25%;"                 ></p><p>​第一次吃KFC(<em>&#x2F;ω＼</em>)，考完奖励一下</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/8cd3ccc151c619c536e418a905b91526.png"                      style="zoom:33%;"                 ><p>​<strong>2023年2月21号</strong>出考研成绩，总分350分，政治50、英语65、教育综合107、计算机基础128。其实这个分数比我预想的高，因为我发烧考试那会，考前基本没复习过。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/e946a63df047f4ddef5aa85c60125be5.png"                      style="zoom: 50%;"                 ><p>​我报的山师的现代教育技术教育专硕，这专业只招18人，我排名51，肯定没法进复试了😶</p><p>​去年A区国家线是351分，我的分数就比较尴尬了，因此我就想走调剂这条路了，了解这个专业的其他学校，部分A区学校全部B区学校，当时就看中了西北师范大学、新疆师范大学、广西师范大学等。</p><p>​西北师范大学往年都大量招调剂生，去年好像就收了三十多个调剂生，其中别有好几个山师的。</p><p>​<strong>2023年3月10号国家线发布</strong>，教育专硕A区国家线是350分，但是政治国家线是51，我差一分，所以只能调剂B区学校，那就把心思全面放在B区学校了。</p><p>​<strong>2023年3月31号预调剂系统开放</strong>，可以提前填写调剂意向<del>（实际没啥用）</del>，主要作用还是看下哪些学校招生，不过有些学校不会在调剂系统发布消息。</p><p>​<strong>2023年4月6日调剂系统开放</strong>，有的学校开放时间与锁定时间都不一定，而且调剂信息查看时间也不一定，我果断就选了三个志愿</p><ol><li>西北师范大学——现代教育技术（准备了好久）</li><li>西北师范大学——职业技术教育（扩招并且一志愿人极少）</li><li>新疆师范大学——现代教育技术（没咋准备）</li></ol><p>​西北师范大学的现代教育技术是我最主要准备的，包括其机考与面试等内容，然鹅，它查看时间与发复试通知很晚，最快的是西北师范的职业技术教育，这个学院的老师很积极负责🤗，之前提前就建了群，对于一志愿与调剂生的一些问题，都给出了答案。由于调剂生懂得等调剂系统通知的煎熬，因而学院老师也对学生在调剂系统提出的问题作了解答，点赞🥰</p><p>​<strong>2023.04.06 18:00</strong>，西北师范大学——职业技术教育学院老师发通知说正式开始筛选调剂信息，并晚上十点前发放完复试通知。这个办事效率真快👍，我也如愿收到了第一个也是唯一一个复试通知（西北师范大学现代教育技术专业是4月7号下午出完的复试通知，非常奇怪的是340分的收到了复试通知，我350分没有，并且我也没跨专业◑﹏◐）。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/ce54406d07c8d938fadbcb2b9ad87cd8.jpg"                      style="zoom: 25%;"                 ><p>​订好机票与顺风车。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/5d3253e701b861208e51c0a83161c256.jpg"                      style="zoom: 33%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/135b12dbb97a9804adb48e34f2daf835.jpg"                      style="zoom: 33%;"                 ></p><p>​飞机从15：55延误到16：40  <strong>(´。＿。｀)</strong></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/300ecbd2c60061031f63c9bf71221279.jpg"                      style="zoom:25%;"                 ><p>​<strong>提前三个小时到达机场，<code>先去机器取票——到柜台办理行李箱托运——到安检处检查——到登机口外等待——登机</code>，漫长的等待（建议坐飞机提前一个半小时到就行）</strong></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/67eddcda271182305c355756bca73b77.jpg"                      style="zoom: 33%;"                 ><p>​遥墙机场的飞机</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/2cd3eb77668adbcaa6e52c8402b2a4fa.jpg"                      style="zoom: 50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/22/5a55b444e452675684500f6274eb494d.jpg"                      style="zoom: 50%;"                 ><p><strong>起飞</strong></p><p>飞机最高时速大约为750KM&#x2F;h，飞行高度最高大约为8000M。</p><p>1、刚开始起飞</p><div id="player_98f5269f43dbf00c"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player_98f5269f43dbf00c'),    userId: 6247,    vcode: '98f5269f43dbf00c',    autoPlay: false});</script><p>2、蓝天白云，云彩真像棉花糖。</p><div id="player_b3dd6cf171d9103a"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player_b3dd6cf171d9103a'),    userId: 6247,    vcode: 'b3dd6cf171d9103a',    autoPlay: false});</script>3、快到兰州<div id="player_bfb69f79f9665d88"></div><script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script><script type="text/javascript">var player = new DogePlayer({    container: document.getElementById('player_bfb69f79f9665d88'),    userId: 6247,    vcode: 'bfb69f79f9665d88',    autoPlay: false});</script>16：40——19：00 做了两个小时多点就到了，下飞机坐了机场巴士（3号线，票价30）准备去西北师范大学附近旅馆。<p>旅馆非常划算的，四晚230块，房间很干净，但是没独卫和独浴。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/1ec9854fd38639c6633502bb3abfc560.jpg"                      style="zoom: 33%;"                 ><p>4月8号下午去复试学校交审核材料，顺便拍了下他们的操场。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/8ea3592bc4cacd5209aa1523b2539001.jpg"                      style="zoom: 20%;"                 ><p>4月7号晚上九点到旅馆，就开始复习《软件工程与数据库原理》的内容了，因为笔试要考，而且我之前没学过😅，这下纯纯的自学了，不过多亏之前买了学姐的复试资料，知道该学什么。</p><p>笔试就考软件工程和数据库原理两部分内容，软件工程内容多，但是比较简单；数据库原理内容较少，但是涉及具体操作，就难点。</p><p>4月八号一整天与九号一上午就在硬背资料，总共接近六七十页资料来回背了三遍(&#x2F;&#x2F;&#x2F;￣皿￣)○～</p><p>4月九号下午考试两个小时，大部分都背过，比较简单，就是后面写SQL语句，实在是练习少，就有点懵逼。</p><p>4月十号一整天是复试面试，因为面试分为综合面试与英语面试，上午综合面试，下午英语，所以就比较煎熬（大部分学校都是综合和英语一块面的￣へ￣）</p><p>综合面试：我复试资料带了简历、成绩单和毕业论文；进场后先抽题，再自我介绍，再回答抽到的题目，然后老师具体问了我毕业论文，然后对我所学的课程提问，专业知识提问，以及交叉学科知识提问。问的比较全面的，老师都挺好的，不过我还是紧张地发抖😇。</p><p>英语面试（两人一组）：先有老师提问几个简单问题，再让做自我介绍，最后两位考生就某话题讨论。老师超级好，面对我自己都不知道自己再说什么，老师微笑着耐心听完了，我同一小组的那个同学实力太强，在讨论环节我即没听懂老师的问题，那位同学的回答我也没听懂🥺，但我还是凭我感觉磕磕绊绊地说完了。</p><p>计算机学院的招生老师很积极负责，通知什么的发的很快，所以复试完的下午就发了拟录取通知我😊，一开始我没看到消息，然后过了半个小时专门打电话来确认。</p><p>​<img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/ee5f39e4c907b56ec0beee34744eae8c.jpg"                      style="zoom: 20%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/29/e9412e17319e6e62d85c36f5ff0487a0.jpg"                      style="zoom: 20%;"                 ></p><p>在旅馆度过的四天复试时光，下图是旅馆所在小巷子：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/30/ada530537429a62aaa328a8e6ceec08a.jpg"                      style="zoom:33%;"                 ><p>打车去兰州西站，路过兰州老街：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/30/a699d3a0cac07e0ce43cb5c01c7260db.jpg"                      style="zoom: 20%;"                 ><p>高铁上所拍：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/04/30/81ba7870127df44370592f940ccb132b.jpg"                      style="zoom: 33%;"                 ><p>经过大半年的备考，感触很深，在付出后得到回报后，心里悬着的一块石头也落地了。</p><p>考上研不是终点，而是起点，是加深学习专业知识，因此需要比以往更加努力我 _(:з)∠)&lt;</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目部署后，网站访问速度很慢</title>
      <link href="/2023/04/14/flask%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%90%8E%EF%BC%8C%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E5%BE%88%E6%85%A2/"/>
      <url>/2023/04/14/flask%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%90%8E%EF%BC%8C%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E5%BE%88%E6%85%A2/</url>
      
        <content type="html"><![CDATA[<p><strong>在使用阿里云服务器部署完flask项目后，实际访问网站发现网站加载速度慢</strong></p><h4 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a><strong>问题分析：</strong></h4><p>打开开发者工具-网络，发现<strong>echarts文件及其3D库加载时间过长</strong>，页面空白时间长，用户等待时间长，如下图</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E8%B6%85%E6%97%B6%E6%A3%80%E6%9F%A5.png"                      alt="超时检查"                ></p><h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a><strong>解决办法：</strong></h4><p>1、利用CDN内容分发网络使用户根据自己网络的特点更快、更稳定地访问到节点服务器中的资源，从而加快网页加载速度<br>2、将服务器base.html文件head标签中的script标签放到body标签中，实现在页面完全显示之后再加载JS文件，但实质上并未解决JS资源加载时间长的问题<br>3、给script标签设置延迟脚本或异步脚本，实现浏览器先下载JS文件，再延迟执行。</p><p>本文选择BootCDN解决了echarts文件的加载问题</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.4.1/echarts.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/echarts-gl/2.0.8/echarts-gl.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E4%BC%98%E5%8C%96%E5%90%8E%E6%88%AA%E5%9B%BE.png"                      alt="优化后截图"                ></p>]]></content>
      
      
      <categories>
          
          <category> WEB运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客音乐歌单更新记录</title>
      <link href="/2023/04/12/%E5%8D%9A%E5%AE%A2%E9%9F%B3%E4%B9%90%E6%AD%8C%E5%8D%95/"/>
      <url>/2023/04/12/%E5%8D%9A%E5%AE%A2%E9%9F%B3%E4%B9%90%E6%AD%8C%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p>​网易云链接能保持较长时间，但对于VIP与付费歌曲还不稳定，QQ音乐与酷狗音乐的外链往往在一段时间之后会被禁止访问（forbidden）</p><blockquote><p>如果遇到博客音乐播放器中音乐失效或无法播放，请在文章下面留言！</p><p>格式：<em><strong>列表序号+音乐名+歌手名</strong></em></p></blockquote><h3 id="2023年4月12日新建"><a href="#2023年4月12日新建" class="headerlink" title="2023年4月12日新建"></a>2023年4月12日新建</h3><ul><li>博客安装Aplayer音乐插件</li></ul><h3 id="2023年4月15日更新"><a href="#2023年4月15日更新" class="headerlink" title="2023年4月15日更新"></a>2023年4月15日更新</h3><ul><li>博客音乐播放器新增20首歌</li><li>博客歌单歌曲与封面图片存储到DogeCloud</li></ul><h3 id="2023年4月16日更新"><a href="#2023年4月16日更新" class="headerlink" title="2023年4月16日更新"></a>2023年4月16日更新</h3><ul><li>发现部分歌曲不能播放</li><li>DogeCloud中音乐重命名，歌单音乐URL链接更换</li><li>博客歌单由原来20首增加到30首</li></ul><h3 id="2023年4月18日更新"><a href="#2023年4月18日更新" class="headerlink" title="2023年4月18日更新"></a>2023年4月18日更新</h3><ul><li>问题：发现DogeCloud音乐MP3外链存在“连接不安全”问题——致使大部分音乐无法播放</li></ul><h3 id="2023年4月19日更新"><a href="#2023年4月19日更新" class="headerlink" title="2023年4月19日更新"></a>2023年4月19日更新</h3><ul><li>解决：为多吉云的CDN加速域名申请Let’s Encrypt的SSL证书，有效期2023&#x2F;4&#x2F;19–2023&#x2F;7&#x2F;18，共三个月</li><li>解决：对原有加速域名进行HTTPS设置，歌单全部音乐恢复正常播放</li></ul><h3 id="2023年4月20日更新"><a href="#2023年4月20日更新" class="headerlink" title="2023年4月20日更新"></a>2023年4月20日更新</h3><ul><li>博客歌单由原来30首增加到56首</li><li>歌单部分歌曲由多吉云存储转为网易云、QQ音乐与酷狗音乐的外链</li></ul><h3 id="2023年4月21日更新"><a href="#2023年4月21日更新" class="headerlink" title="2023年4月21日更新"></a>2023年4月21日更新</h3><ul><li>博客歌单由原来56首增加到100首</li><li>问题：使用QQ音乐与酷狗音乐外链的歌曲无法播放</li><li>分析：上述两者mp3外链可能存在有效期限或者防盗链，致使过段时间链接失效或禁止访问！</li></ul><h3 id="2023年4月22日更新"><a href="#2023年4月22日更新" class="headerlink" title="2023年4月22日更新"></a>2023年4月22日更新</h3><ul><li>解决：过期链接音乐全部转为网易云或使用多吉云存储——歌曲恢复正常播放</li><li>为歌单封面图片新建标准型存储空间，图片域名发生变化</li><li>封面图片匹配完毕</li><li>Picgo接入dogeCloud作图床，存储效率提升！</li></ul><h3 id="2023年4月23日更新"><a href="#2023年4月23日更新" class="headerlink" title="2023年4月23日更新"></a>2023年4月23日更新</h3><ul><li>博客歌单由100首增加到160首</li><li>将失效链接替换为网易云，若属于无资源歌曲则使用多吉云存储资源</li><li>歌单封面匹配完毕</li></ul><h3 id="2023年6月23日更新"><a href="#2023年6月23日更新" class="headerlink" title="2023年6月23日更新"></a>2023年6月23日更新</h3><ul><li>修复失效链接</li><li>新增4首音乐（164首）</li></ul><h3 id="2023年9月20日更新"><a href="#2023年9月20日更新" class="headerlink" title="2023年9月20日更新"></a>2023年9月20日更新</h3><ul><li>修复第33、38、65、67、82、84、113、119、127、161、162、164首失效链接</li></ul><h3 id="2023年10月15日更新"><a href="#2023年10月15日更新" class="headerlink" title="2023年10月15日更新"></a>2023年10月15日更新</h3><ul><li>新增36首音乐（共199首）</li></ul><h3 id="2023年11月28日更新"><a href="#2023年11月28日更新" class="headerlink" title="2023年11月28日更新"></a>2023年11月28日更新</h3><ul><li>新增35首音乐（共234首）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aplayer音乐插件 </tag>
            
            <tag> 更新日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用python爬虫爬取链家潍坊市二手房项目</title>
      <link href="/2023/04/06/%E4%BD%BF%E7%94%A8python%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E9%93%BE%E5%AE%B6%E6%BD%8D%E5%9D%8A%E5%B8%82%E4%BA%8C%E6%89%8B%E6%88%BF%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/04/06/%E4%BD%BF%E7%94%A8python%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E9%93%BE%E5%AE%B6%E6%BD%8D%E5%9D%8A%E5%B8%82%E4%BA%8C%E6%89%8B%E6%88%BF%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="1、需求分析"><a href="#1、需求分析" class="headerlink" title="1、需求分析"></a><strong>1、需求分析</strong></h3><p>需要将潍坊市各县市区页面所展示的二手房信息按要求爬取下来，同时保存到本地。</p><h3 id="2、流程设计"><a href="#2、流程设计" class="headerlink" title="2、流程设计"></a><strong>2、流程设计</strong></h3><ul><li><em>明确目标网站URL（ <a class="link"   href="https://wf.lianjia.com/" >https://wf.lianjia.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ）</em></li><li><em>确定爬取二手房哪些具体信息（字段名）</em></li><li><em>python爬虫关键实现：requests库和lxml库</em></li><li><em>将爬取的数据存储到CSV或数据库中</em></li></ul><h3 id="3、实现过程"><a href="#3、实现过程" class="headerlink" title="3、实现过程"></a><strong>3、实现过程</strong></h3><h4 id="3-1-项目目录"><a href="#3-1-项目目录" class="headerlink" title="3.1 项目目录"></a><strong>3.1 项目目录</strong></h4><p>程序目录文件夹名为**<code>secondhouse_spider</code><strong>,内有</strong><code>lianjia_house.py</code><strong>和</strong><code>Spider_wf.py</code>**两个python文件</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/secondhouse_spider%E6%96%87%E4%BB%B6%E5%A4%B9.png"                      alt="secondhouse_spider文件夹" style="zoom:150%;"                 ><h4 id="3-2-具体实现"><a href="#3-2-具体实现" class="headerlink" title="3.2 具体实现"></a><strong>3.2 具体实现</strong></h4><h5 id="3-2-1-在数据库中创建数据表"><a href="#3-2-1-在数据库中创建数据表" class="headerlink" title="3.2.1 在数据库中创建数据表"></a><strong>3.2.1 在数据库中创建数据表</strong></h5><p>我电脑上使用的是<strong>MySQL8.0</strong>，图形化工具用的是<strong>Navicat</strong>.</p><p>数据库字段对应</p><ul><li><em><strong>id-编号</strong></em></li><li><em><strong>title-标题</strong></em></li><li><em><strong>total_price-房屋总价</strong></em></li><li><em><strong>unit_price-房屋单价</strong></em></li><li><em><strong>square-面积</strong></em></li><li><em><strong>size-户型</strong></em></li><li><em><strong>floor-楼层</strong></em></li><li><em><strong>direction-朝向</strong></em></li><li><em><strong>type-楼型</strong></em></li><li><em><strong>district-地区</strong></em></li><li><em><strong>nearby-附近区域</strong></em></li><li><em><strong>community-小区</strong></em></li><li><em><strong>elevator-电梯有无</strong></em></li><li><em><strong>elevatorNum-梯户比例</strong></em></li><li><em><strong>ownership-房屋性质</strong></em></li></ul><p>下图显示的是数据库字段名、数据类型、长度等信息。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%97%E6%AE%B5%E5%90%8D%E3%80%81%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E9%95%BF%E5%BA%A6%E7%AD%89%E4%BF%A1%E6%81%AF.png"                      alt="数据库字段名、数据类型、长度等信息。"                ></p><h5 id="3-2-2自定义数据存储函数"><a href="#3-2-2自定义数据存储函数" class="headerlink" title="3.2.2自定义数据存储函数"></a><strong>3.2.2自定义数据存储函数</strong></h5><p>这部分代码放到**<code>Spider_wf.py</code>文件<strong>中<br>通过</strong><code>write_csv</code>函数将数据存入CSV文件<strong>，通过</strong><code>write_db</code>函数将数据存入数据库**</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#写入CSV</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_csv</span>(<span class="params">example_1</span>):</span><br><span class="line">    csvfile = <span class="built_in">open</span>(<span class="string">&#x27;二手房数据.csv&#x27;</span>, mode=<span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>, newline=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    fieldnames = [<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;total_price&#x27;</span>, <span class="string">&#x27;unit_price&#x27;</span>, <span class="string">&#x27;square&#x27;</span>, <span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>,<span class="string">&#x27;direction&#x27;</span>,<span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">                  <span class="string">&#x27;BuildTime&#x27;</span>,<span class="string">&#x27;district&#x27;</span>,<span class="string">&#x27;nearby&#x27;</span>, <span class="string">&#x27;community&#x27;</span>, <span class="string">&#x27;decoration&#x27;</span>, <span class="string">&#x27;elevator&#x27;</span>,<span class="string">&#x27;elevatorNum&#x27;</span>,<span class="string">&#x27;ownership&#x27;</span>]</span><br><span class="line">    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)</span><br><span class="line">    writer.writerow(example_1)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#写入数据库</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_db</span>(<span class="params">example_2</span>):</span><br><span class="line">    conn = pymysql.connect(host=<span class="string">&#x27;127.0.0.1&#x27;</span>,port= <span class="number">3306</span>,user=<span class="string">&#x27;changziru&#x27;</span>,</span><br><span class="line">                           password=<span class="string">&#x27;ru123321&#x27;</span>,database=<span class="string">&#x27;secondhouse_wf&#x27;</span>,charset=<span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">                           )</span><br><span class="line">    cursor =conn.cursor()</span><br><span class="line">    title = example_2.get(<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    total_price = example_2.get(<span class="string">&#x27;total_price&#x27;</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    unit_price = example_2.get(<span class="string">&#x27;unit_price&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    square = example_2.get(<span class="string">&#x27;square&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    size = example_2.get(<span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    floor = example_2.get(<span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    direction = example_2.get(<span class="string">&#x27;direction&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">type</span> = example_2.get(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    BuildTime = example_2.get(<span class="string">&#x27;BuildTime&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    district = example_2.get(<span class="string">&#x27;district&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    nearby = example_2.get(<span class="string">&#x27;nearby&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    community = example_2.get(<span class="string">&#x27;community&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    decoration = example_2.get(<span class="string">&#x27;decoration&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    elevator = example_2.get(<span class="string">&#x27;elevator&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    elevatorNum = example_2.get(<span class="string">&#x27;elevatorNum&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    ownership = example_2.get(<span class="string">&#x27;ownership&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    cursor.execute(<span class="string">&#x27;insert into wf (title, total_price, unit_price, square, size, floor,direction,type,BuildTime,district,nearby, community, decoration, elevator,elevatorNum,ownership)&#x27;</span></span><br><span class="line">                   <span class="string">&#x27;values (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)&#x27;</span>,</span><br><span class="line">                   [title, total_price, unit_price, square, size, floor,direction,<span class="built_in">type</span>,</span><br><span class="line">                  BuildTime,district,nearby, community, decoration, elevator,elevatorNum,ownership])</span><br><span class="line">    conn.commit()<span class="comment">#传入数据库</span></span><br><span class="line">    conn.close()<span class="comment">#关闭数据库</span></span><br></pre></td></tr></table></figure></div><h5 id="3-2-3-爬虫程序实现"><a href="#3-2-3-爬虫程序实现" class="headerlink" title="3.2.3 爬虫程序实现"></a><strong>3.2.3 爬虫程序实现</strong></h5><p>这部分代码放到<strong>lianjia_house.py</strong>文件，调用项目<code>Spider_wf.py</code>文件中的<code>write_csv</code>和<code>write_db</code>函数</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#爬取链家二手房详情页信息</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> secondhouse_spider.Spider_wf <span class="keyword">import</span> write_csv,write_db</span><br><span class="line"> </span><br><span class="line"><span class="comment">#模拟浏览器操作</span></span><br><span class="line">USER_AGENTS = [</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52&quot;</span>,</span><br><span class="line">]</span><br><span class="line"><span class="comment">#随机USER_AGENTS</span></span><br><span class="line">random_agent = USER_AGENTS[randint(<span class="number">0</span>, <span class="built_in">len</span>(USER_AGENTS) - <span class="number">1</span>)]</span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: random_agent,&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpiderFunc</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">spider</span>(<span class="params">self ,<span class="built_in">list</span></span>):</span><br><span class="line">        <span class="keyword">for</span> sh <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">            response = requests.get(url=sh, params=&#123;<span class="string">&#x27;param&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;,headers=&#123;<span class="string">&#x27;Connection&#x27;</span>:<span class="string">&#x27;close&#x27;</span>&#125;).text</span><br><span class="line">            tree = etree.HTML(response)</span><br><span class="line">            li_list = tree.xpath(<span class="string">&#x27;//ul[@class=&quot;sellListContent&quot;]/li[@class=&quot;clear LOGVIEWDATA LOGCLICKDATA&quot;]&#x27;</span>)</span><br><span class="line">            <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">                <span class="comment"># 获取每套房子详情页的URL</span></span><br><span class="line">                detail_url = li.xpath(<span class="string">&#x27;.//div[@class=&quot;title&quot;]/a/@href&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="comment"># 向每个详情页发送请求</span></span><br><span class="line">                    detail_response = requests.get(url=detail_url, headers=&#123;<span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;close&#x27;</span>&#125;).text</span><br><span class="line"> </span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                    sleeptime = randint(<span class="number">15</span>,<span class="number">30</span>)</span><br><span class="line">                    time.sleep(sleeptime)<span class="comment">#随机时间延迟</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="built_in">repr</span>(e))<span class="comment">#打印异常信息</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    detail_tree = etree.HTML(detail_response)</span><br><span class="line">                    item = &#123;&#125;</span><br><span class="line">                    title_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;title&quot;]/h1/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;title&#x27;</span>] = title_list[<span class="number">0</span>] <span class="keyword">if</span> title_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 1简介</span></span><br><span class="line"> </span><br><span class="line">                    total_price_list = detail_tree.xpath(<span class="string">&#x27;//span[@class=&quot;total&quot;]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;total_price&#x27;</span>] = total_price_list[<span class="number">0</span>] <span class="keyword">if</span> total_price_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 2总价</span></span><br><span class="line"> </span><br><span class="line">                    unit_price_list = detail_tree.xpath(<span class="string">&#x27;//span[@class=&quot;unitPriceValue&quot;]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;unit_price&#x27;</span>] = unit_price_list[<span class="number">0</span>] <span class="keyword">if</span> unit_price_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 3单价</span></span><br><span class="line"> </span><br><span class="line">                    square_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;area&quot;]/div[@class=&quot;mainInfo&quot;]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;square&#x27;</span>] = square_list[<span class="number">0</span>] <span class="keyword">if</span> square_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 4面积</span></span><br><span class="line"> </span><br><span class="line">                    size_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;base&quot;]/div[@class=&quot;content&quot;]/ul/li[1]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;size&#x27;</span>] = size_list[<span class="number">0</span>] <span class="keyword">if</span> size_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 5户型</span></span><br><span class="line"> </span><br><span class="line">                    floor_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;base&quot;]/div[@class=&quot;content&quot;]/ul/li[2]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;floor&#x27;</span>] = floor_list[<span class="number">0</span>] <span class="keyword">if</span> floor_list <span class="keyword">else</span> <span class="literal">None</span><span class="comment">#6楼层</span></span><br><span class="line"> </span><br><span class="line">                    direction_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;type&quot;]/div[@class=&quot;mainInfo&quot;]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;direction&#x27;</span>] = direction_list[<span class="number">0</span>] <span class="keyword">if</span> direction_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 7朝向</span></span><br><span class="line"> </span><br><span class="line">                    type_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;area&quot;]/div[@class=&quot;subInfo&quot;]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;type&#x27;</span>] = type_list[<span class="number">0</span>] <span class="keyword">if</span> type_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 8楼型</span></span><br><span class="line"> </span><br><span class="line">                    BuildTime_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;transaction&quot;]/div[@class=&quot;content&quot;]/ul/li[5]/span[2]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;BuildTime&#x27;</span>] = BuildTime_list[<span class="number">0</span>] <span class="keyword">if</span> BuildTime_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 9房屋年限</span></span><br><span class="line"> </span><br><span class="line">                    district_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;areaName&quot;]/span[@class=&quot;info&quot;]/a[1]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;district&#x27;</span>] = district_list[<span class="number">0</span>] <span class="keyword">if</span> district_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 10地区</span></span><br><span class="line"> </span><br><span class="line">                    nearby_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;areaName&quot;]/span[@class=&quot;info&quot;]/a[2]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;nearby&#x27;</span>] = nearby_list[<span class="number">0</span>] <span class="keyword">if</span> nearby_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 11区域</span></span><br><span class="line"> </span><br><span class="line">                    community_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;communityName&quot;]/a[1]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;community&#x27;</span>] = community_list[<span class="number">0</span>] <span class="keyword">if</span> community_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 12小区</span></span><br><span class="line"> </span><br><span class="line">                    decoration_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;base&quot;]/div[@class=&quot;content&quot;]/ul/li[9]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;decoration&#x27;</span>] = decoration_list[<span class="number">0</span>] <span class="keyword">if</span> decoration_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 13装修</span></span><br><span class="line"> </span><br><span class="line">                    elevator_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;base&quot;]/div[@class=&quot;content&quot;]/ul/li[11]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;elevator&#x27;</span>] = elevator_list[<span class="number">0</span>] <span class="keyword">if</span> elevator_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 14电梯</span></span><br><span class="line"> </span><br><span class="line">                    elevatorNum_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;base&quot;]/div[@class=&quot;content&quot;]/ul/li[10]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;elevatorNum&#x27;</span>] = elevatorNum_list[<span class="number">0</span>] <span class="keyword">if</span> elevatorNum_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 15梯户比例</span></span><br><span class="line"> </span><br><span class="line">                    ownership_list = detail_tree.xpath(<span class="string">&#x27;//div[@class=&quot;transaction&quot;]/div[@class=&quot;content&quot;]/ul/li[2]/span[2]/text()&#x27;</span>)</span><br><span class="line">                    item[<span class="string">&#x27;ownership&#x27;</span>] = ownership_list[<span class="number">0</span>] <span class="keyword">if</span> ownership_list <span class="keyword">else</span> <span class="literal">None</span>  <span class="comment"># 16交易权属</span></span><br><span class="line">                    self.count += <span class="number">1</span></span><br><span class="line">                    <span class="built_in">print</span>(self.count,title_list)</span><br><span class="line"> </span><br><span class="line">                    <span class="comment"># 将爬取到的数据存入CSV文件</span></span><br><span class="line">                    write_csv(item)</span><br><span class="line">                    <span class="comment"># 将爬取到的数据存取到MySQL数据库中</span></span><br><span class="line">                    write_db(item)</span><br><span class="line"><span class="comment">#循环目标网站</span></span><br><span class="line">count =<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    <span class="keyword">if</span> page &lt;=<span class="number">40</span>:</span><br><span class="line">        url_qingzhoushi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/qingzhoushi/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 青州市40</span></span><br><span class="line">        url_hantingqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/hantingqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 寒亭区 76</span></span><br><span class="line">        url_fangzi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/fangziqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 坊子区</span></span><br><span class="line">        url_kuiwenqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/kuiwenqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 奎文区</span></span><br><span class="line">        url_gaoxin = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/gaoxinjishuchanyekaifaqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 高新区</span></span><br><span class="line">        url_jingji = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/jingjijishukaifaqu2/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 经济技术85</span></span><br><span class="line">        url_shouguangshi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/shouguangshi/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 寿光市 95</span></span><br><span class="line">        url_weichengqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/weichengqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 潍城区</span></span><br><span class="line">        list_wf = [url_qingzhoushi, url_hantingqu,url_jingji, url_shouguangshi, url_weichengqu, url_fangzi, url_kuiwenqu, url_gaoxin]</span><br><span class="line">        SpiderFunc().spider(list_wf)</span><br><span class="line">    <span class="keyword">elif</span> page &lt;=<span class="number">76</span>:</span><br><span class="line">        url_hantingqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/hantingqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 寒亭区 76</span></span><br><span class="line">        url_fangzi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/fangziqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 坊子区</span></span><br><span class="line">        url_kuiwenqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/kuiwenqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 奎文区</span></span><br><span class="line">        url_gaoxin = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/gaoxinjishuchanyekaifaqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 高新区</span></span><br><span class="line">        url_jingji = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/jingjijishukaifaqu2/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 经济技术85</span></span><br><span class="line">        url_shouguangshi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/shouguangshi/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 寿光市 95</span></span><br><span class="line">        url_weichengqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/weichengqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 潍城区</span></span><br><span class="line">        list_wf = [url_hantingqu,url_jingji, url_shouguangshi, url_weichengqu, url_fangzi, url_kuiwenqu, url_gaoxin]</span><br><span class="line">        SpiderFunc().spider(list_wf)</span><br><span class="line">    <span class="keyword">elif</span> page&lt;=<span class="number">85</span>:</span><br><span class="line">        url_fangzi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/fangziqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 坊子区</span></span><br><span class="line">        url_kuiwenqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/kuiwenqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 奎文区</span></span><br><span class="line">        url_gaoxin = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/gaoxinjishuchanyekaifaqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 高新区</span></span><br><span class="line">        url_jingji = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/jingjijishukaifaqu2/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 经济技术85</span></span><br><span class="line">        url_shouguangshi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/shouguangshi/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 寿光市 95</span></span><br><span class="line">        url_weichengqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/weichengqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 潍城区</span></span><br><span class="line">        list_wf = [url_jingji, url_shouguangshi, url_weichengqu, url_fangzi, url_kuiwenqu, url_gaoxin]</span><br><span class="line">        SpiderFunc().spider(list_wf)</span><br><span class="line">    <span class="keyword">elif</span> page &lt;=<span class="number">95</span>:</span><br><span class="line">        url_shouguangshi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/shouguangshi/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 寿光市 95</span></span><br><span class="line">        url_weichengqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/weichengqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 潍城区</span></span><br><span class="line">        url_fangzi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/fangziqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 坊子区</span></span><br><span class="line">        url_kuiwenqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/kuiwenqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 奎文区</span></span><br><span class="line">        url_gaoxin = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/gaoxinjishuchanyekaifaqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 高新区</span></span><br><span class="line">        list_wf = [url_shouguangshi, url_weichengqu, url_fangzi, url_kuiwenqu, url_gaoxin]</span><br><span class="line">        SpiderFunc().spider(list_wf)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        url_weichengqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/weichengqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 潍城区</span></span><br><span class="line">        url_fangzi = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/fangziqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 坊子区</span></span><br><span class="line">        url_kuiwenqu = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/kuiwenqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 奎文区</span></span><br><span class="line">        url_gaoxin = <span class="string">&#x27;https://wf.lianjia.com/ershoufang/gaoxinjishuchanyekaifaqu/pg&#x27;</span> + <span class="built_in">str</span>(page)  <span class="comment"># 高新区</span></span><br><span class="line">        list_wf = [url_weichengqu, url_fangzi,url_kuiwenqu, url_gaoxin]</span><br><span class="line">        SpiderFunc().spider(list_wf)</span><br></pre></td></tr></table></figure></div><h5 id="3-2-4-效果展示"><a href="#3-2-4-效果展示" class="headerlink" title="3.2.4 效果展示"></a><strong>3.2.4 效果展示</strong></h5><p>总共获取到20826条数据<br>我数据库因为要做数据分析，因而作了预处理，获得18031条</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/sh_data%E6%95%B0%E6%8D%AE%E8%A1%A8.png"                      alt="sh_data数据表"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E9%83%A8%E5%88%86%E6%BD%8D%E5%9D%8A%E9%93%BE%E5%AE%B6%E4%BA%8C%E6%89%8B%E6%88%BF%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF.png"                      alt="数据库中部分潍坊链家二手房数据信息"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/csv%E4%B8%AD%E9%83%A8%E5%88%86%E6%BD%8D%E5%9D%8A%E4%BA%8C%E6%89%8B%E6%88%BF%E6%95%B0%E6%8D%AE.png"                      alt="csv中部分潍坊二手房数据"                ></p><h3 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a><strong>4、总结</strong></h3><p><strong>最后，以上就是我使用python的requests库与lxml库爬取潍坊链家二手房项目的具体实现过程，有疑问的地方欢迎交流！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Python </tag>
            
            <tag> requests库 </tag>
            
            <tag> 链家二手房 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习概念辨析——Epoch、Batch、Iteration</title>
      <link href="/2023/04/05/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A6%82%E5%BF%B5%E8%BE%A8%E6%9E%90%E2%80%94%E2%80%94Epoch%E3%80%81Batch%E3%80%81Iteration/"/>
      <url>/2023/04/05/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A6%82%E5%BF%B5%E8%BE%A8%E6%9E%90%E2%80%94%E2%80%94Epoch%E3%80%81Batch%E3%80%81Iteration/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文转载自简书<a class="link"   href="https://www.jianshu.com/p/22c50ded4cf7" >https://www.jianshu.com/p/22c50ded4cf7 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>在训练神经网络的时候，我们难免会看到Batch、Epoch和Iteration这几个概念。曾对这几个概念感到模糊，看了网上的一些文章后，在这里做几个小小的总结。</p><h3 id="名词解释："><a href="#名词解释：" class="headerlink" title="名词解释："></a>名词解释：</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/epoch%7Cbatch%7Citeration%E5%AE%9A%E4%B9%89.webp"                      alt="epoch\batch\iteration定义"                ></p><blockquote><p>【 图片来源：<a class="link"   href="https://zhuanlan.zhihu.com/p/29409502" >https://zhuanlan.zhihu.com/p/29409502 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 】</p></blockquote><ul><li><strong>Epoch（时期）：</strong></li></ul><p>当一个完整的数据集通过了神经网络一次并且返回了一次，这个过程称为一次&gt;epoch。（也就是说，所有训练样本在神经网络中都 进行了一次正向传播 和一次反向传播 ）<br>再通俗一点，一个Epoch就是将所有训练样本训练一次的过程。<br>然而，当一个Epoch的样本（也就是所有的训练样本）数量可能太过庞大（对于计算机而言），就需要把它分成多个小块，也就是就是分成多个Batch 来进行训练。</p><ul><li><strong>Batch（批 &#x2F; 一批样本）：</strong></li></ul><p>将整个训练样本分成若干个Batch。</p><ul><li><strong>Batch_Size（批大小）：</strong></li></ul><p>每批样本的大小。</p><ul><li><strong>Iteration（一次迭代）：</strong></li></ul><p>训练一个Batch就是一次Iteration（这个概念跟程序语言中的迭代器相似）。</p><ul><li><strong>为什么要使用多于一个epoch?</strong></li></ul><p>在神经网络中传递完整的数据集一次是不够的，而且我们需要将完整的数据集在同样的神经网络中传递多次。但请记住，我们使用的是有限的数据集，并且我们使用一个迭代过程即梯度下降来优化学习过程。如下图所示。因此仅仅更新一次或者说使用一个epoch是不够的。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E8%BF%87%E6%8B%9F%E5%90%88%E3%80%81%E9%80%82%E4%B8%AD%E3%80%81%E6%AC%A0%E6%8B%9F%E5%90%88%E7%9A%84%E5%9B%BE%E5%83%8F%E7%89%B9%E5%BE%81.png"                      alt="过拟合、适中、欠拟合的图像特征"                ></p><p><em>随着epoch数量增加，神经网络中的权重的更新次数也在增加，曲线从欠拟合变得过拟合</em>。</p><ul><li><strong>那么，问题来了，几个epoch才是合适的呢？</strong></li></ul><p>不幸的是，这个问题并没有正确的答案。对于不同的数据集，答案是不一样的。但是数据的多样性会影响合适的epoch的数量。比如，只有黑色的猫的数据集，以及有各种颜色的猫的数据集。</p><blockquote><p>【 来源：<a class="link"   href="https://blog.csdn.net/qq_39521554/article/details/84480429" >https://blog.csdn.net/qq_39521554/article/details/84480429 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 】</p></blockquote><h3 id="换算关系："><a href="#换算关系：" class="headerlink" title="换算关系："></a>换算关系：</h3><p><img src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E6%89%B9%E6%95%B0%E9%87%8F=%E8%AE%AD%E7%BB%83%E9%9B%86%E5%A4%A7%E5%B0%8F/%E6%89%B9%E5%A4%A7%E5%B0%8F.png" alt="批数量=训练集大小/批大小"></p><p>实际上，梯度下降的几种方式的根本区别就在于上面公式中的 Batch_Size 不同。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%96%B9%E5%BC%8FBGD%E3%80%81SGD%E3%80%81Mini-Batch%E7%9A%84%E8%AE%AD%E7%BB%83%E9%9B%86%E5%A4%A7%E5%B0%8F%E3%80%81%E6%89%B9%E5%A4%A7%E5%B0%8F%E5%92%8C%E6%89%B9%E6%95%B0%E9%87%8F.webp"                      alt="梯度下降方式BGD、SGD、Mini-Batch的训练集大小、批大小和批数量"                ></p><blockquote><p>【 图片来源：<a class="link"   href="https://zhuanlan.zhihu.com/p/29409502" >https://zhuanlan.zhihu.com/p/29409502 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 】</p></blockquote><h3 id="举个例子："><a href="#举个例子：" class="headerlink" title="举个例子："></a>举个例子：</h3><p><strong>mnist 数据集有60000张图片作为训练数据，10000张图片作为测试数据。假设现在选择 Batch_Size &#x3D; 100对模型进行训练。迭代30000次。</strong></p><ul><li>每个 Epoch 要训练的图片数量：60000(训练集上的所有图像)</li><li>训练集具有的 Batch 个数： 60000&#x2F;100&#x3D;600</li><li>每个 Epoch 需要完成的 Batch 个数：600</li><li>每个 Epoch 具有的 Iteration 个数：600（完成一个Batch训练，相当于参数迭代一次）</li><li>每个 Epoch 中发生模型权重更新的次数：600</li><li>训练 10 个Epoch后，模型权重更新的次数： 600*10&#x3D;6000</li><li>不同Epoch的训练，其实用的是同一个训练集的数据。<strong>第1个Epoch和第10个Epoch虽然用的都是训练集的60000图片，但是对模型的权重更新值却是完全不同的。因为不同Epoch的模型处于代价函数空间上的不同位置，模型的训练代越靠后，越接近谷底，其代价越小。</strong></li><li>总共完成30000次迭代，相当于完成了30000&#x2F;600&#x3D;50个Epoch</li></ul><blockquote><p>【 来源：<a class="link"   href="https://blog.csdn.net/xiaohuihui1994/article/details/80624593" >https://blog.csdn.net/xiaohuihui1994/article/details/80624593 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 】【 来源：<a class="link"   href="https://blog.csdn.net/xiaohuihui1994/article/details/80624593" >https://blog.csdn.net/xiaohuihui1994/article/details/80624593 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 】</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> DeepLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础概念 </tag>
            
            <tag> Epoch </tag>
            
            <tag> Batch </tag>
            
            <tag> Iteration </tag>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python安装及配置环境变量</title>
      <link href="/2023/04/04/Python%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2023/04/04/Python%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h4 id="1、打开官网"><a href="#1、打开官网" class="headerlink" title="1、打开官网"></a>1、打开官网</h4><ul><li>进入官网<a class="link"   href="https://www.python.org/downloads/" >Python下载官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，选择需要的Python，我选择的是Python3.9.10。</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/d8404b0d27ff0db5c3984a4d72cecb78.png"                      style="zoom:50%;"                 ><ul><li>由于我的系统是Windows10 64位系统，所以我选择的是下图框中的，mac或Linux请看是否存在安装包。</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/b1f5498a0969568a83b7f999f65873e4.png"                      style="zoom:50%;"                 ><ul><li>下载完成后如下，打开即可</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/59edd91f9a558040b25bd2bcdd7b2ed0.png"                      style="zoom:50%;"                 ><h4 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h4><ul><li>由于这是自定义安装教程，所以选择如下，默认安装对于初次安装比较合适。</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/82775e2a9c859d916c2ecad47705c97a.png"                      style="zoom: 67%;"                 ><ul><li>默认全部安装即可。如下：</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/8d9ab8aabc61fa347b181e7ad8552c6d.png"                      style="zoom:67%;"                 ><ul><li>选择如下选项，如果自己电脑C盘足够，可以优先安装C盘，我电脑C盘空间小，所以安装到F盘。</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/e210c477532d8b526cfc5b0aec9a844f.png"                      style="zoom:67%;"                 ><ul><li>安装过程</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/7e6f6c55c6c0c3c8ed70f637f9dc6b8a.png"                      style="zoom:67%;"                 ><ul><li>安装成功</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/5f10e7ba1a0bd142f78a8ddae76e5a01.png"                      style="zoom:67%;"                 ><h4 id="3、配置环境变量"><a href="#3、配置环境变量" class="headerlink" title="3、配置环境变量"></a>3、配置环境变量</h4><ul><li>搜索 <strong>高级系统设置</strong></li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/1aaa9967944170e20b049dbde54648e3.png"                      style="zoom: 50%;"                 ><ul><li>点击 <strong>高级</strong> 选项卡</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/1b86853fa044d06c35542581a1d0ba10.png"                      style="zoom:67%;"                 ><ul><li>点击 <strong>环境变量</strong> 选项</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/acd30d24985c3eb83c3e46bd1b2f6ee4.png"                      style="zoom:67%;"                 ><ul><li>为<strong>系统变量中Path</strong>添加路径</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/076a255a8732a61441253ca3b57fa2ec.png"                      style="zoom: 67%;"                 ><ul><li>新建变量</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/7196f77fa54e8cd9b98eec7e453dca12.png"                      style="zoom:67%;"                 ><ul><li>内容为 <code>F:\Python3.9.10</code> 和 <code>F:\Python3.9.10\Scripts</code>，这部分内容按照安装过程中文件位置而定</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/5bf611a4d6d76843b11d5f1e84f315aa.png"                      style="zoom:67%;"                 ><ul><li>也可以顺便给上面用户的Path环境变量配置</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/09edafe837a2541a31575c4754b9c04c.png"                      style="zoom:67%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/8df96787fbd686c481ece7dcc752151b.png"                      style="zoom:67%;"                 ><ul><li>点击确定</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/a240563852b73d76c33603ffca908a4b.png"                      style="zoom:67%;"                 ><p>上述环境变量配置完成后最好重启一次电脑。</p><h4 id="4、验证"><a href="#4、验证" class="headerlink" title="4、验证"></a>4、验证</h4><p>打开命令行，输入<code>python</code>，如果出现以下内容即代表安装配置成功</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/0d7f788f94b207bf2a6b0d1618f28d82.png"                      style="zoom:50%;"                 ><p>下面这个是我最先安装的Anaconda环境，也可以使用Python显示出来</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://duojiyun-storage.xn--l3q92w0lc.xyz/2023/05/13/e81aec1b2e1bad3f6c0f0a1a71720769.png"                      style="zoom: 50%;"                 >]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>世界，你好！</title>
      <link href="/2023/04/03/%E4%B8%96%E7%95%8C%EF%BC%8C%E4%BD%A0%E5%A5%BD%EF%BC%81/"/>
      <url>/2023/04/03/%E4%B8%96%E7%95%8C%EF%BC%8C%E4%BD%A0%E5%A5%BD%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>&#x3D;&#x3D;这是我使用Hexo撰写的第一篇文章&#x3D;&#x3D;，一切从这里开始。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/202304171409377.jpeg"                      alt="风景图1"                ></p><p>制作博客之旅算是比较曲折的吧😥</p><ol><li><p>最开始是利用博客园，但是博客园的样式我不太喜欢，听说是可以自己设置HTML和CSS等，但是我技术有限，就用了博客园给的主题，（我的博客园主页：<a class="link"   href="https://www.cnblogs.com/changziru/" >阿儒さん - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>）。</p><ul><li>博客园优点：<em>稳定，可扩展性较强（看个人技术），资源存储基本不用管</em></li><li>博客园缺点吗？<em>样式不咋好看，功能性较差，没啥交互与跳转，小工具小部件少</em></li></ul></li><li><p>之前用的是云服务器+WordPress搭建的博客，但是对于单纯的个人博客网站，云服务器费用有点高，而且资源空闲，大部分用不到。我使用的是<strong>阿里云的ECS，参与了“飞天计划”活动</strong>（好像叫这名），白送了1个月+6个月（答题），送的配置是<strong>2核+2G+1Mbps带宽+40G存储</strong>，这个配置对于初学者已经十分足够了，主要是用于部署毕业设计的二手房数据分析预测系统网站</p><ul><li>ECS优点：<em>新手优惠大，白嫖时间长，稳定，配置简单，社区支持强，控制台设置灵活，到手可以直接安装宝塔</em></li><li>ECS缺点呢？<strong>贵</strong>（这是我的缺点😣）</li></ul></li><li><p>后来，本着节省资源与费用的想法，开通了虚拟主机（云服务器划分出来的隔离环境），我用的是<a class="link"   href="https://www.rainyun.cc/home" >雨云 - 新一代云服务提供商 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的虚拟主机，<strong>价格1年50块</strong>，虚拟主机控制面板是EasyPanel，套餐是<strong>香港EP二代 入门版</strong>（这是最便宜的套餐ToT），具体配置是<strong>500MB磁盘+500MB数据库空间+4Mbps带宽</strong>，EP主机控制确实不如宝塔界面的好用，例如宝塔有一键部署WordPress的插件，而EP只能从 <a href="wordpress.org">wordpress.org</a>网站下载安装包，然后用FTP上传到文件管理目录中，而且访问博客必须绑定域名，相比之下麻烦许多。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/ep%E6%8E%A7%E5%88%B6%E7%95%8C%E9%9D%A2.png"                      alt="EP主机控制界面" style="zoom:50%;"                 ><p>&#x3D;&#x3D;如果用虚拟主机，个人还是比较推荐带宝塔面板的。&#x3D;&#x3D;</p><ul><li>虚拟主机优点：<em>价格便宜，性价比高，对于搭建流量较小的个人网站非常适合，而且网上还有一些提供免费的虚拟主机，像<a class="link"   href="https://newserv.freewha.com/freewha.cpanel" >FreeWHA Control Panel <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、<a class="link"   href="https://www.sanfengyun.com/" >三丰云 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>等。</em></li><li>虚拟主机缺点：<em>磁盘空间小，大多为几百兆或1G，搭建的网站不是特别稳定，有时候无法访问（挺闹心的），访问速度较慢，EP界面不太好用。</em></li></ul><p>具体搭建过程就是：将官网下载的wordpress压缩包解压得到新的wordpress文件夹，把原来的云服务器中的WordPress文件夹中的<code>wp-content</code>文件夹完整迁移到虚拟主机中新建的wordpress文件夹（替换掉新建的，因为原有wp-content文件夹包含了原有博客的文章页面插件等内容），如下图</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/wp-content.png"                      style="zoom: 50%;"                 ><p>数据库从原服务器导出后，再用<code>phpMyadmin</code>工具导入现有数据库，改数据表wp_options中的siteurl与home，如下图</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E6%9B%B4%E6%94%B9URL.png"                      style="zoom: 67%;"                 ><p>如此，便完成原有服务器博客数据迁移到新服务器中，</p></li><li><p>最后，便是现在利用<strong>Hexo + github pages</strong>，markdown编辑软件为Typora，图片上传软件为Picgo，图床选用阿里云OSS（40G本地冗余标准存储一年9块），额外流量费要具体看访问流量了，GitHub pages博客是朋友介绍用的，到现在个人感觉</p><ul><li>优点：<em>稳定，免费，主题样式很多，功能性强，交互效果好，可拓展性强</em></li><li>缺点：<em>由于是本地编辑然后生成静态文件再部署的形式，写博客过程比较复杂，同时markdown还有图片等都需要利用专门软件，操作上还是比较麻烦（自己适应😂），无法移动端编辑博客</em></li></ul></li></ol><hr><p><strong><u>这个博客将记录日常生活和学习Python及人工智能的过程，偶尔也记录一下前端内容，对于WEB开发本身还是比较感兴趣的，欢迎交流各类技术问题！</u></strong></p><p>&#x3D;&#x3D;分享知识，传递价值！&#x3D;&#x3D;</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 介绍 </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页交互式编程NoteBook合集</title>
      <link href="/2023/04/03/%E7%BD%91%E9%A1%B5%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%BC%96%E7%A8%8BNoteBook%E5%90%88%E9%9B%86/"/>
      <url>/2023/04/03/%E7%BD%91%E9%A1%B5%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%BC%96%E7%A8%8BNoteBook%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p>​利用python编程时常用的IDE软件像Pycharm和VScode等，体积较大，使用时电脑有时会卡顿，而且对于数据处理、可视化、机器学习及深度学习等使用不是特别方便，无法做到针对代码各部分做编辑调试。因而网页交互式IDE就成为了一种潮流，下面我将介绍一下各种网页交互式IDE</p><h2 id="一、jupyter-notebook"><a href="#一、jupyter-notebook" class="headerlink" title="一、jupyter notebook"></a><strong>一、jupyter notebook</strong></h2><h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a><strong>1、安装</strong></h3><p>安装jupyter notebook通常在Anaconda统一包管理软件中安装，使用conda方式；如果想单独安装，也可以选择pip方式</p><table><thead><tr><th>安装方式</th><th>安装命令</th></tr></thead><tbody><tr><td><em>pip</em></td><td><em>pip install jupyter notebook</em></td></tr><tr><td><em>conda</em></td><td><em>conda install jupyter notebook</em></td></tr></tbody></table><h3 id="2、修改文件目录（可跳过）"><a href="#2、修改文件目录（可跳过）" class="headerlink" title="2、修改文件目录（可跳过）"></a>2、修改文件目录（可跳过）</h3><p>打开命令行输入<code>**jupyter notebook --generate-config**</code>回车，下方显示配置文档所在位置</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/jupyter%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE.png"                      alt="jupyter配置文件位置" style="zoom:80%;"                 ><p>在该目录文件夹下找到<strong>jupyter_notebook_config.py文件</strong>，用记事本方式打开，在记事本中查找（Ctrl+F）<code>**NotebookApp.notebook_dir**</code> 所在位置</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE%E5%B9%B6%E4%BF%AE%E6%94%B9.png"                      alt="查找文件位置并修改" style="zoom:80%;"                 ><h3 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a><strong>3、使用</strong></h3><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/jupyter%E7%95%8C%E9%9D%A2%E4%BB%8B%E7%BB%8D.png"                      alt="jupyter界面介绍" style="zoom:80%;"                 ><p>Jupyter Notebook（此前被称为 IPython notebook）是一个交互式笔记本，支持运行 40 多种编程语言。</p><p>Jupyter Notebook 的本质是一个 Web[ 应用程序](<a class="link"   href="https://baike.baidu.com/item/" >https://baike.baidu.com/item/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 应用程序&#x2F;5985445?fromModule&#x3D;lemma_inlink)，便于创建和共享程序文档，支持实时代码，数学方程，可视化和 <a class="link"   href="https://baike.baidu.com/item/markdown/3245829?fromModule=lemma_inlink" >markdown <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。 用途包括：数据清理和转换，数值模拟，<a class="link"   href="https://baike.baidu.com/item/%E7%BB%9F%E8%AE%A1%E5%BB%BA%E6%A8%A1/267609?fromModule=lemma_inlink" >统计建模 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，机器学习等等</p><p>以python开发为例，Windows系统打开jupyter notebook应用程式，可以通过在命令行cmd中输入<strong>ipython notebook</strong>,即可使用默认浏览器进入一个在线IDE</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/jupyter%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%98%BE%E7%A4%BA%E7%BD%91%E5%9D%80.png"                      alt="jupyter命令行显示网址" style="zoom:80%;"                 ><p>注意在更换浏览器打开jupyter时，需要完整复制上述网址，而不能仅复制粘贴<a class="link"   href="http://localhost:8888/tree,%E5%90%A6%E5%88%99%E4%BC%9A%E5%87%BA%E7%8E%B0%E4%B8%8B%E9%9D%A2%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%8C%E9%9C%80%E8%A6%81%E8%BE%93%E5%85%A5token%E4%BB%A4%E7%89%8C,%E5%85%B7%E4%BD%93token%E5%80%BC%E5%8F%82%E8%80%83%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%ADhttp://localhost:8888/?token=%E4%BB%A4%E7%89%8C%E5%80%BC" >http://localhost:8888/tree,否则会出现下面这种情况，需要输入token令牌,具体token值参考命令行中http://localhost:8888/?token=令牌值 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/jupyter%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2.png"                      alt="jupyter登录界面" style="zoom:80%;"                 ><p>下图为notebook编辑界面，刚进入该页面需要连接内核，等内核显示空闲，此时单元格可以运行；对于运行时间长的复杂程序，内核会显示<strong>忙碌状态</strong>，此时想要<strong>运行其他单元格</strong>需要等<strong>内核释放资源转为空闲时</strong>才可以。若<strong>内核长时间忙碌，程序无响应</strong>，可以选择<strong>Kernel——&gt;restart来重启内核</strong>，需要注意的是重启后<strong>进度及变量会丢失</strong>，需要重新运行</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/jupyter%E6%93%8D%E4%BD%9C%E7%95%8C%E9%9D%A2.png"                      alt="jupyter操作界面" style="zoom:80%;"                 ><p><strong>代码模式</strong>下和常用的IDE类似，都是可以输入内容后运行程序；<strong>markdown模式</strong>则类似于做文字笔记，点击运行后内容会以文本的形式显示出来，并不执行代码操作，因此编辑时注意选择的编辑模式。</p><p>编辑区操作分为命令行模式与编辑模式，按<strong>ESC键可由编辑模式转为命令行模式(单元格变蓝线)，按Enter键可由命令行模式转为编辑模式（单元格变绿线）</strong>，常用的像</p><ul><li><strong>“A”——在上面插入单元格</strong></li><li><strong>“B”——在下面插入单元格</strong></li><li><strong>“X”——剪切选择的单元格</strong></li><li><strong>“DD”——删除单元格</strong></li><li><strong>方向键“上”或“下”——切换当前选中的单元格</strong></li><li><strong>“CTRL+ENTER”——运行选中的单元格</strong></li><li><strong>“CTRL+S”——保存当前文件</strong></li><li><strong>“TAB”——自动补全代码</strong></li></ul><p>另外其他的快捷键查看可按键盘 <strong>H</strong> 键可调出jupyter notebook快捷键列表，全部快捷键如下图</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/jupyter%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB.png"                      alt="jupyter键盘快捷键汇总"                ></p><p>Magic Code魔术代码：IPython的一些特殊命令（不是内置于 Python 本身）被称为“魔术”命令。魔术命令是以百分号％为前缀的任何命令。</p><table><thead><tr><th>魔术命令</th><th>含义</th><th>用法</th></tr></thead><tbody><tr><td><strong>%matplotlib</strong></td><td>指定 matplotlib 的后端(backend)</td><td>%matplotlib (backend)</td></tr><tr><td><strong>％timeit</strong></td><td>检查任何 Python 语句的执行时间</td><td>%timeit python语句</td></tr><tr><td><strong>%run</strong></td><td>在Notebook中运行任意的Python文件</td><td>%run py文件</td></tr></tbody></table><h2 id="二、jupyter-Lab"><a href="#二、jupyter-Lab" class="headerlink" title="二、jupyter Lab"></a><strong>二、jupyter Lab</strong></h2><h3 id="1、安装-1"><a href="#1、安装-1" class="headerlink" title="1、安装"></a><strong>1、安装</strong></h3><p>安装jupyter lab可以使用conda方式，也可以选择pip方式</p><table><thead><tr><th>安装方式</th><th>安装命令</th></tr></thead><tbody><tr><td>pip</td><td>pip install jupyterlab</td></tr><tr><td>conda</td><td>conda install -c conda-forge jupyterlab</td></tr></tbody></table><h3 id="2、使用"><a href="#2、使用" class="headerlink" title="2、使用"></a><strong>2、使用</strong></h3><p>在命令行输入**<code>jupyter lab</code>**即可进入开发环境，和jupyter notebook类似，都是打开本地HTML文件或者在浏览器中输入lab网址。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/jupyter-lab%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%BD%91%E5%9D%80.png"                      alt="jupyter-lab命令行网址" style="zoom:80%;"                 > <h2 id="三、谷歌Colaboratory"><a href="#三、谷歌Colaboratory" class="headerlink" title="三、谷歌Colaboratory"></a>三、谷歌Colaboratory</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网址：https://colab.research.google.com/</span><br></pre></td></tr></table></figure></div><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/colaboratory%E8%B5%B7%E5%A7%8B%E7%95%8C%E9%9D%A2.png"                      alt="colaboratory起始界面" style="zoom:80%;"                 ><p>谷歌的notebook需要用VPN才能访问</p><h2 id="四、kaggle的notebook"><a href="#四、kaggle的notebook" class="headerlink" title="四、kaggle的notebook"></a><strong>四、kaggle的notebook</strong></h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网址：https://www.kaggle.com/</span><br></pre></td></tr></table></figure></div><h2 id="五、百度飞桨AI-notebook"><a href="#五、百度飞桨AI-notebook" class="headerlink" title="五、百度飞桨AI notebook"></a><strong>五、百度飞桨AI notebook</strong></h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网址：https://aistudio.baidu.com/</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDE </tag>
            
            <tag> notebook </tag>
            
            <tag> 编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-redefine主题的说说版块、音乐插件与评论系统设置</title>
      <link href="/2023/04/02/hexo-redefine%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%B4%E8%AF%B4%E7%89%88%E5%9D%97%E3%80%81%E9%9F%B3%E4%B9%90%E6%8F%92%E4%BB%B6%E4%B8%8E%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE/"/>
      <url>/2023/04/02/hexo-redefine%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%B4%E8%AF%B4%E7%89%88%E5%9D%97%E3%80%81%E9%9F%B3%E4%B9%90%E6%8F%92%E4%BB%B6%E4%B8%8E%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<script defer src="/_vercel/insights/script.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​针对我安装或者配置时遇到的困难分享一下，大家如果有遇到其他的问题，可以评论区讨论一下或者电子邮件联系，希望能帮到各位。</p><h2 id="Artitalk说说版块设置及问题"><a href="#Artitalk说说版块设置及问题" class="headerlink" title="Artitalk说说版块设置及问题"></a>Artitalk说说版块设置及问题</h2><h3 id="配置需要"><a href="#配置需要" class="headerlink" title="配置需要"></a>配置需要</h3><ol><li><strong>Artitalk官方文档</strong></li><li><strong>LeanCloud数据存储库（国内版）</strong></li></ol><h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="1、LeanCloud"><a href="#1、LeanCloud" class="headerlink" title="1、LeanCloud"></a>1、LeanCloud</h4><p>​<strong>由于用Artitalk的方式部署说说，需要将说说内容存储到后端数据存储库中，因而用到了LeanCloud（Artitalk官网方法）</strong></p><p>​LeanCloud有国内版与国际版，Artitalk选择的是LeanCloud国际版，LeanCloud 的国际版基本上在中国大陆地区已经无法使用，所以国内用户应使用国内版 LeanCloud，国内版与国际版差异不大，配置过程基本一致。</p><p><em><strong>具体设置过程</strong></em></p><p>1、前往 <a class="link"   href="https://leancloud.app/" >LeanCloud 国内版 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，注册账号。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/leancloud%E9%A6%96%E9%A1%B5.png"                      alt="leancloud首页" style="zoom: 50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/leancloud%E6%B3%A8%E5%86%8C.png"                      alt="leancloud注册" style="zoom: 67%;"                 ><p>2、注册完成之后根据 LeanCloud 的提示绑定手机号和邮箱。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/leancloud%E7%BB%91%E5%AE%9A%E6%89%8B%E6%9C%BA%E5%8F%B71.png"                      alt="leancloud绑定手机号1" style="zoom:50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/leancloud%E7%BB%91%E5%AE%9A%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1.png"                      alt="LeanCloud绑定电子邮箱" style="zoom:50%;"                 ><p>3、绑定完成之后点击<code>创建应用</code>，应用名称随意，接着在<code>结构化数据</code>中创建 <code>class</code>，命名为 <code>shuoshuo</code>。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/leancloud%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8.png"                      style="zoom: 67%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E5%88%9B%E5%BB%BAshuoshuo%E7%B1%BB.png"                      alt="创建shuoshuo类" style="zoom: 50%;"                 ><p>4、在你新建的应用中找到<code>结构化数据</code>下的<code>_User</code>。点击<code>添加行</code>，输入想用的用户名及密码。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/user1.png"                      alt="user1" style="zoom:67%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/user2.png"                      alt="user2" style="zoom:67%;"                 ><p>5、回到<code>结构化数据</code>中，点击 <code>class</code> 下的 <code>shuoshuo</code>。找到权限，在 <code>Class 访问权限</code>中将 <code>add_fields</code> 以及 <code>create</code> 权限设置为指定用户，输入你刚才输入的用户名会自动匹配。为了安全起见，将 <code>delete</code> 和 <code>update</code> 也设置为跟它们一样的权限。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/shuoshuo%E6%9D%83%E9%99%901.png"                      style="zoom: 67%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E8%AF%B4%E8%AF%B4quanxian.png"                      style="zoom: 80%;"                 ><p>6、然后新建一个名为<code>atComment</code>的class，权限什么的使用默认的即可。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E5%88%9B%E5%BB%BAatComment.png"                      alt="创建atComment" style="zoom: 67%;"                 ><p>7、点击 <code>class</code> 下的 <code>_User</code> 添加列，列名称为 <code>img</code>，默认值填上你这个账号想要用的发布说说的头像url，这一项不进行配置，说说头像会显示为默认头像 —— Artitalk 的 logo。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/user%E6%B7%BB%E5%8A%A0%E5%88%971.png"                      alt="user添加列" style="zoom: 67%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/userimg.png"                      alt="userimg" style="zoom: 67%;"                 ><p>8、在菜单栏最下面找到设置-&gt; 应用凭证，记下来 <code>AppID</code> 和 <code>AppKey</code> ，一会儿用。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E5%BA%94%E7%94%A8key.png"                      alt="应用key" style="zoom:67%;"                 ><p>9、最后将 <code>_User</code> 中的权限全部调为指定用户，或者数据创建者，为了保证不被篡改用户数据以达到强制发布说说。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/user%E6%9D%83%E9%99%902.png"                      alt="user权限2" style="zoom: 67%;"                 ><h4 id="2、Artitalk"><a href="#2、Artitalk" class="headerlink" title="2、Artitalk"></a>2、Artitalk</h4><p>下面为artitalk给出的示例代码，其中还有很多配置项需要补充，详情见<a href="https://artitalk.js.org/settings.html#%F0%9F%98%9C-artitalk%E6%94%AF%E6%8C%81%E4%B8%A4%E7%A7%8D%E5%88%9D%E5%A7%8B%E5%8C%96%E6%96%B9%E5%BC%8F"><strong>Artitalk配置项</strong></a></p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引用 artitalk --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">data-swup-reload-script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/artitalk&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 存放说说的容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;artitalk_main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">new</span> <span class="title class_">Artitalk</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">appId</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// Your LeanCloud appId</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">appKey</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// Your LeanCloud appKey</span></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>注：<strong>Redefine 2.30版本进行了改动：</strong>删除 pjax，使用 swup 作为单页应用引擎，所以原来的说说采用的<code>&lt;script async data-pjax&gt;</code>，要修改为 <code>&lt;script data-swup-reload-script&gt;</code>，不然会出现<code>ERROR：Artitalk is not define</code></p><p>给出的使用说明：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/artitalk%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.png"                      alt="artitalk使用说明" style="zoom: 67%;"                 ><h3 id="说说页面编辑"><a href="#说说页面编辑" class="headerlink" title="说说页面编辑"></a>说说页面编辑</h3><p>​windows在hexo博客根目录下用cmd命令行或者git bash或者PowerShell 输入</p><p> <strong><code>hexo new page</code> 命令创建新页面</strong>，我设置的名字叫 <code>shuoshuo</code>，则输入</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page shuoshuo</span><br></pre></td></tr></table></figure></div><p>博客根目录下的 <code>source</code> 文件夹里就会自动新建一个 <code>shuoshuo</code> 文件夹</p><p><strong>打开里面的 <code>index.md</code> 文件</strong>中进行如下配置：</p><h4 id="1、修改index-md文件的front-matter"><a href="#1、修改index-md文件的front-matter" class="headerlink" title="1、修改index.md文件的front-matter"></a><strong>1、修改index.md文件的front-matter</strong></h4><p>​如果你之前用本地部署方式，在 <code>/source/_data/</code> 目录下面创建了 <code>essays.yml</code>，请把此文件删除或者重命名到别的名字，否则 <code>Artitalk</code> 不会生效。</p><p>修改标题为说说</p><p>——</p><p>title: 说说</p><p>——</p><h4 id="2、编辑index-md的内容"><a href="#2、编辑index-md的内容" class="headerlink" title="2、编辑index.md的内容"></a><strong>2、编辑index.md的内容</strong></h4><p>根据REDEFINE主题给出的说说版块示例，</p><ul><li>国际版是不需要serverURL的</li><li>而国内版需要serverURL，具体内容对应 LeanCloud 创建的应用中绑定的 API 域名</li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/API%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9Aleancloud.png"                      alt="API域名绑定leancloud" style="zoom: 67%;"                 ><ul><li>正常 LeanCloud 的 <code>serverURL</code> 需要备案，但是估计很多博客作者都没用备案域名，所以这里有个替代方案，就是<strong>使用 <code>https://avoscloud.com</code> 这个地址作为 <code>serverURL</code></strong></li></ul><p>​<span style="background-color: #ff6600;">下面代码块为示例代码</span>，<strong>可以直接粘到index.md文件中</strong>，需要注意的是下面代码中的 <code>&lt;script async data-pjax type=&quot;text/javascript&quot; src=&quot;https://photo-1314795557.cos.ap-beijing.myqcloud.com/artitalk.js&quot;&gt;&lt;/script&gt;</code>，其中src是指artitalk.js文件位置，他用的是自己的COS云存储链接，<strong>可以换成官网给出的UNPKG方式的<code>https://unpkg.com/artitalk</code>或者JsDelivr的 <code>https://cdn.jsdelivr.net/npm/artitalk</code><strong>，</strong>还可以将JS文件下载上传到自己的云存储，用自己的云存储链接</strong>（我用的是OSS）</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引用 artitalk --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">data-pjax</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://photo-1314795557.cos.ap-beijing.myqcloud.com/artitalk.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 存放说说的容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;artitalk_main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">data-pjax</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">new</span> <span class="title class_">Artitalk</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">appId</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// Your LeanCloud appId</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">appKey</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// Your LeanCloud appKey</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">serverURL</span>: <span class="string">&#x27;https://avoscloud.com&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">pageSize</span>: <span class="number">50</span>, <span class="comment">//每页评论数量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">shuoPla</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">//评论框里显示，可以不填</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">motion</span>: <span class="number">0</span>, <span class="comment">//加载动画的开关 0（关闭），1（开启）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">atComment</span>: <span class="number">0</span>, <span class="comment">//评论功能的开关 0（关闭），1（开启）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">bgImg</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">//评论框里的背景，可以不填</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">color1</span>: <span class="string">&#x27;#ffffff&#x27;</span>, <span class="comment">//自定义颜色，有几种方式</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">color2</span>: <span class="string">&#x27;#ffffff&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">color3</span>: <span class="string">&#x27;#3b9a9c&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>下图为我的index.md文件的具体设置内容，实际编辑内容按照你的需要设置！</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E8%AF%B4%E8%AF%B4md%E6%96%87%E4%BB%B6.png"                      alt="说说md文件" style="zoom: 67%;"                 ><h4 id="3、游客说说设置"><a href="#3、游客说说设置" class="headerlink" title="3、游客说说设置"></a>3、游客说说设置</h4><p>​需要在LeanCloud国内版应用的<code>数据存储——结构化数据——_User</code> <code>添加行</code>，和上述步骤类似，我设置的游客用户名为test，密码为123456，方便游客登录。</p><p>​然后就是游客权限设置，由于游客应该对于说说只有发布、评论功能，因而需要将其与管理员用户区分开来.</p><ul><li><code>_User类的权限</code>维持不变，即<code>_User</code>保持如下：</li></ul><table><thead><tr><th align="center">用户对class的操作</th><th align="center">权限</th></tr></thead><tbody><tr><td align="center">add_fields</td><td align="center">管理员User</td></tr><tr><td align="center">create</td><td align="center">管理员User</td></tr><tr><td align="center">delete</td><td align="center">管理员User</td></tr><tr><td align="center">update</td><td align="center">管理员User</td></tr><tr><td align="center">find</td><td align="center">所有用户</td></tr><tr><td align="center">get</td><td align="center">所有用户</td></tr></tbody></table><ul><li><code>shuoshuo类的权限</code>发生更改，即<code>shuoshuo</code>保持如下：</li></ul><table><thead><tr><th align="center">用户对class的操作</th><th align="center">权限</th></tr></thead><tbody><tr><td align="center">add_fields</td><td align="center">所有用户</td></tr><tr><td align="center">create</td><td align="center">所有用户</td></tr><tr><td align="center">delete</td><td align="center">管理员USER</td></tr><tr><td align="center">update</td><td align="center">管理员USER</td></tr><tr><td align="center">find</td><td align="center">所有用户</td></tr><tr><td align="center">get</td><td align="center">所有用户</td></tr></tbody></table><p>​解读：由于游客账号只有一个，而游客不固定，因而当游客想要发表说说时应当可以实现发布——操作<code>creat</code>为全体用户，此外，一名游客不能对其他游客的说说进行编辑也不能删除，因而设置操作<code>delete</code>与<code>update</code>为管理员权限。</p><h3 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h3><p><strong>这是我博客hexo-redefine主题设置的说说版块样式</strong></p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E8%AF%B4%E8%AF%B4%E6%9D%BF%E5%9D%97%E6%95%88%E6%9E%9C%E5%9B%BE.png"                      alt="说说版块效果图" style="zoom:67%;"                 ><h2 id="Aplayer音乐插件设置及问题"><a href="#Aplayer音乐插件设置及问题" class="headerlink" title="Aplayer音乐插件设置及问题"></a>Aplayer音乐插件设置及问题</h2><ul><li>插件来自：<a class="link"   href="https://github.com/DIYgod/APlayer" >DIYgod&#x2F;APlayer: Wow, such a beautiful HTML5 music player (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li>官方中文文档：<a class="link"   href="https://aplayer.js.org/#/zh-Hans/" >APlayer首页 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li>ReDefine演示站点：<a class="link"   href="https://redefine.ohevan.com/2022/10/02/theme-demo/" >主题样式 Demo - Theme Redefine (ohevan.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li></ul><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p>​一个 HTML 音乐播放器，可以实现博客全站音乐播放，效果如下：</p><p><code>type: fix</code> 模式：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/aplayer%E6%95%88%E6%9E%9C%E5%9B%BE.png"                      alt="aplayer效果图" style="zoom: 50%;"                 ><p><code>type: mini</code> 模式</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/aplayer%E6%A0%B7%E5%9B%BE2.png"                      alt="aplayer样图2" style="zoom: 67%;"                 ><h3 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h3><ul><li><code>enable</code> 是否启用</li><li><code>type</code> 播放器类型，<code>fixed</code> 固定，<code>mini</code> 迷你</li><li><code>audios</code>是音乐源<ul><li><code>name</code> 音乐名字</li><li><code>artist</code> 歌手名</li><li><code>url</code> 音乐源的 <code>url</code>。音乐 web 链接，注意，<strong>此链接为能够打开直接播放的那种，而不是一个网盘等下载链接</strong>！</li><li><code>cover</code> 音乐的封面图片。请填写链接。音乐封面 web 链接，符合图片格式png、jpg、webp等。</li></ul></li></ul><p>示例配置如下：（注意每首歌的**<code>缩进</code>**与 <code>-</code> 标志）</p><div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="attr">aplayer:</span> <span class="comment"># APlayer</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#true or flase</span></span><br><span class="line">    <span class="attr">audios:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Imagine</span> <span class="comment"># audio name 音乐名</span></span><br><span class="line">        <span class="attr">artist:</span> <span class="string">John</span> <span class="string">Lennon</span> <span class="comment"># audio artist 歌手名</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">https://evan.beee.top/music/Imagine%20-%20John%20Lennon.mp3</span> <span class="comment"># audio url 音乐链接</span></span><br><span class="line">        <span class="attr">cover:</span> <span class="string">https://evan.beee.top/music/covers/Lennon_Imagine_Sleeve_1975.jpg</span> <span class="comment"># audio cover url</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Something</span> <span class="string">Just</span> <span class="string">Like</span> <span class="string">This</span></span><br><span class="line">        <span class="attr">artist:</span> <span class="string">Coldplay</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">https://evan.beee.top/music/Something%20Just%20Like%20This%20-%20The%20Chainsmokers%E3%80%81Coldplay.mp3</span></span><br><span class="line">        <span class="attr">cover:</span> <span class="string">https://evan.beee.top/music/covers/Something_Just_Like_This.png</span></span><br></pre></td></tr></table></figure></div><blockquote><p>下面是我用过的几个音乐外链或下载网站：</p><p><a class="link"   href="https://mp3.ltyuanfang.cn/?name=Se%C3%B1orita&type=netease" >远方在线音乐搜索 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：<code>https://mp3.ltyuanfang.cn/?name=Señorita&amp;type=netease</code>（推荐）</p><p><a class="link"   href="https://tool.liumingye.cn/music/?page=homePage#/" >MyfreeMP3(liumingye.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：<code>https://tool.liumingye.cn/music/?page=homePage#/</code>（推荐）</p><p><a class="link"   href="https://music.xf1433.com/" >音乐外链在线获取 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>：<code>https://music.xf1433.com</code></p></blockquote><h3 id="实际问题"><a href="#实际问题" class="headerlink" title="实际问题"></a>实际问题</h3><p>​<strong>我在配置该插件的时候，总是遇到音乐无法播放与封面无法加载的问题，我意识到这可能是自己设置的<code>url</code>和<code>cover</code>链接有问题。</strong></p><p>​我是用的多吉云存储的音乐MP3文件与封面png文件，<strong>多吉云云存储会搭配融合CDN做加速</strong>，因而我也设置了加速域名，我试着在浏览器地址栏<strong>单独输入外链链接</strong>来访问音乐mp3时，发现音乐<strong>可以正常播放</strong>，但是我网站中<strong>使用云存储链接的Aplayer插件播放音乐却出错</strong>了。</p><p>​我打开浏览器的<code>开发者工具——控制台</code>发现， <strong>XXX.mp3与XXX.png（都是我云存储中的文件）</strong>报错为 <code>err_cert_common_name_invalid</code></p><p>​谷歌搜索这个错误发现<strong>云存储域名是HTTP协议，证书存在问题，导致访问域名无效</strong>，因而我又去<strong>申请SSL证书</strong>来使CDN加速域名符合HTTPS协议，</p><p>​申请SSL证书我选择的是这个网站：<a class="link"   href="https://www.mianfeissl.com/#" >免费SSL证书(mianfeissl.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，具体过程如下。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/SSL%E8%AF%81%E4%B9%A6%E5%85%8D%E8%B4%B9%E7%94%B3%E8%AF%B7.png"                      alt="SSL证书免费申请" style="zoom: 50%;"                 ><p>​申请完之后，去多吉云的融合CDN配置HTTPS：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/%E5%A4%9A%E5%90%89%E4%BA%91https%E8%AE%BE%E7%BD%AE.png"                      alt="多吉云https设置" style="zoom: 50%;"                 ><p>​访问后显示连接安全，并且Aplayer可以正常播放音乐并加载封面！</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/MP3%E6%AD%A3%E5%B8%B8%E6%92%AD%E6%94%BE.png"                      alt="mp3正常播放" style="zoom: 50%;"                 ><h2 id="Waline评论系统设置及问题"><a href="#Waline评论系统设置及问题" class="headerlink" title="Waline评论系统设置及问题"></a>Waline评论系统设置及问题</h2><p><strong>综合比较redefine主题给出的三种评论系统，本博客选用的评论系统是Waline！</strong></p><p>选择原因就是</p><ul><li><em><strong>功能很丰富——像可以发各种表情，动图，甚至本地图片，此外回复、点赞等功能都有</strong></em></li><li><em><strong>设置起来也不难——基本鼠标点点点就完成了</strong></em></li><li><em><strong>有评论管理界面——用户注册后可以打开个人资料界面，管理员也能对评论统一管理</strong></em></li></ul><h3 id="配置需要-1"><a href="#配置需要-1" class="headerlink" title="配置需要"></a>配置需要</h3><ol><li>LeanCloud数据存储库（国内版）</li><li>Vercel部署</li></ol><h3 id="配置过程-1"><a href="#配置过程-1" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="1、LeanCloud（国内版）"><a href="#1、LeanCloud（国内版）" class="headerlink" title="1、LeanCloud（国内版）"></a>1、LeanCloud（国内版）</h4><p>这一部分和上述Artitalk配置过程类似，不过步骤更简单点</p><ul><li><p>在创建完注册登录后，接着创建应用（名称随意）——和Artitalk一致</p></li><li><p>选择左下角的 <code>设置</code> &gt; <code>应用 Key</code>。你可以看到你的 <code>APP ID</code>,<code>APP Key</code> 和 <code>Master Key</code>。请记录它们，以便后续使用。——和Artitalk一致</p></li><li><p>区别：需要完成备案接入，选择 <code>设置</code> &gt; <code>域名绑定</code> &gt; <code>API 访问域名</code> &gt; <code>绑定新域名</code> &gt; 输入域名 &gt; <code>确定</code></p></li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/leancloud-api%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A.png"                      alt="leancloud-api绑定域名" style="zoom: 50%;"                 ><ul><li>按照页面上的提示按要求在 DNS 上完成 CNAME 解析。<strong>注意该顶级域名需要完成ICP备案</strong></li></ul><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230420234831.png"                      style="zoom:80%;"                 ><p>上述步骤完成以后，leancloud数据库便配置完毕！</p><h4 id="2、Vercel"><a href="#2、Vercel" class="headerlink" title="2、Vercel"></a>2、Vercel</h4><p><a class="link"   href="https://vercel.com/new/clone?repository-url=https://github.com/walinejs/waline/tree/main/example" >点击跳转链接 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，跳转到Vercel进行服务端部署</p><p>下面官方给出的操作步骤非常详细，可以参考下。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230420235353.png"                      style="zoom: 80%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230420235503.png"                      style="zoom:80%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230420235535.png"                      style="zoom:80%;"                 ><p>​4、点击顶部的 <code>Settings</code> - <code>Environment Variables</code> 进入环境变量配置页，并配置三个环境变量 <code>LEAN_ID</code>, <code>LEAN_KEY</code> 和 <code>LEAN_MASTER_KEY</code> 。它们的值分别对应上一步在 LeanCloud 中获得的 <code>APP ID</code>, <code>APP KEY</code>, <code>Master Key</code>。</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230421002328.png"                      style="zoom: 50%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230421002416.png"                      style="zoom: 80%;"                 ><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230421002501.png"                      style="zoom: 80%;"                 ><p><strong>vercel.app</strong> 默认域名在中国大陆地区被墙，所以建议在 Vercel 上面绑定自定义域名，可以用<code>vercel.根域名.com</code>等，Vercel绑定域名如下：(￣o￣) . z Z</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230421002603.png"                      style="zoom: 67%;"                 ><p>拿到你需要的 <code>serverUrl</code> （即 vercel 应用的链接，可以是上述绑定的自定义域名）后，填写到 <code>_config.redefine.yml</code> 中。</p><div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comment:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">waline:</span></span><br><span class="line">      <span class="attr">serverUrl:</span> <span class="string">https://example.example.com</span> <span class="comment">#你拿到的 serverUrl</span></span><br></pre></td></tr></table></figure></div><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p>博主建议先自己注册一个账号，Waline应该是默认第一个注册用户为管理员，管理界面：Vercel自定义域名&#x2F;ui，</p><p>管理平台界面如下：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230421003633.png"                      style="zoom: 50%;"                 ><p>评论效果图如下：</p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://c200108.oss-cn-beijing.aliyuncs.com/imgs/20230421003259.png"                      style="zoom:67%;"                 ><blockquote><p><strong><a class="link"   href="https://www.dogecloud.com/?iuid=6247" >做个推广，多吉云还是很给力的，如果需要免费云存储与CDN的话可以试试， 每月免费10G云存储与20G融合CDN， 此外还有免费每月20G存储的视频云和2858分钟的转码包，对于音视频点播啥的都挺好用 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></p><p><strong>（づ￣3￣）づ╭❤～</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 说说 </tag>
            
            <tag> 音乐播放器 </tag>
            
            <tag> 评论系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo初始操作</title>
      <link href="/2023/04/01/hexo%E5%88%9D%E5%A7%8B%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/04/01/hexo%E5%88%9D%E5%A7%8B%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div><p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
